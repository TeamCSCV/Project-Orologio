
AlarmTiming.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ec  00800100  00002e0c  00002ea0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  008005ec  008005ec  0000338c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000338c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000033bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  000033fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006d08  00000000  00000000  00003674  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013ec  00000000  00000000  0000a37c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002685  00000000  00000000  0000b768  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000864  00000000  00000000  0000ddf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cb5  00000000  00000000  0000e654  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000041bb  00000000  00000000  0000f309  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000340  00000000  00000000  000134c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
       4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      1c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>

00000068 <__ctors_start>:
      68:	38 02       	muls	r19, r24
      6a:	5a 0d       	add	r21, r10

0000006c <__ctors_end>:
      6c:	11 24       	eor	r1, r1
      6e:	1f be       	out	0x3f, r1	; 63
      70:	cf ef       	ldi	r28, 0xFF	; 255
      72:	d8 e0       	ldi	r29, 0x08	; 8
      74:	de bf       	out	0x3e, r29	; 62
      76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
      78:	15 e0       	ldi	r17, 0x05	; 5
      7a:	a0 e0       	ldi	r26, 0x00	; 0
      7c:	b1 e0       	ldi	r27, 0x01	; 1
      7e:	ec e0       	ldi	r30, 0x0C	; 12
      80:	fe e2       	ldi	r31, 0x2E	; 46
      82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
      84:	05 90       	lpm	r0, Z+
      86:	0d 92       	st	X+, r0
      88:	ac 3e       	cpi	r26, 0xEC	; 236
      8a:	b1 07       	cpc	r27, r17
      8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
      8e:	26 e0       	ldi	r18, 0x06	; 6
      90:	ac ee       	ldi	r26, 0xEC	; 236
      92:	b5 e0       	ldi	r27, 0x05	; 5
      94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
      96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
      98:	a8 30       	cpi	r26, 0x08	; 8
      9a:	b2 07       	cpc	r27, r18
      9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
      9e:	10 e0       	ldi	r17, 0x00	; 0
      a0:	c6 e3       	ldi	r28, 0x36	; 54
      a2:	d0 e0       	ldi	r29, 0x00	; 0
      a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
      a6:	21 97       	sbiw	r28, 0x01	; 1
      a8:	fe 01       	movw	r30, r28
      aa:	0e 94 fe 16 	call	0x2dfc	; 0x2dfc <__tablejump2__>
      ae:	c4 33       	cpi	r28, 0x34	; 52
      b0:	d1 07       	cpc	r29, r17
      b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
      b4:	0e 94 2f 02 	call	0x45e	; 0x45e <main>
      b8:	0c 94 04 17 	jmp	0x2e08	; 0x2e08 <_exit>

000000bc <__bad_interrupt>:
      bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <_Z14ds1307_dec2bcdh>:




uint8_t ds1307_dec2bcd(uint8_t val) {
	return val + 6 * (val / 10);
      c0:	9d ec       	ldi	r25, 0xCD	; 205
      c2:	89 9f       	mul	r24, r25
      c4:	91 2d       	mov	r25, r1
      c6:	11 24       	eor	r1, r1
      c8:	96 95       	lsr	r25
      ca:	96 95       	lsr	r25
      cc:	96 95       	lsr	r25
      ce:	29 2f       	mov	r18, r25
      d0:	22 0f       	add	r18, r18
      d2:	92 0f       	add	r25, r18
      d4:	29 2f       	mov	r18, r25
      d6:	22 0f       	add	r18, r18
}
      d8:	82 0f       	add	r24, r18
      da:	08 95       	ret

000000dc <_Z14ds1307_bcd2dech>:
uint8_t ds1307_bcd2dec(uint8_t val) {
	return val - 6 * (val >> 4);
      dc:	28 2f       	mov	r18, r24
      de:	30 e0       	ldi	r19, 0x00	; 0
      e0:	35 95       	asr	r19
      e2:	27 95       	ror	r18
      e4:	35 95       	asr	r19
      e6:	27 95       	ror	r18
      e8:	35 95       	asr	r19
      ea:	27 95       	ror	r18
      ec:	35 95       	asr	r19
      ee:	27 95       	ror	r18
      f0:	92 2f       	mov	r25, r18
      f2:	99 0f       	add	r25, r25
      f4:	29 0f       	add	r18, r25
      f6:	92 2f       	mov	r25, r18
      f8:	99 0f       	add	r25, r25
}
      fa:	89 1b       	sub	r24, r25
      fc:	08 95       	ret

000000fe <_Z11ds1307_initv>:
void ds1307_init() {
	i2c_init();
      fe:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z8i2c_initv>
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     102:	83 e0       	ldi	r24, 0x03	; 3
     104:	8a 95       	dec	r24
     106:	f1 f7       	brne	.-4      	; 0x104 <_Z11ds1307_initv+0x6>
     108:	08 95       	ret

0000010a <_Z14ds1307_setdatehhhhhhh>:
	_delay_us(10);
}
void ds1307_setdate(uint8_t year, uint8_t month, uint8_t day, uint8_t dayofweek, uint8_t hour, uint8_t minute, uint8_t second) {
     10a:	cf 92       	push	r12
     10c:	ef 92       	push	r14
     10e:	ff 92       	push	r15
     110:	0f 93       	push	r16
     112:	1f 93       	push	r17
     114:	cf 93       	push	r28
     116:	df 93       	push	r29
     118:	c8 2f       	mov	r28, r24
     11a:	d6 2f       	mov	r29, r22
     11c:	14 2f       	mov	r17, r20
     11e:	f2 2e       	mov	r15, r18
	

	i2c_start_wait(DS1307_ADDRESS | I2C_WRITE);
     120:	80 ed       	ldi	r24, 0xD0	; 208
     122:	0e 94 4a 01 	call	0x294	; 0x294 <_Z14i2c_start_waith>
	i2c_write(0x00);
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(second));
     12c:	8c 2d       	mov	r24, r12
     12e:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     132:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(minute));
     136:	8e 2d       	mov	r24, r14
     138:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     13c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(hour));
     140:	80 2f       	mov	r24, r16
     142:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     146:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(dayofweek));
     14a:	8f 2d       	mov	r24, r15
     14c:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     150:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(day));
     154:	81 2f       	mov	r24, r17
     156:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     15a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(month));
     15e:	8d 2f       	mov	r24, r29
     160:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     164:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(ds1307_dec2bcd(year));
     168:	8c 2f       	mov	r24, r28
     16a:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z14ds1307_dec2bcdh>
     16e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_write(0x00);
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_stop();
     178:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z8i2c_stopv>
}
     17c:	df 91       	pop	r29
     17e:	cf 91       	pop	r28
     180:	1f 91       	pop	r17
     182:	0f 91       	pop	r16
     184:	ff 90       	pop	r15
     186:	ef 90       	pop	r14
     188:	cf 90       	pop	r12
     18a:	08 95       	ret

0000018c <_Z14ds1307_getdatePhS_S_S_S_S_S_>:
void ds1307_getdate(uint8_t *year, uint8_t *month, uint8_t *day,uint8_t *dayofweek, uint8_t *hour, uint8_t *minute, uint8_t *second) {
     18c:	6f 92       	push	r6
     18e:	7f 92       	push	r7
     190:	8f 92       	push	r8
     192:	9f 92       	push	r9
     194:	af 92       	push	r10
     196:	bf 92       	push	r11
     198:	cf 92       	push	r12
     19a:	df 92       	push	r13
     19c:	ef 92       	push	r14
     19e:	ff 92       	push	r15
     1a0:	0f 93       	push	r16
     1a2:	1f 93       	push	r17
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	ec 01       	movw	r28, r24
     1aa:	3b 01       	movw	r6, r22
     1ac:	5a 01       	movw	r10, r20
     1ae:	49 01       	movw	r8, r18
	i2c_start_wait(DS1307_ADDRESS | I2C_WRITE);
     1b0:	80 ed       	ldi	r24, 0xD0	; 208
     1b2:	0e 94 4a 01 	call	0x294	; 0x294 <_Z14i2c_start_waith>
	i2c_write(0x00);
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_Z9i2c_writeh>
	i2c_stop();
     1bc:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z8i2c_stopv>

	i2c_rep_start(DS1307_ADDRESS | I2C_READ);
     1c0:	81 ed       	ldi	r24, 0xD1	; 209
     1c2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <_Z13i2c_rep_starth>
	*second = ds1307_bcd2dec(i2c_readAck() & 0x7F);
     1c6:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     1ca:	8f 77       	andi	r24, 0x7F	; 127
     1cc:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     1d0:	f6 01       	movw	r30, r12
     1d2:	80 83       	st	Z, r24
	*minute = ds1307_bcd2dec(i2c_readAck());
     1d4:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     1d8:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     1dc:	f7 01       	movw	r30, r14
     1de:	80 83       	st	Z, r24
	*hour = ds1307_bcd2dec(i2c_readAck());
     1e0:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     1e4:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     1e8:	f8 01       	movw	r30, r16
     1ea:	80 83       	st	Z, r24
	*dayofweek = ds1307_bcd2dec(i2c_readAck());
     1ec:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     1f0:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     1f4:	f4 01       	movw	r30, r8
     1f6:	80 83       	st	Z, r24
	*day = ds1307_bcd2dec(i2c_readAck());
     1f8:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     1fc:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     200:	f5 01       	movw	r30, r10
     202:	80 83       	st	Z, r24
	*month = ds1307_bcd2dec(i2c_readAck());
     204:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z11i2c_readAckv>
     208:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     20c:	f3 01       	movw	r30, r6
     20e:	80 83       	st	Z, r24
	*year = ds1307_bcd2dec(i2c_readNak());
     210:	0e 94 98 01 	call	0x330	; 0x330 <_Z11i2c_readNakv>
     214:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z14ds1307_bcd2dech>
     218:	88 83       	st	Y, r24
	i2c_stop();
     21a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z8i2c_stopv>
}
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	1f 91       	pop	r17
     224:	0f 91       	pop	r16
     226:	ff 90       	pop	r15
     228:	ef 90       	pop	r14
     22a:	df 90       	pop	r13
     22c:	cf 90       	pop	r12
     22e:	bf 90       	pop	r11
     230:	af 90       	pop	r10
     232:	9f 90       	pop	r9
     234:	8f 90       	pop	r8
     236:	7f 90       	pop	r7
     238:	6f 90       	pop	r6
     23a:	08 95       	ret

0000023c <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     23c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     240:	8d ef       	ldi	r24, 0xFD	; 253
     242:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     246:	08 95       	ret

00000248 <_Z9i2c_starth>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     248:	94 ea       	ldi	r25, 0xA4	; 164
     24a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     24e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     252:	99 23       	and	r25, r25
     254:	e4 f7       	brge	.-8      	; 0x24e <_Z9i2c_starth+0x6>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     256:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     25a:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     25c:	98 30       	cpi	r25, 0x08	; 8
     25e:	11 f0       	breq	.+4      	; 0x264 <_Z9i2c_starth+0x1c>
     260:	90 31       	cpi	r25, 0x10	; 16
     262:	91 f4       	brne	.+36     	; 0x288 <_Z9i2c_starth+0x40>

	// send device address
	TWDR = address;
     264:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     268:	84 e8       	ldi	r24, 0x84	; 132
     26a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     26e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     272:	88 23       	and	r24, r24
     274:	e4 f7       	brge	.-8      	; 0x26e <_Z9i2c_starth+0x26>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     276:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     27a:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     27c:	88 31       	cpi	r24, 0x18	; 24
     27e:	31 f0       	breq	.+12     	; 0x28c <_Z9i2c_starth+0x44>
     280:	80 34       	cpi	r24, 0x40	; 64
     282:	31 f4       	brne	.+12     	; 0x290 <_Z9i2c_starth+0x48>

	return 0;
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	08 95       	ret
	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     290:	81 e0       	ldi	r24, 0x01	; 1

	return 0;

}/* i2c_start */
     292:	08 95       	ret

00000294 <_Z14i2c_start_waith>:


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     294:	94 ea       	ldi	r25, 0xA4	; 164
     296:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     29a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     29e:	99 23       	and	r25, r25
     2a0:	e4 f7       	brge	.-8      	; 0x29a <_Z14i2c_start_waith+0x6>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2a2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2a6:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     2a8:	98 30       	cpi	r25, 0x08	; 8
     2aa:	11 f0       	breq	.+4      	; 0x2b0 <_Z14i2c_start_waith+0x1c>
     2ac:	90 31       	cpi	r25, 0x10	; 16
     2ae:	91 f7       	brne	.-28     	; 0x294 <_Z14i2c_start_waith>
    
    	// send device address
    	TWDR = address;
     2b0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    	TWCR = (1<<TWINT) | (1<<TWEN);
     2b4:	94 e8       	ldi	r25, 0x84	; 132
     2b6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     2ba:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2be:	99 23       	and	r25, r25
     2c0:	e4 f7       	brge	.-8      	; 0x2ba <_Z14i2c_start_waith+0x26>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2c2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2c6:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     2c8:	90 32       	cpi	r25, 0x20	; 32
     2ca:	11 f0       	breq	.+4      	; 0x2d0 <_Z14i2c_start_waith+0x3c>
     2cc:	98 35       	cpi	r25, 0x58	; 88
     2ce:	41 f4       	brne	.+16     	; 0x2e0 <_Z14i2c_start_waith+0x4c>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     2d0:	94 e9       	ldi	r25, 0x94	; 148
     2d2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     2d6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2da:	94 fd       	sbrc	r25, 4
     2dc:	fc cf       	rjmp	.-8      	; 0x2d6 <_Z14i2c_start_waith+0x42>
     2de:	da cf       	rjmp	.-76     	; 0x294 <_Z14i2c_start_waith>
     2e0:	08 95       	ret

000002e2 <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     2e2:	0e 94 24 01 	call	0x248	; 0x248 <_Z9i2c_starth>

}/* i2c_rep_start */
     2e6:	08 95       	ret

000002e8 <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     2e8:	84 e9       	ldi	r24, 0x94	; 148
     2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     2ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2f2:	84 fd       	sbrc	r24, 4
     2f4:	fc cf       	rjmp	.-8      	; 0x2ee <_Z8i2c_stopv+0x6>

}/* i2c_stop */
     2f6:	08 95       	ret

000002f8 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     2f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     2fc:	84 e8       	ldi	r24, 0x84	; 132
     2fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     302:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     306:	88 23       	and	r24, r24
     308:	e4 f7       	brge	.-8      	; 0x302 <_Z9i2c_writeh+0xa>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     30a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     30e:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     310:	88 32       	cpi	r24, 0x28	; 40
     312:	11 f0       	breq	.+4      	; 0x318 <_Z9i2c_writeh+0x20>
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	08 95       	ret
	return 0;
     318:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
     31a:	08 95       	ret

0000031c <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     31c:	84 ec       	ldi	r24, 0xC4	; 196
     31e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR & (1<<TWINT)));    
     322:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     326:	88 23       	and	r24, r24
     328:	e4 f7       	brge	.-8      	; 0x322 <_Z11i2c_readAckv+0x6>

    return TWDR;
     32a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

}/* i2c_readAck */
     32e:	08 95       	ret

00000330 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     330:	84 e8       	ldi	r24, 0x84	; 132
     332:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR & (1<<TWINT)));
     336:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     33a:	88 23       	and	r24, r24
     33c:	e4 f7       	brge	.-8      	; 0x336 <_Z11i2c_readNakv+0x6>
	
    return TWDR;
     33e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

}/* i2c_readNak */
     342:	08 95       	ret

00000344 <_ZN7Key_Pad8keyInputEv>:
char keys[4][3]={{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};

//Scanning the keypad repeatedly to check whether a key is pressed
char Key_Pad :: keyInput(){
	while (1){
		if (sc2.pressedBack()){
     344:	8c ee       	ldi	r24, 0xEC	; 236
     346:	95 e0       	ldi	r25, 0x05	; 5
     348:	0e 94 85 03 	call	0x70a	; 0x70a <_ZN6Screen11pressedBackEv>
     34c:	88 23       	and	r24, r24
     34e:	51 f0       	breq	.+20     	; 0x364 <_ZN7Key_Pad8keyInputEv+0x20>
			sc2.stopBlink();
     350:	8c ee       	ldi	r24, 0xEC	; 236
     352:	95 e0       	ldi	r25, 0x05	; 5
     354:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
			sc2.LCD_clear();
     358:	8c ee       	ldi	r24, 0xEC	; 236
     35a:	95 e0       	ldi	r25, 0x05	; 5
     35c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
			return 'Y';
     360:	89 e5       	ldi	r24, 0x59	; 89
     362:	08 95       	ret
		}
		KEYROW_PORT |= 0b00001111; //set all row pins to HIGH
     364:	88 b1       	in	r24, 0x08	; 8
     366:	8f 60       	ori	r24, 0x0F	; 15
     368:	88 b9       	out	0x08, r24	; 8
		for (int r=0; r<=3; r++){
     36a:	40 e0       	ldi	r20, 0x00	; 0
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	44 30       	cpi	r20, 0x04	; 4
     370:	51 05       	cpc	r21, r1
     372:	0c f0       	brlt	.+2      	; 0x376 <_ZN7Key_Pad8keyInputEv+0x32>
     374:	4f c0       	rjmp	.+158    	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
			KEYROW_DDR &= ~0b00001111; //clearing previous bits
     376:	87 b1       	in	r24, 0x07	; 7
     378:	80 7f       	andi	r24, 0xF0	; 240
     37a:	87 b9       	out	0x07, r24	; 7
			KEYCOL_DDR &= ~0b00000111; //clearing previous bits
     37c:	84 b1       	in	r24, 0x04	; 4
     37e:	88 7f       	andi	r24, 0xF8	; 248
     380:	84 b9       	out	0x04, r24	; 4
			KEYROW_DDR |= 0b00000001 << r ; //set the current pin to output
     382:	27 b1       	in	r18, 0x07	; 7
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	04 2e       	mov	r0, r20
     38a:	02 c0       	rjmp	.+4      	; 0x390 <_ZN7Key_Pad8keyInputEv+0x4c>
     38c:	88 0f       	add	r24, r24
     38e:	99 1f       	adc	r25, r25
     390:	0a 94       	dec	r0
     392:	e2 f7       	brpl	.-8      	; 0x38c <_ZN7Key_Pad8keyInputEv+0x48>
     394:	92 2f       	mov	r25, r18
     396:	98 2b       	or	r25, r24
     398:	97 b9       	out	0x07, r25	; 7
			KEYROW_PORT &= ~(0b00000001 << r); // set the current row pin to LOW
     39a:	98 b1       	in	r25, 0x08	; 8
     39c:	80 95       	com	r24
     39e:	89 23       	and	r24, r25
     3a0:	88 b9       	out	0x08, r24	; 8
			for (int c=0; c<=2; c++){
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	23 30       	cpi	r18, 0x03	; 3
     3a8:	31 05       	cpc	r19, r1
     3aa:	8c f5       	brge	.+98     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
				KEYCOL_PORT |= (0b00000001 << c);
     3ac:	65 b1       	in	r22, 0x05	; 5
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	02 2e       	mov	r0, r18
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <_ZN7Key_Pad8keyInputEv+0x76>
     3b6:	88 0f       	add	r24, r24
     3b8:	99 1f       	adc	r25, r25
     3ba:	0a 94       	dec	r0
     3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <_ZN7Key_Pad8keyInputEv+0x72>
     3be:	86 2b       	or	r24, r22
     3c0:	85 b9       	out	0x05, r24	; 5
				if (!(KEYCOL_PIN & (0b00000001 << c))){ // check each column in the respective row for a pressed key
     3c2:	83 b1       	in	r24, 0x03	; 3
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	02 2e       	mov	r0, r18
     3c8:	02 c0       	rjmp	.+4      	; 0x3ce <_ZN7Key_Pad8keyInputEv+0x8a>
     3ca:	95 95       	asr	r25
     3cc:	87 95       	ror	r24
     3ce:	0a 94       	dec	r0
     3d0:	e2 f7       	brpl	.-8      	; 0x3ca <_ZN7Key_Pad8keyInputEv+0x86>
     3d2:	80 fd       	sbrc	r24, 0
     3d4:	19 c0       	rjmp	.+50     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
					char pressed = keys[r][c]; // obtain the pressed key
     3d6:	ca 01       	movw	r24, r20
     3d8:	88 0f       	add	r24, r24
     3da:	99 1f       	adc	r25, r25
     3dc:	48 0f       	add	r20, r24
     3de:	59 1f       	adc	r21, r25
     3e0:	40 50       	subi	r20, 0x00	; 0
     3e2:	5f 4f       	sbci	r21, 0xFF	; 255
     3e4:	fa 01       	movw	r30, r20
     3e6:	e2 0f       	add	r30, r18
     3e8:	f3 1f       	adc	r31, r19
     3ea:	80 81       	ld	r24, Z
					if ((pressed!='*') & (pressed!='#')){
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	8a 32       	cpi	r24, 0x2A	; 42
     3f0:	09 f4       	brne	.+2      	; 0x3f4 <_ZN7Key_Pad8keyInputEv+0xb0>
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	99 23       	and	r25, r25
     3f6:	31 f0       	breq	.+12     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	83 32       	cpi	r24, 0x23	; 35
     3fc:	09 f4       	brne	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	91 11       	cpse	r25, r1
     402:	09 c0       	rjmp	.+18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
						return pressed;
					}
					return 'X';
     404:	88 e5       	ldi	r24, 0x58	; 88
     406:	08 95       	ret
		for (int r=0; r<=3; r++){
			KEYROW_DDR &= ~0b00001111; //clearing previous bits
			KEYCOL_DDR &= ~0b00000111; //clearing previous bits
			KEYROW_DDR |= 0b00000001 << r ; //set the current pin to output
			KEYROW_PORT &= ~(0b00000001 << r); // set the current row pin to LOW
			for (int c=0; c<=2; c++){
     408:	2f 5f       	subi	r18, 0xFF	; 255
     40a:	3f 4f       	sbci	r19, 0xFF	; 255
     40c:	cc cf       	rjmp	.-104    	; 0x3a6 <_ZN7Key_Pad8keyInputEv+0x62>
			sc2.stopBlink();
			sc2.LCD_clear();
			return 'Y';
		}
		KEYROW_PORT |= 0b00001111; //set all row pins to HIGH
		for (int r=0; r<=3; r++){
     40e:	4f 5f       	subi	r20, 0xFF	; 255
     410:	5f 4f       	sbci	r21, 0xFF	; 255
     412:	ad cf       	rjmp	.-166    	; 0x36e <_ZN7Key_Pad8keyInputEv+0x2a>
					}
					return 'X';
				}
			}
		}
	return 'X';}
     414:	88 e5       	ldi	r24, 0x58	; 88
}
     416:	08 95       	ret

00000418 <_ZN7Key_Pad10pressedKeyEv>:

char Key_Pad :: pressedKey(){
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	ec 01       	movw	r28, r24
	while (1){
	char key = keyInput();
     41e:	ce 01       	movw	r24, r28
     420:	0e 94 a2 01 	call	0x344	; 0x344 <_ZN7Key_Pad8keyInputEv>
	if (key != 'X'){
     424:	88 35       	cpi	r24, 0x58	; 88
     426:	d9 f3       	breq	.-10     	; 0x41e <_ZN7Key_Pad10pressedKeyEv+0x6>
     428:	20 e2       	ldi	r18, 0x20	; 32
     42a:	3e e4       	ldi	r19, 0x4E	; 78
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     42c:	21 15       	cp	r18, r1
     42e:	31 05       	cpc	r19, r1
     430:	39 f0       	breq	.+14     	; 0x440 <_ZN7Key_Pad10pressedKeyEv+0x28>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     432:	e9 e1       	ldi	r30, 0x19	; 25
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	31 97       	sbiw	r30, 0x01	; 1
     438:	f1 f7       	brne	.-4      	; 0x436 <_ZN7Key_Pad10pressedKeyEv+0x1e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     43a:	21 50       	subi	r18, 0x01	; 1
     43c:	31 09       	sbc	r19, r1
     43e:	f6 cf       	rjmp	.-20     	; 0x42c <_ZN7Key_Pad10pressedKeyEv+0x14>
		_delay_ms(2000);
		return key; // if a number is pressed return the pressed key
	 }
	}
}
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	08 95       	ret

00000446 <_Z41__static_initialization_and_destruction_0ii>:
			
	
	}
		
	
}
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	49 f4       	brne	.+18     	; 0x45c <_Z41__static_initialization_and_destruction_0ii+0x16>
     44a:	6f 3f       	cpi	r22, 0xFF	; 255
     44c:	7f 4f       	sbci	r23, 0xFF	; 255
     44e:	31 f4       	brne	.+12     	; 0x45c <_Z41__static_initialization_and_destruction_0ii+0x16>
#include "Tone.h"


Screen scrn;
Key_Pad key;
Tone t(3);
     450:	63 e0       	ldi	r22, 0x03	; 3
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	8d ee       	ldi	r24, 0xED	; 237
     456:	95 e0       	ldi	r25, 0x05	; 5
     458:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN4ToneC1Ei>
     45c:	08 95       	ret

0000045e <main>:


int main(void)
{
	ds1307_init();
     45e:	0e 94 7f 00 	call	0xfe	; 0xfe <_Z11ds1307_initv>
	scrn.LCD_Init();
     462:	8f ee       	ldi	r24, 0xEF	; 239
     464:	95 e0       	ldi	r25, 0x05	; 5
     466:	0e 94 b1 02 	call	0x562	; 0x562 <_ZN6Screen8LCD_InitEv>
	while (1)
	{
		

		mainLoop();
     46a:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <_Z8mainLoopv>
     46e:	fd cf       	rjmp	.-6      	; 0x46a <main+0xc>

00000470 <_GLOBAL__sub_I_scrn>:
			
	
	}
		
	
}
     470:	6f ef       	ldi	r22, 0xFF	; 255
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 23 02 	call	0x446	; 0x446 <_Z41__static_initialization_and_destruction_0ii>
     47c:	08 95       	ret

0000047e <_ZN6Screen11LCD_CommandEh>:
int _a=0 , _b=0 , _c=0 , _d=0;   //assume that the Time is in ab:cd format

//this command is use to send a command to the LCD as an unsigned char
void Screen::LCD_Command(unsigned char cmnd)      
{
	LCD_Port = (LCD_Port & 0x0F) | (cmnd & 0xF0);
     47e:	8b b1       	in	r24, 0x0b	; 11
     480:	8f 70       	andi	r24, 0x0F	; 15
     482:	96 2f       	mov	r25, r22
     484:	90 7f       	andi	r25, 0xF0	; 240
     486:	89 2b       	or	r24, r25
     488:	8b b9       	out	0x0b, r24	; 11
	LCD_Port &= ~ (1<<RS);
     48a:	8b b1       	in	r24, 0x0b	; 11
     48c:	8e 7f       	andi	r24, 0xFE	; 254
     48e:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<EN);
     490:	8b b1       	in	r24, 0x0b	; 11
     492:	82 60       	ori	r24, 0x02	; 2
     494:	8b b9       	out	0x0b, r24	; 11
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	98 2f       	mov	r25, r24
     49a:	9a 95       	dec	r25
     49c:	f1 f7       	brne	.-4      	; 0x49a <_ZN6Screen11LCD_CommandEh+0x1c>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     49e:	9b b1       	in	r25, 0x0b	; 11
     4a0:	9d 7f       	andi	r25, 0xFD	; 253
     4a2:	9b b9       	out	0x0b, r25	; 11
     4a4:	92 e4       	ldi	r25, 0x42	; 66
     4a6:	9a 95       	dec	r25
     4a8:	f1 f7       	brne	.-4      	; 0x4a6 <_ZN6Screen11LCD_CommandEh+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);
     4aa:	9b b1       	in	r25, 0x0b	; 11
     4ac:	20 e1       	ldi	r18, 0x10	; 16
     4ae:	62 9f       	mul	r22, r18
     4b0:	b0 01       	movw	r22, r0
     4b2:	11 24       	eor	r1, r1
     4b4:	9f 70       	andi	r25, 0x0F	; 15
     4b6:	69 2b       	or	r22, r25
     4b8:	6b b9       	out	0x0b, r22	; 11
	LCD_Port |= (1<<EN);
     4ba:	9b b1       	in	r25, 0x0b	; 11
     4bc:	92 60       	ori	r25, 0x02	; 2
     4be:	9b b9       	out	0x0b, r25	; 11
     4c0:	8a 95       	dec	r24
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <_ZN6Screen11LCD_CommandEh+0x42>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     4c4:	8b b1       	in	r24, 0x0b	; 11
     4c6:	8d 7f       	andi	r24, 0xFD	; 253
     4c8:	8b b9       	out	0x0b, r24	; 11
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     4ca:	84 ef       	ldi	r24, 0xF4	; 244
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <_ZN6Screen11LCD_CommandEh+0x50>
     4d2:	08 95       	ret

000004d4 <_ZN6Screen8LCD_CharEh>:
	_delay_ms(2);
}

void Screen::LCD_Char(unsigned char data)
{
	LCD_Port = (LCD_Port & 0x0F) | (data & 0xF0);
     4d4:	8b b1       	in	r24, 0x0b	; 11
     4d6:	8f 70       	andi	r24, 0x0F	; 15
     4d8:	96 2f       	mov	r25, r22
     4da:	90 7f       	andi	r25, 0xF0	; 240
     4dc:	89 2b       	or	r24, r25
     4de:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<RS);		//RS = 1
     4e0:	8b b1       	in	r24, 0x0b	; 11
     4e2:	81 60       	ori	r24, 0x01	; 1
     4e4:	8b b9       	out	0x0b, r24	; 11
	LCD_Port|= (1<<EN);
     4e6:	8b b1       	in	r24, 0x0b	; 11
     4e8:	82 60       	ori	r24, 0x02	; 2
     4ea:	8b b9       	out	0x0b, r24	; 11
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
     4ec:	81 e0       	ldi	r24, 0x01	; 1
     4ee:	98 2f       	mov	r25, r24
     4f0:	9a 95       	dec	r25
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <_ZN6Screen8LCD_CharEh+0x1c>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     4f4:	9b b1       	in	r25, 0x0b	; 11
     4f6:	9d 7f       	andi	r25, 0xFD	; 253
     4f8:	9b b9       	out	0x0b, r25	; 11
     4fa:	92 e4       	ldi	r25, 0x42	; 66
     4fc:	9a 95       	dec	r25
     4fe:	f1 f7       	brne	.-4      	; 0x4fc <_ZN6Screen8LCD_CharEh+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (data << 4);
     500:	9b b1       	in	r25, 0x0b	; 11
     502:	20 e1       	ldi	r18, 0x10	; 16
     504:	62 9f       	mul	r22, r18
     506:	b0 01       	movw	r22, r0
     508:	11 24       	eor	r1, r1
     50a:	9f 70       	andi	r25, 0x0F	; 15
     50c:	69 2b       	or	r22, r25
     50e:	6b b9       	out	0x0b, r22	; 11
	LCD_Port |= (1<<EN);
     510:	9b b1       	in	r25, 0x0b	; 11
     512:	92 60       	ori	r25, 0x02	; 2
     514:	9b b9       	out	0x0b, r25	; 11
     516:	8a 95       	dec	r24
     518:	f1 f7       	brne	.-4      	; 0x516 <_ZN6Screen8LCD_CharEh+0x42>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     51a:	8b b1       	in	r24, 0x0b	; 11
     51c:	8d 7f       	andi	r24, 0xFD	; 253
     51e:	8b b9       	out	0x0b, r24	; 11
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     520:	84 ef       	ldi	r24, 0xF4	; 244
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <_ZN6Screen8LCD_CharEh+0x50>
     528:	08 95       	ret

0000052a <_ZN6Screen10LCD_StringEPc>:
}


//this is the function use to write a string on the LCD screen
void Screen::LCD_String(char *str)
{
     52a:	ef 92       	push	r14
     52c:	ff 92       	push	r15
     52e:	0f 93       	push	r16
     530:	1f 93       	push	r17
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	7c 01       	movw	r14, r24
     538:	8b 01       	movw	r16, r22
	int i;
	for(i=0;str[i]!=0;i++)
     53a:	c0 e0       	ldi	r28, 0x00	; 0
     53c:	d0 e0       	ldi	r29, 0x00	; 0
     53e:	f8 01       	movw	r30, r16
     540:	ec 0f       	add	r30, r28
     542:	fd 1f       	adc	r31, r29
     544:	60 81       	ld	r22, Z
     546:	66 23       	and	r22, r22
     548:	29 f0       	breq	.+10     	; 0x554 <_ZN6Screen10LCD_StringEPc+0x2a>
	{
		LCD_Char (str[i]);
     54a:	c7 01       	movw	r24, r14
     54c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>

//this is the function use to write a string on the LCD screen
void Screen::LCD_String(char *str)
{
	int i;
	for(i=0;str[i]!=0;i++)
     550:	21 96       	adiw	r28, 0x01	; 1
     552:	f5 cf       	rjmp	.-22     	; 0x53e <_ZN6Screen10LCD_StringEPc+0x14>
	{
		LCD_Char (str[i]);
	}
}
     554:	df 91       	pop	r29
     556:	cf 91       	pop	r28
     558:	1f 91       	pop	r17
     55a:	0f 91       	pop	r16
     55c:	ff 90       	pop	r15
     55e:	ef 90       	pop	r14
     560:	08 95       	ret

00000562 <_ZN6Screen8LCD_InitEv>:
}


//function to initialize the LCD dispay
void Screen::LCD_Init(void)
{
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	ec 01       	movw	r28, r24
	LCD_Dir = 0xFF;			//LCD data direction is output
     568:	8f ef       	ldi	r24, 0xFF	; 255
     56a:	8a b9       	out	0x0a, r24	; 10
     56c:	88 e8       	ldi	r24, 0x88	; 136
     56e:	93 e1       	ldi	r25, 0x13	; 19
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <_ZN6Screen8LCD_InitEv+0xe>
	_delay_ms(20);
	
	LCD_Command(0x02);
     574:	62 e0       	ldi	r22, 0x02	; 2
     576:	ce 01       	movw	r24, r28
     578:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x28);
     57c:	68 e2       	ldi	r22, 0x28	; 40
     57e:	ce 01       	movw	r24, r28
     580:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x0c);              //Command - Display on Cursor off
     584:	6c e0       	ldi	r22, 0x0C	; 12
     586:	ce 01       	movw	r24, r28
     588:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x06);              //Command - shift cursor to right
     58c:	66 e0       	ldi	r22, 0x06	; 6
     58e:	ce 01       	movw	r24, r28
     590:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x01);              //Command - Clear display
     594:	61 e0       	ldi	r22, 0x01	; 1
     596:	ce 01       	movw	r24, r28
     598:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	
	LCD_String("Welcome");
     59c:	68 e8       	ldi	r22, 0x88	; 136
     59e:	74 e0       	ldi	r23, 0x04	; 4
     5a0:	ce 01       	movw	r24, r28
     5a2:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5a6:	80 e1       	ldi	r24, 0x10	; 16
     5a8:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
     5aa:	00 97       	sbiw	r24, 0x00	; 0
     5ac:	31 f0       	breq	.+12     	; 0x5ba <_ZN6Screen8LCD_InitEv+0x58>
     5ae:	e9 e1       	ldi	r30, 0x19	; 25
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	31 97       	sbiw	r30, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <_ZN6Screen8LCD_InitEv+0x50>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5b6:	01 97       	sbiw	r24, 0x01	; 1
     5b8:	f8 cf       	rjmp	.-16     	; 0x5aa <_ZN6Screen8LCD_InitEv+0x48>
	_delay_ms(1000);
	LCD_String(".");
	_delay_ms(1000);
	LCD_String(".");
	_delay_ms(1000);*/
}
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	08 95       	ret

000005c0 <_ZN6Screen9LCD_clearEv>:
}


//function to clear the display
void Screen::LCD_clear()
{
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	ec 01       	movw	r28, r24
	LCD_Command (0x01);
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     5cc:	84 ef       	ldi	r24, 0xF4	; 244
     5ce:	91 e0       	ldi	r25, 0x01	; 1
     5d0:	01 97       	sbiw	r24, 0x01	; 1
     5d2:	f1 f7       	brne	.-4      	; 0x5d0 <_ZN6Screen9LCD_clearEv+0x10>
	_delay_ms(2);
	LCD_Command (0x80);
     5d4:	60 e8       	ldi	r22, 0x80	; 128
     5d6:	ce 01       	movw	r24, r28
     5d8:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
}
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	08 95       	ret

000005e2 <_ZN6Screen15Control_buttonsEv>:


char Screen::Control_buttons(){
	DDRB = 0xCF;
     5e2:	8f ec       	ldi	r24, 0xCF	; 207
     5e4:	84 b9       	out	0x04, r24	; 4
	DDRD &= 0b11110011;
     5e6:	8a b1       	in	r24, 0x0a	; 10
     5e8:	83 7f       	andi	r24, 0xF3	; 243
     5ea:	8a b9       	out	0x0a, r24	; 10
	while (1)
	{
		if (PINB & 0b00010000){
     5ec:	1c 9b       	sbis	0x03, 4	; 3
     5ee:	0a c0       	rjmp	.+20     	; 0x604 <_ZN6Screen15Control_buttonsEv+0x22>
     5f0:	88 e9       	ldi	r24, 0x98	; 152
     5f2:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5f4:	00 97       	sbiw	r24, 0x00	; 0
     5f6:	51 f1       	breq	.+84     	; 0x64c <_ZN6Screen15Control_buttonsEv+0x6a>
     5f8:	e9 e1       	ldi	r30, 0x19	; 25
     5fa:	f0 e0       	ldi	r31, 0x00	; 0
     5fc:	31 97       	sbiw	r30, 0x01	; 1
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <_ZN6Screen15Control_buttonsEv+0x1a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	f8 cf       	rjmp	.-16     	; 0x5f4 <_ZN6Screen15Control_buttonsEv+0x12>
			_delay_ms(1500);
			return 's' ;
			break;
		}
		else if (PINB & 0b00100000){
     604:	1d 9b       	sbis	0x03, 5	; 3
     606:	0a c0       	rjmp	.+20     	; 0x61c <_ZN6Screen15Control_buttonsEv+0x3a>
     608:	88 e9       	ldi	r24, 0x98	; 152
     60a:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     60c:	00 97       	sbiw	r24, 0x00	; 0
     60e:	01 f1       	breq	.+64     	; 0x650 <_ZN6Screen15Control_buttonsEv+0x6e>
     610:	e9 e1       	ldi	r30, 0x19	; 25
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	31 97       	sbiw	r30, 0x01	; 1
     616:	f1 f7       	brne	.-4      	; 0x614 <_ZN6Screen15Control_buttonsEv+0x32>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	f8 cf       	rjmp	.-16     	; 0x60c <_ZN6Screen15Control_buttonsEv+0x2a>
			_delay_ms(1500);
			return 'b';
			break;
		}
		else if (PIND & 0b000000100){
     61c:	4a 9b       	sbis	0x09, 2	; 9
     61e:	0a c0       	rjmp	.+20     	; 0x634 <_ZN6Screen15Control_buttonsEv+0x52>
     620:	88 e9       	ldi	r24, 0x98	; 152
     622:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     624:	00 97       	sbiw	r24, 0x00	; 0
     626:	b1 f0       	breq	.+44     	; 0x654 <_ZN6Screen15Control_buttonsEv+0x72>
     628:	e9 e1       	ldi	r30, 0x19	; 25
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	31 97       	sbiw	r30, 0x01	; 1
     62e:	f1 f7       	brne	.-4      	; 0x62c <_ZN6Screen15Control_buttonsEv+0x4a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     630:	01 97       	sbiw	r24, 0x01	; 1
     632:	f8 cf       	rjmp	.-16     	; 0x624 <_ZN6Screen15Control_buttonsEv+0x42>
			_delay_ms(1500);
			return 'u';
			break;
		}
		else if (PIND & 0b000001000){
     634:	4b 9b       	sbis	0x09, 3	; 9
     636:	da cf       	rjmp	.-76     	; 0x5ec <_ZN6Screen15Control_buttonsEv+0xa>
     638:	88 e9       	ldi	r24, 0x98	; 152
     63a:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     63c:	00 97       	sbiw	r24, 0x00	; 0
     63e:	61 f0       	breq	.+24     	; 0x658 <_ZN6Screen15Control_buttonsEv+0x76>
     640:	e9 e1       	ldi	r30, 0x19	; 25
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	31 97       	sbiw	r30, 0x01	; 1
     646:	f1 f7       	brne	.-4      	; 0x644 <_ZN6Screen15Control_buttonsEv+0x62>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     648:	01 97       	sbiw	r24, 0x01	; 1
     64a:	f8 cf       	rjmp	.-16     	; 0x63c <_ZN6Screen15Control_buttonsEv+0x5a>
	DDRD &= 0b11110011;
	while (1)
	{
		if (PINB & 0b00010000){
			_delay_ms(1500);
			return 's' ;
     64c:	83 e7       	ldi	r24, 0x73	; 115
     64e:	08 95       	ret
			break;
		}
		else if (PINB & 0b00100000){
			_delay_ms(1500);
			return 'b';
     650:	82 e6       	ldi	r24, 0x62	; 98
     652:	08 95       	ret
			break;
		}
		else if (PIND & 0b000000100){
			_delay_ms(1500);
			return 'u';
     654:	85 e7       	ldi	r24, 0x75	; 117
     656:	08 95       	ret
			break;
		}
		else if (PIND & 0b000001000){
			_delay_ms(1500);
			return 'd';
     658:	84 e6       	ldi	r24, 0x64	; 100
			break;
		}
		
	}
	
}
     65a:	08 95       	ret

0000065c <_ZN6Screen13pressedButtonEv>:

char Screen::pressedButton(){
	DDRB = 0xCF;
     65c:	8f ec       	ldi	r24, 0xCF	; 207
     65e:	84 b9       	out	0x04, r24	; 4
	DDRD &= 0b11110011;
     660:	8a b1       	in	r24, 0x0a	; 10
     662:	83 7f       	andi	r24, 0xF3	; 243
     664:	8a b9       	out	0x0a, r24	; 10
		if (PINB & 0b00010000){
     666:	1c 9b       	sbis	0x03, 4	; 3
     668:	0a c0       	rjmp	.+20     	; 0x67e <_ZN6Screen13pressedButtonEv+0x22>
     66a:	88 e9       	ldi	r24, 0x98	; 152
     66c:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     66e:	00 97       	sbiw	r24, 0x00	; 0
     670:	51 f1       	breq	.+84     	; 0x6c6 <_ZN6Screen13pressedButtonEv+0x6a>
     672:	e9 e1       	ldi	r30, 0x19	; 25
     674:	f0 e0       	ldi	r31, 0x00	; 0
     676:	31 97       	sbiw	r30, 0x01	; 1
     678:	f1 f7       	brne	.-4      	; 0x676 <_ZN6Screen13pressedButtonEv+0x1a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	f8 cf       	rjmp	.-16     	; 0x66e <_ZN6Screen13pressedButtonEv+0x12>
			_delay_ms(1500);
			return 's' ;
		}
		else if (PINB & 0b00100000){
     67e:	1d 9b       	sbis	0x03, 5	; 3
     680:	0a c0       	rjmp	.+20     	; 0x696 <_ZN6Screen13pressedButtonEv+0x3a>
     682:	88 e9       	ldi	r24, 0x98	; 152
     684:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     686:	00 97       	sbiw	r24, 0x00	; 0
     688:	01 f1       	breq	.+64     	; 0x6ca <_ZN6Screen13pressedButtonEv+0x6e>
     68a:	e9 e1       	ldi	r30, 0x19	; 25
     68c:	f0 e0       	ldi	r31, 0x00	; 0
     68e:	31 97       	sbiw	r30, 0x01	; 1
     690:	f1 f7       	brne	.-4      	; 0x68e <_ZN6Screen13pressedButtonEv+0x32>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     692:	01 97       	sbiw	r24, 0x01	; 1
     694:	f8 cf       	rjmp	.-16     	; 0x686 <_ZN6Screen13pressedButtonEv+0x2a>
			_delay_ms(1500);
			return 'b';
		}
		else if (PIND & 0b000000100){
     696:	4a 9b       	sbis	0x09, 2	; 9
     698:	0a c0       	rjmp	.+20     	; 0x6ae <_ZN6Screen13pressedButtonEv+0x52>
     69a:	88 e9       	ldi	r24, 0x98	; 152
     69c:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     69e:	00 97       	sbiw	r24, 0x00	; 0
     6a0:	b1 f0       	breq	.+44     	; 0x6ce <_ZN6Screen13pressedButtonEv+0x72>
     6a2:	e9 e1       	ldi	r30, 0x19	; 25
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	31 97       	sbiw	r30, 0x01	; 1
     6a8:	f1 f7       	brne	.-4      	; 0x6a6 <_ZN6Screen13pressedButtonEv+0x4a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6aa:	01 97       	sbiw	r24, 0x01	; 1
     6ac:	f8 cf       	rjmp	.-16     	; 0x69e <_ZN6Screen13pressedButtonEv+0x42>
			_delay_ms(1500);
			return 'u';
		}
		else if (PIND & 0b000001000){
     6ae:	4b 9b       	sbis	0x09, 3	; 9
     6b0:	10 c0       	rjmp	.+32     	; 0x6d2 <_ZN6Screen13pressedButtonEv+0x76>
     6b2:	88 e9       	ldi	r24, 0x98	; 152
     6b4:	9a e3       	ldi	r25, 0x3A	; 58
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6b6:	00 97       	sbiw	r24, 0x00	; 0
     6b8:	71 f0       	breq	.+28     	; 0x6d6 <_ZN6Screen13pressedButtonEv+0x7a>
     6ba:	e9 e1       	ldi	r30, 0x19	; 25
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	31 97       	sbiw	r30, 0x01	; 1
     6c0:	f1 f7       	brne	.-4      	; 0x6be <_ZN6Screen13pressedButtonEv+0x62>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	f8 cf       	rjmp	.-16     	; 0x6b6 <_ZN6Screen13pressedButtonEv+0x5a>
char Screen::pressedButton(){
	DDRB = 0xCF;
	DDRD &= 0b11110011;
		if (PINB & 0b00010000){
			_delay_ms(1500);
			return 's' ;
     6c6:	83 e7       	ldi	r24, 0x73	; 115
     6c8:	08 95       	ret
		}
		else if (PINB & 0b00100000){
			_delay_ms(1500);
			return 'b';
     6ca:	82 e6       	ldi	r24, 0x62	; 98
     6cc:	08 95       	ret
		}
		else if (PIND & 0b000000100){
			_delay_ms(1500);
			return 'u';
     6ce:	85 e7       	ldi	r24, 0x75	; 117
     6d0:	08 95       	ret
		else if (PIND & 0b000001000){
			_delay_ms(1500);
			return 'd';
		}
		else{
			return '0';
     6d2:	80 e3       	ldi	r24, 0x30	; 48
     6d4:	08 95       	ret
			_delay_ms(1500);
			return 'u';
		}
		else if (PIND & 0b000001000){
			_delay_ms(1500);
			return 'd';
     6d6:	84 e6       	ldi	r24, 0x64	; 100
		}
		else{
			return '0';
		}
	
}
     6d8:	08 95       	ret

000006da <_ZN6Screen5blinkEv>:



void Screen::blink(){
	LCD_Command(0x0F);
     6da:	6f e0       	ldi	r22, 0x0F	; 15
     6dc:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     6e0:	08 95       	ret

000006e2 <_ZN6Screen9stopBlinkEv>:
}

void Screen::stopBlink(){
	LCD_Command(0x0c);
     6e2:	6c e0       	ldi	r22, 0x0C	; 12
     6e4:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     6e8:	08 95       	ret

000006ea <_ZN6Screen13pressedSelectEv>:
}

bool  Screen::pressedSelect(){
	if (PINB & 0b00010000) {
     6ea:	1c 9b       	sbis	0x03, 4	; 3
     6ec:	0a c0       	rjmp	.+20     	; 0x702 <_ZN6Screen13pressedSelectEv+0x18>
     6ee:	80 e1       	ldi	r24, 0x10	; 16
     6f0:	97 e2       	ldi	r25, 0x27	; 39
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6f2:	00 97       	sbiw	r24, 0x00	; 0
     6f4:	41 f0       	breq	.+16     	; 0x706 <_ZN6Screen13pressedSelectEv+0x1c>
     6f6:	e9 e1       	ldi	r30, 0x19	; 25
     6f8:	f0 e0       	ldi	r31, 0x00	; 0
     6fa:	31 97       	sbiw	r30, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <_ZN6Screen13pressedSelectEv+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6fe:	01 97       	sbiw	r24, 0x01	; 1
     700:	f8 cf       	rjmp	.-16     	; 0x6f2 <_ZN6Screen13pressedSelectEv+0x8>
		_delay_ms(1000);
		return true;
	}
	else {
		return false;
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	08 95       	ret
}

bool  Screen::pressedSelect(){
	if (PINB & 0b00010000) {
		_delay_ms(1000);
		return true;
     706:	81 e0       	ldi	r24, 0x01	; 1
	}
	else {
		return false;
	}
}
     708:	08 95       	ret

0000070a <_ZN6Screen11pressedBackEv>:

bool  Screen::pressedBack(){
	if (PINB & 0b00100000){
     70a:	1d 9b       	sbis	0x03, 5	; 3
     70c:	0a c0       	rjmp	.+20     	; 0x722 <_ZN6Screen11pressedBackEv+0x18>
     70e:	80 e2       	ldi	r24, 0x20	; 32
     710:	9e e4       	ldi	r25, 0x4E	; 78
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     712:	00 97       	sbiw	r24, 0x00	; 0
     714:	41 f0       	breq	.+16     	; 0x726 <_ZN6Screen11pressedBackEv+0x1c>
     716:	e9 e1       	ldi	r30, 0x19	; 25
     718:	f0 e0       	ldi	r31, 0x00	; 0
     71a:	31 97       	sbiw	r30, 0x01	; 1
     71c:	f1 f7       	brne	.-4      	; 0x71a <_ZN6Screen11pressedBackEv+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	f8 cf       	rjmp	.-16     	; 0x712 <_ZN6Screen11pressedBackEv+0x8>
		_delay_ms(2000);
		return true;
	}
	else{
		return false;
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	08 95       	ret
}

bool  Screen::pressedBack(){
	if (PINB & 0b00100000){
		_delay_ms(2000);
		return true;
     726:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		return false;
	}
     728:	08 95       	ret

0000072a <_Z41__static_initialization_and_destruction_0ii>:
		sc.LCD_Command(0xc0);
		sc.LCD_String("        V       ");
		_delay_ms(500);
	return;	}
}
}
     72a:	01 97       	sbiw	r24, 0x01	; 1
     72c:	49 f4       	brne	.+18     	; 0x740 <_Z41__static_initialization_and_destruction_0ii+0x16>
     72e:	6f 3f       	cpi	r22, 0xFF	; 255
     730:	7f 4f       	sbci	r23, 0xFF	; 255
     732:	31 f4       	brne	.+12     	; 0x740 <_Z41__static_initialization_and_destruction_0ii+0x16>
     734:	63 e0       	ldi	r22, 0x03	; 3
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	85 e0       	ldi	r24, 0x05	; 5
     73a:	96 e0       	ldi	r25, 0x06	; 6
     73c:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN4ToneC1Ei>
     740:	08 95       	ret

00000742 <_Z8showTimev>:
     742:	cf 92       	push	r12
     744:	df 92       	push	r13
     746:	ef 92       	push	r14
     748:	ff 92       	push	r15
     74a:	0f 93       	push	r16
     74c:	1f 93       	push	r17
     74e:	cf 93       	push	r28
     750:	60 e8       	ldi	r22, 0x80	; 128
     752:	84 e0       	ldi	r24, 0x04	; 4
     754:	96 e0       	ldi	r25, 0x06	; 6
     756:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     75a:	0f 2e       	mov	r0, r31
     75c:	fc ef       	ldi	r31, 0xFC	; 252
     75e:	cf 2e       	mov	r12, r31
     760:	f5 e0       	ldi	r31, 0x05	; 5
     762:	df 2e       	mov	r13, r31
     764:	f0 2d       	mov	r31, r0
     766:	0f 2e       	mov	r0, r31
     768:	fd ef       	ldi	r31, 0xFD	; 253
     76a:	ef 2e       	mov	r14, r31
     76c:	f5 e0       	ldi	r31, 0x05	; 5
     76e:	ff 2e       	mov	r15, r31
     770:	f0 2d       	mov	r31, r0
     772:	0e ef       	ldi	r16, 0xFE	; 254
     774:	15 e0       	ldi	r17, 0x05	; 5
     776:	2f ef       	ldi	r18, 0xFF	; 255
     778:	35 e0       	ldi	r19, 0x05	; 5
     77a:	40 e0       	ldi	r20, 0x00	; 0
     77c:	56 e0       	ldi	r21, 0x06	; 6
     77e:	61 e0       	ldi	r22, 0x01	; 1
     780:	76 e0       	ldi	r23, 0x06	; 6
     782:	82 e0       	ldi	r24, 0x02	; 2
     784:	96 e0       	ldi	r25, 0x06	; 6
     786:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14ds1307_getdatePhS_S_S_S_S_S_>
     78a:	60 e9       	ldi	r22, 0x90	; 144
     78c:	74 e0       	ldi	r23, 0x04	; 4
     78e:	84 e0       	ldi	r24, 0x04	; 4
     790:	96 e0       	ldi	r25, 0x06	; 6
     792:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     796:	60 91 fe 05 	lds	r22, 0x05FE	; 0x8005fe <hour>
     79a:	cd ec       	ldi	r28, 0xCD	; 205
     79c:	6c 9f       	mul	r22, r28
     79e:	61 2d       	mov	r22, r1
     7a0:	11 24       	eor	r1, r1
     7a2:	66 95       	lsr	r22
     7a4:	66 95       	lsr	r22
     7a6:	66 95       	lsr	r22
     7a8:	60 5d       	subi	r22, 0xD0	; 208
     7aa:	84 e0       	ldi	r24, 0x04	; 4
     7ac:	96 e0       	ldi	r25, 0x06	; 6
     7ae:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     7b2:	60 91 fe 05 	lds	r22, 0x05FE	; 0x8005fe <hour>
     7b6:	6c 9f       	mul	r22, r28
     7b8:	81 2d       	mov	r24, r1
     7ba:	11 24       	eor	r1, r1
     7bc:	86 95       	lsr	r24
     7be:	86 95       	lsr	r24
     7c0:	86 95       	lsr	r24
     7c2:	88 0f       	add	r24, r24
     7c4:	98 2f       	mov	r25, r24
     7c6:	99 0f       	add	r25, r25
     7c8:	99 0f       	add	r25, r25
     7ca:	89 0f       	add	r24, r25
     7cc:	68 1b       	sub	r22, r24
     7ce:	60 5d       	subi	r22, 0xD0	; 208
     7d0:	84 e0       	ldi	r24, 0x04	; 4
     7d2:	96 e0       	ldi	r25, 0x06	; 6
     7d4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     7d8:	67 e9       	ldi	r22, 0x97	; 151
     7da:	74 e0       	ldi	r23, 0x04	; 4
     7dc:	84 e0       	ldi	r24, 0x04	; 4
     7de:	96 e0       	ldi	r25, 0x06	; 6
     7e0:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     7e4:	60 91 fd 05 	lds	r22, 0x05FD	; 0x8005fd <minute>
     7e8:	6c 9f       	mul	r22, r28
     7ea:	61 2d       	mov	r22, r1
     7ec:	11 24       	eor	r1, r1
     7ee:	66 95       	lsr	r22
     7f0:	66 95       	lsr	r22
     7f2:	66 95       	lsr	r22
     7f4:	60 5d       	subi	r22, 0xD0	; 208
     7f6:	84 e0       	ldi	r24, 0x04	; 4
     7f8:	96 e0       	ldi	r25, 0x06	; 6
     7fa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     7fe:	60 91 fd 05 	lds	r22, 0x05FD	; 0x8005fd <minute>
     802:	6c 9f       	mul	r22, r28
     804:	81 2d       	mov	r24, r1
     806:	11 24       	eor	r1, r1
     808:	86 95       	lsr	r24
     80a:	86 95       	lsr	r24
     80c:	86 95       	lsr	r24
     80e:	88 0f       	add	r24, r24
     810:	98 2f       	mov	r25, r24
     812:	99 0f       	add	r25, r25
     814:	99 0f       	add	r25, r25
     816:	89 0f       	add	r24, r25
     818:	68 1b       	sub	r22, r24
     81a:	60 5d       	subi	r22, 0xD0	; 208
     81c:	84 e0       	ldi	r24, 0x04	; 4
     81e:	96 e0       	ldi	r25, 0x06	; 6
     820:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     824:	67 e9       	ldi	r22, 0x97	; 151
     826:	74 e0       	ldi	r23, 0x04	; 4
     828:	84 e0       	ldi	r24, 0x04	; 4
     82a:	96 e0       	ldi	r25, 0x06	; 6
     82c:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     830:	60 91 fc 05 	lds	r22, 0x05FC	; 0x8005fc <second>
     834:	6c 9f       	mul	r22, r28
     836:	61 2d       	mov	r22, r1
     838:	11 24       	eor	r1, r1
     83a:	66 95       	lsr	r22
     83c:	66 95       	lsr	r22
     83e:	66 95       	lsr	r22
     840:	60 5d       	subi	r22, 0xD0	; 208
     842:	84 e0       	ldi	r24, 0x04	; 4
     844:	96 e0       	ldi	r25, 0x06	; 6
     846:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     84a:	60 91 fc 05 	lds	r22, 0x05FC	; 0x8005fc <second>
     84e:	6c 9f       	mul	r22, r28
     850:	81 2d       	mov	r24, r1
     852:	11 24       	eor	r1, r1
     854:	86 95       	lsr	r24
     856:	86 95       	lsr	r24
     858:	86 95       	lsr	r24
     85a:	88 0f       	add	r24, r24
     85c:	98 2f       	mov	r25, r24
     85e:	99 0f       	add	r25, r25
     860:	99 0f       	add	r25, r25
     862:	89 0f       	add	r24, r25
     864:	68 1b       	sub	r22, r24
     866:	60 5d       	subi	r22, 0xD0	; 208
     868:	84 e0       	ldi	r24, 0x04	; 4
     86a:	96 e0       	ldi	r25, 0x06	; 6
     86c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     870:	60 ec       	ldi	r22, 0xC0	; 192
     872:	84 e0       	ldi	r24, 0x04	; 4
     874:	96 e0       	ldi	r25, 0x06	; 6
     876:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     87a:	69 e9       	ldi	r22, 0x99	; 153
     87c:	74 e0       	ldi	r23, 0x04	; 4
     87e:	84 e0       	ldi	r24, 0x04	; 4
     880:	96 e0       	ldi	r25, 0x06	; 6
     882:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     886:	60 ea       	ldi	r22, 0xA0	; 160
     888:	74 e0       	ldi	r23, 0x04	; 4
     88a:	84 e0       	ldi	r24, 0x04	; 4
     88c:	96 e0       	ldi	r25, 0x06	; 6
     88e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     892:	60 91 02 06 	lds	r22, 0x0602	; 0x800602 <year>
     896:	6c 9f       	mul	r22, r28
     898:	61 2d       	mov	r22, r1
     89a:	11 24       	eor	r1, r1
     89c:	66 95       	lsr	r22
     89e:	66 95       	lsr	r22
     8a0:	66 95       	lsr	r22
     8a2:	60 5d       	subi	r22, 0xD0	; 208
     8a4:	84 e0       	ldi	r24, 0x04	; 4
     8a6:	96 e0       	ldi	r25, 0x06	; 6
     8a8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     8ac:	60 91 02 06 	lds	r22, 0x0602	; 0x800602 <year>
     8b0:	6c 9f       	mul	r22, r28
     8b2:	81 2d       	mov	r24, r1
     8b4:	11 24       	eor	r1, r1
     8b6:	86 95       	lsr	r24
     8b8:	86 95       	lsr	r24
     8ba:	86 95       	lsr	r24
     8bc:	88 0f       	add	r24, r24
     8be:	98 2f       	mov	r25, r24
     8c0:	99 0f       	add	r25, r25
     8c2:	99 0f       	add	r25, r25
     8c4:	89 0f       	add	r24, r25
     8c6:	68 1b       	sub	r22, r24
     8c8:	60 5d       	subi	r22, 0xD0	; 208
     8ca:	84 e0       	ldi	r24, 0x04	; 4
     8cc:	96 e0       	ldi	r25, 0x06	; 6
     8ce:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     8d2:	63 ea       	ldi	r22, 0xA3	; 163
     8d4:	74 e0       	ldi	r23, 0x04	; 4
     8d6:	84 e0       	ldi	r24, 0x04	; 4
     8d8:	96 e0       	ldi	r25, 0x06	; 6
     8da:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     8de:	60 91 01 06 	lds	r22, 0x0601	; 0x800601 <month>
     8e2:	6c 9f       	mul	r22, r28
     8e4:	61 2d       	mov	r22, r1
     8e6:	11 24       	eor	r1, r1
     8e8:	66 95       	lsr	r22
     8ea:	66 95       	lsr	r22
     8ec:	66 95       	lsr	r22
     8ee:	60 5d       	subi	r22, 0xD0	; 208
     8f0:	84 e0       	ldi	r24, 0x04	; 4
     8f2:	96 e0       	ldi	r25, 0x06	; 6
     8f4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     8f8:	60 91 01 06 	lds	r22, 0x0601	; 0x800601 <month>
     8fc:	6c 9f       	mul	r22, r28
     8fe:	81 2d       	mov	r24, r1
     900:	11 24       	eor	r1, r1
     902:	86 95       	lsr	r24
     904:	86 95       	lsr	r24
     906:	86 95       	lsr	r24
     908:	88 0f       	add	r24, r24
     90a:	98 2f       	mov	r25, r24
     90c:	99 0f       	add	r25, r25
     90e:	99 0f       	add	r25, r25
     910:	89 0f       	add	r24, r25
     912:	68 1b       	sub	r22, r24
     914:	60 5d       	subi	r22, 0xD0	; 208
     916:	84 e0       	ldi	r24, 0x04	; 4
     918:	96 e0       	ldi	r25, 0x06	; 6
     91a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     91e:	63 ea       	ldi	r22, 0xA3	; 163
     920:	74 e0       	ldi	r23, 0x04	; 4
     922:	84 e0       	ldi	r24, 0x04	; 4
     924:	96 e0       	ldi	r25, 0x06	; 6
     926:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     92a:	60 91 00 06 	lds	r22, 0x0600	; 0x800600 <day>
     92e:	6c 9f       	mul	r22, r28
     930:	61 2d       	mov	r22, r1
     932:	11 24       	eor	r1, r1
     934:	66 95       	lsr	r22
     936:	66 95       	lsr	r22
     938:	66 95       	lsr	r22
     93a:	60 5d       	subi	r22, 0xD0	; 208
     93c:	84 e0       	ldi	r24, 0x04	; 4
     93e:	96 e0       	ldi	r25, 0x06	; 6
     940:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     944:	60 91 00 06 	lds	r22, 0x0600	; 0x800600 <day>
     948:	6c 9f       	mul	r22, r28
     94a:	c1 2d       	mov	r28, r1
     94c:	11 24       	eor	r1, r1
     94e:	c6 95       	lsr	r28
     950:	c6 95       	lsr	r28
     952:	c6 95       	lsr	r28
     954:	cc 0f       	add	r28, r28
     956:	8c 2f       	mov	r24, r28
     958:	88 0f       	add	r24, r24
     95a:	88 0f       	add	r24, r24
     95c:	c8 0f       	add	r28, r24
     95e:	6c 1b       	sub	r22, r28
     960:	60 5d       	subi	r22, 0xD0	; 208
     962:	84 e0       	ldi	r24, 0x04	; 4
     964:	96 e0       	ldi	r25, 0x06	; 6
     966:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     96a:	cf 91       	pop	r28
     96c:	1f 91       	pop	r17
     96e:	0f 91       	pop	r16
     970:	ff 90       	pop	r15
     972:	ef 90       	pop	r14
     974:	df 90       	pop	r13
     976:	cf 90       	pop	r12
     978:	08 95       	ret

0000097a <_Z6getDayiii>:
     97a:	cf 93       	push	r28
     97c:	df 93       	push	r29
     97e:	ec 01       	movw	r28, r24
     980:	21 e0       	ldi	r18, 0x01	; 1
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	e0 e0       	ldi	r30, 0x00	; 0
     986:	f0 e0       	ldi	r31, 0x00	; 0
     988:	c2 17       	cp	r28, r18
     98a:	d3 07       	cpc	r29, r19
     98c:	6c f0       	brlt	.+26     	; 0x9a8 <_Z6getDayiii+0x2e>
     98e:	c9 01       	movw	r24, r18
     990:	83 70       	andi	r24, 0x03	; 3
     992:	99 27       	eor	r25, r25
     994:	89 2b       	or	r24, r25
     996:	19 f4       	brne	.+6      	; 0x99e <_Z6getDayiii+0x24>
     998:	e2 59       	subi	r30, 0x92	; 146
     99a:	fe 4f       	sbci	r31, 0xFE	; 254
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <_Z6getDayiii+0x28>
     99e:	e3 59       	subi	r30, 0x93	; 147
     9a0:	fe 4f       	sbci	r31, 0xFE	; 254
     9a2:	2f 5f       	subi	r18, 0xFF	; 255
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	f0 cf       	rjmp	.-32     	; 0x988 <_Z6getDayiii+0xe>
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	db 01       	movw	r26, r22
     9ae:	11 97       	sbiw	r26, 0x01	; 1
     9b0:	2a 17       	cp	r18, r26
     9b2:	3b 07       	cpc	r19, r27
     9b4:	3c f5       	brge	.+78     	; 0xa04 <_Z6getDayiii+0x8a>
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	de 01       	movw	r26, r28
     9ba:	a3 70       	andi	r26, 0x03	; 3
     9bc:	bb 27       	eor	r27, r27
     9be:	ab 2b       	or	r26, r27
     9c0:	09 f0       	breq	.+2      	; 0x9c4 <_Z6getDayiii+0x4a>
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	99 23       	and	r25, r25
     9c6:	91 f0       	breq	.+36     	; 0x9ec <_Z6getDayiii+0x72>
     9c8:	91 e0       	ldi	r25, 0x01	; 1
     9ca:	21 30       	cpi	r18, 0x01	; 1
     9cc:	31 05       	cpc	r19, r1
     9ce:	09 f0       	breq	.+2      	; 0x9d2 <_Z6getDayiii+0x58>
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	99 23       	and	r25, r25
     9d4:	59 f0       	breq	.+22     	; 0x9ec <_Z6getDayiii+0x72>
     9d6:	d9 01       	movw	r26, r18
     9d8:	aa 0f       	add	r26, r26
     9da:	bb 1f       	adc	r27, r27
     9dc:	a4 55       	subi	r26, 0x54	; 84
     9de:	be 4f       	sbci	r27, 0xFE	; 254
     9e0:	8d 91       	ld	r24, X+
     9e2:	9c 91       	ld	r25, X
     9e4:	e8 0f       	add	r30, r24
     9e6:	f9 1f       	adc	r31, r25
     9e8:	31 96       	adiw	r30, 0x01	; 1
     9ea:	09 c0       	rjmp	.+18     	; 0x9fe <_Z6getDayiii+0x84>
     9ec:	d9 01       	movw	r26, r18
     9ee:	aa 0f       	add	r26, r26
     9f0:	bb 1f       	adc	r27, r27
     9f2:	a4 55       	subi	r26, 0x54	; 84
     9f4:	be 4f       	sbci	r27, 0xFE	; 254
     9f6:	8d 91       	ld	r24, X+
     9f8:	9c 91       	ld	r25, X
     9fa:	e8 0f       	add	r30, r24
     9fc:	f9 1f       	adc	r31, r25
     9fe:	2f 5f       	subi	r18, 0xFF	; 255
     a00:	3f 4f       	sbci	r19, 0xFF	; 255
     a02:	d4 cf       	rjmp	.-88     	; 0x9ac <_Z6getDayiii+0x32>
     a04:	4e 0f       	add	r20, r30
     a06:	5f 1f       	adc	r21, r31
     a08:	ca 01       	movw	r24, r20
     a0a:	05 96       	adiw	r24, 0x05	; 5
     a0c:	67 e0       	ldi	r22, 0x07	; 7
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	08 95       	ret

00000a1a <_Z9set_alarmv>:
     a1a:	af 92       	push	r10
     a1c:	bf 92       	push	r11
     a1e:	cf 92       	push	r12
     a20:	df 92       	push	r13
     a22:	ef 92       	push	r14
     a24:	ff 92       	push	r15
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <ith_alarm>
     a32:	90 91 f1 05 	lds	r25, 0x05F1	; 0x8005f1 <ith_alarm+0x1>
     a36:	05 97       	sbiw	r24, 0x05	; 5
     a38:	01 f5       	brne	.+64     	; 0xa7a <_Z9set_alarmv+0x60>
     a3a:	84 e0       	ldi	r24, 0x04	; 4
     a3c:	96 e0       	ldi	r25, 0x06	; 6
     a3e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     a42:	65 ea       	ldi	r22, 0xA5	; 165
     a44:	74 e0       	ldi	r23, 0x04	; 4
     a46:	84 e0       	ldi	r24, 0x04	; 4
     a48:	96 e0       	ldi	r25, 0x06	; 6
     a4a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     a4e:	60 ec       	ldi	r22, 0xC0	; 192
     a50:	84 e0       	ldi	r24, 0x04	; 4
     a52:	96 e0       	ldi	r25, 0x06	; 6
     a54:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     a58:	63 eb       	ldi	r22, 0xB3	; 179
     a5a:	74 e0       	ldi	r23, 0x04	; 4
     a5c:	84 e0       	ldi	r24, 0x04	; 4
     a5e:	96 e0       	ldi	r25, 0x06	; 6
     a60:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     a64:	80 e2       	ldi	r24, 0x20	; 32
     a66:	9e e4       	ldi	r25, 0x4E	; 78
     a68:	00 97       	sbiw	r24, 0x00	; 0
     a6a:	09 f4       	brne	.+2      	; 0xa6e <_Z9set_alarmv+0x54>
     a6c:	44 c1       	rjmp	.+648    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     a6e:	e9 e1       	ldi	r30, 0x19	; 25
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	31 97       	sbiw	r30, 0x01	; 1
     a74:	f1 f7       	brne	.-4      	; 0xa72 <_Z9set_alarmv+0x58>
     a76:	01 97       	sbiw	r24, 0x01	; 1
     a78:	f7 cf       	rjmp	.-18     	; 0xa68 <_Z9set_alarmv+0x4e>
     a7a:	84 e0       	ldi	r24, 0x04	; 4
     a7c:	96 e0       	ldi	r25, 0x06	; 6
     a7e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     a82:	6c eb       	ldi	r22, 0xBC	; 188
     a84:	74 e0       	ldi	r23, 0x04	; 4
     a86:	84 e0       	ldi	r24, 0x04	; 4
     a88:	96 e0       	ldi	r25, 0x06	; 6
     a8a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     a8e:	60 e8       	ldi	r22, 0x80	; 128
     a90:	84 e0       	ldi	r24, 0x04	; 4
     a92:	96 e0       	ldi	r25, 0x06	; 6
     a94:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     a98:	84 e0       	ldi	r24, 0x04	; 4
     a9a:	96 e0       	ldi	r25, 0x06	; 6
     a9c:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
     aa0:	83 e0       	ldi	r24, 0x03	; 3
     aa2:	96 e0       	ldi	r25, 0x06	; 6
     aa4:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
     aa8:	c8 2f       	mov	r28, r24
     aaa:	89 35       	cpi	r24, 0x59	; 89
     aac:	09 f4       	brne	.+2      	; 0xab0 <_Z9set_alarmv+0x96>
     aae:	23 c1       	rjmp	.+582    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     ab0:	68 2f       	mov	r22, r24
     ab2:	84 e0       	ldi	r24, 0x04	; 4
     ab4:	96 e0       	ldi	r25, 0x06	; 6
     ab6:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     aba:	83 e0       	ldi	r24, 0x03	; 3
     abc:	96 e0       	ldi	r25, 0x06	; 6
     abe:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
     ac2:	08 2f       	mov	r16, r24
     ac4:	89 35       	cpi	r24, 0x59	; 89
     ac6:	09 f4       	brne	.+2      	; 0xaca <_Z9set_alarmv+0xb0>
     ac8:	16 c1       	rjmp	.+556    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     aca:	68 2f       	mov	r22, r24
     acc:	84 e0       	ldi	r24, 0x04	; 4
     ace:	96 e0       	ldi	r25, 0x06	; 6
     ad0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     ad4:	64 ec       	ldi	r22, 0xC4	; 196
     ad6:	74 e0       	ldi	r23, 0x04	; 4
     ad8:	84 e0       	ldi	r24, 0x04	; 4
     ada:	96 e0       	ldi	r25, 0x06	; 6
     adc:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     ae0:	83 e0       	ldi	r24, 0x03	; 3
     ae2:	96 e0       	ldi	r25, 0x06	; 6
     ae4:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
     ae8:	f8 2e       	mov	r15, r24
     aea:	89 e5       	ldi	r24, 0x59	; 89
     aec:	f8 16       	cp	r15, r24
     aee:	09 f4       	brne	.+2      	; 0xaf2 <_Z9set_alarmv+0xd8>
     af0:	02 c1       	rjmp	.+516    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     af2:	6f 2d       	mov	r22, r15
     af4:	84 e0       	ldi	r24, 0x04	; 4
     af6:	96 e0       	ldi	r25, 0x06	; 6
     af8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     afc:	83 e0       	ldi	r24, 0x03	; 3
     afe:	96 e0       	ldi	r25, 0x06	; 6
     b00:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
     b04:	d8 2e       	mov	r13, r24
     b06:	89 e5       	ldi	r24, 0x59	; 89
     b08:	d8 16       	cp	r13, r24
     b0a:	09 f4       	brne	.+2      	; 0xb0e <_Z9set_alarmv+0xf4>
     b0c:	f4 c0       	rjmp	.+488    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     b0e:	6d 2d       	mov	r22, r13
     b10:	84 e0       	ldi	r24, 0x04	; 4
     b12:	96 e0       	ldi	r25, 0x06	; 6
     b14:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     b18:	84 e0       	ldi	r24, 0x04	; 4
     b1a:	96 e0       	ldi	r25, 0x06	; 6
     b1c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
     b20:	80 e2       	ldi	r24, 0x20	; 32
     b22:	9e e4       	ldi	r25, 0x4E	; 78
     b24:	00 97       	sbiw	r24, 0x00	; 0
     b26:	31 f0       	breq	.+12     	; 0xb34 <_Z9set_alarmv+0x11a>
     b28:	e9 e1       	ldi	r30, 0x19	; 25
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	31 97       	sbiw	r30, 0x01	; 1
     b2e:	f1 f7       	brne	.-4      	; 0xb2c <_Z9set_alarmv+0x112>
     b30:	01 97       	sbiw	r24, 0x01	; 1
     b32:	f8 cf       	rjmp	.-16     	; 0xb24 <_Z9set_alarmv+0x10a>
     b34:	d0 e0       	ldi	r29, 0x00	; 0
     b36:	e0 97       	sbiw	r28, 0x30	; 48
     b38:	9e 01       	movw	r18, r28
     b3a:	22 0f       	add	r18, r18
     b3c:	33 1f       	adc	r19, r19
     b3e:	ce 01       	movw	r24, r28
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	88 0f       	add	r24, r24
     b46:	99 1f       	adc	r25, r25
     b48:	88 0f       	add	r24, r24
     b4a:	99 1f       	adc	r25, r25
     b4c:	82 0f       	add	r24, r18
     b4e:	93 1f       	adc	r25, r19
     b50:	10 e0       	ldi	r17, 0x00	; 0
     b52:	00 53       	subi	r16, 0x30	; 48
     b54:	11 09       	sbc	r17, r1
     b56:	80 0f       	add	r24, r16
     b58:	91 1f       	adc	r25, r17
     b5a:	48 97       	sbiw	r24, 0x18	; 24
     b5c:	c4 f4       	brge	.+48     	; 0xb8e <_Z9set_alarmv+0x174>
     b5e:	8f 2d       	mov	r24, r15
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	c0 97       	sbiw	r24, 0x30	; 48
     b64:	7c 01       	movw	r14, r24
     b66:	ee 0c       	add	r14, r14
     b68:	ff 1c       	adc	r15, r15
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	88 0f       	add	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	e8 0e       	add	r14, r24
     b78:	f9 1e       	adc	r15, r25
     b7a:	cd 2c       	mov	r12, r13
     b7c:	d1 2c       	mov	r13, r1
     b7e:	80 e3       	ldi	r24, 0x30	; 48
     b80:	c8 1a       	sub	r12, r24
     b82:	d1 08       	sbc	r13, r1
     b84:	c7 01       	movw	r24, r14
     b86:	8c 0d       	add	r24, r12
     b88:	9d 1d       	adc	r25, r13
     b8a:	cc 97       	sbiw	r24, 0x3c	; 60
     b8c:	bc f0       	brlt	.+46     	; 0xbbc <_Z9set_alarmv+0x1a2>
     b8e:	84 e0       	ldi	r24, 0x04	; 4
     b90:	96 e0       	ldi	r25, 0x06	; 6
     b92:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     b96:	68 ec       	ldi	r22, 0xC8	; 200
     b98:	74 e0       	ldi	r23, 0x04	; 4
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	96 e0       	ldi	r25, 0x06	; 6
     b9e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     ba2:	80 e1       	ldi	r24, 0x10	; 16
     ba4:	97 e2       	ldi	r25, 0x27	; 39
     ba6:	00 97       	sbiw	r24, 0x00	; 0
     ba8:	31 f0       	breq	.+12     	; 0xbb6 <_Z9set_alarmv+0x19c>
     baa:	e9 e1       	ldi	r30, 0x19	; 25
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	31 97       	sbiw	r30, 0x01	; 1
     bb0:	f1 f7       	brne	.-4      	; 0xbae <_Z9set_alarmv+0x194>
     bb2:	01 97       	sbiw	r24, 0x01	; 1
     bb4:	f8 cf       	rjmp	.-16     	; 0xba6 <_Z9set_alarmv+0x18c>
     bb6:	0e 94 0d 05 	call	0xa1a	; 0xa1a <_Z9set_alarmv>
     bba:	9d c0       	rjmp	.+314    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     bbc:	84 e0       	ldi	r24, 0x04	; 4
     bbe:	96 e0       	ldi	r25, 0x06	; 6
     bc0:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     bc4:	69 ed       	ldi	r22, 0xD9	; 217
     bc6:	74 e0       	ldi	r23, 0x04	; 4
     bc8:	84 e0       	ldi	r24, 0x04	; 4
     bca:	96 e0       	ldi	r25, 0x06	; 6
     bcc:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     bd0:	80 e1       	ldi	r24, 0x10	; 16
     bd2:	97 e2       	ldi	r25, 0x27	; 39
     bd4:	00 97       	sbiw	r24, 0x00	; 0
     bd6:	31 f0       	breq	.+12     	; 0xbe4 <_Z9set_alarmv+0x1ca>
     bd8:	e9 e1       	ldi	r30, 0x19	; 25
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	31 97       	sbiw	r30, 0x01	; 1
     bde:	f1 f7       	brne	.-4      	; 0xbdc <_Z9set_alarmv+0x1c2>
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	f8 cf       	rjmp	.-16     	; 0xbd4 <_Z9set_alarmv+0x1ba>
     be4:	84 e0       	ldi	r24, 0x04	; 4
     be6:	96 e0       	ldi	r25, 0x06	; 6
     be8:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     bec:	6c e0       	ldi	r22, 0x0C	; 12
     bee:	71 e0       	ldi	r23, 0x01	; 1
     bf0:	84 e0       	ldi	r24, 0x04	; 4
     bf2:	96 e0       	ldi	r25, 0x06	; 6
     bf4:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     bf8:	a1 2c       	mov	r10, r1
     bfa:	b1 2c       	mov	r11, r1
     bfc:	b5 01       	movw	r22, r10
     bfe:	85 e0       	ldi	r24, 0x05	; 5
     c00:	96 e0       	ldi	r25, 0x06	; 6
     c02:	0e 94 75 14 	call	0x28ea	; 0x28ea <_ZN4Tone10playMelodyEi>
     c06:	84 36       	cpi	r24, 0x64	; 100
     c08:	49 f4       	brne	.+18     	; 0xc1c <_Z9set_alarmv+0x202>
     c0a:	84 e0       	ldi	r24, 0x04	; 4
     c0c:	a8 16       	cp	r10, r24
     c0e:	b1 04       	cpc	r11, r1
     c10:	09 f4       	brne	.+2      	; 0xc14 <_Z9set_alarmv+0x1fa>
     c12:	58 c0       	rjmp	.+176    	; 0xcc4 <_Z9set_alarmv+0x2aa>
     c14:	8f ef       	ldi	r24, 0xFF	; 255
     c16:	a8 1a       	sub	r10, r24
     c18:	b8 0a       	sbc	r11, r24
     c1a:	5b c0       	rjmp	.+182    	; 0xcd2 <_Z9set_alarmv+0x2b8>
     c1c:	85 37       	cpi	r24, 0x75	; 117
     c1e:	41 f4       	brne	.+16     	; 0xc30 <_Z9set_alarmv+0x216>
     c20:	a1 14       	cp	r10, r1
     c22:	b1 04       	cpc	r11, r1
     c24:	09 f4       	brne	.+2      	; 0xc28 <_Z9set_alarmv+0x20e>
     c26:	51 c0       	rjmp	.+162    	; 0xcca <_Z9set_alarmv+0x2b0>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	a8 1a       	sub	r10, r24
     c2c:	b1 08       	sbc	r11, r1
     c2e:	51 c0       	rjmp	.+162    	; 0xcd2 <_Z9set_alarmv+0x2b8>
     c30:	82 36       	cpi	r24, 0x62	; 98
     c32:	09 f4       	brne	.+2      	; 0xc36 <_Z9set_alarmv+0x21c>
     c34:	60 c0       	rjmp	.+192    	; 0xcf6 <_Z9set_alarmv+0x2dc>
     c36:	83 37       	cpi	r24, 0x73	; 115
     c38:	09 f0       	breq	.+2      	; 0xc3c <_Z9set_alarmv+0x222>
     c3a:	4b c0       	rjmp	.+150    	; 0xcd2 <_Z9set_alarmv+0x2b8>
     c3c:	20 91 f0 05 	lds	r18, 0x05F0	; 0x8005f0 <ith_alarm>
     c40:	30 91 f1 05 	lds	r19, 0x05F1	; 0x8005f1 <ith_alarm+0x1>
     c44:	88 ee       	ldi	r24, 0xE8	; 232
     c46:	93 e0       	ldi	r25, 0x03	; 3
     c48:	c8 9f       	mul	r28, r24
     c4a:	a0 01       	movw	r20, r0
     c4c:	c9 9f       	mul	r28, r25
     c4e:	50 0d       	add	r21, r0
     c50:	d8 9f       	mul	r29, r24
     c52:	50 0d       	add	r21, r0
     c54:	11 24       	eor	r1, r1
     c56:	64 e6       	ldi	r22, 0x64	; 100
     c58:	60 9f       	mul	r22, r16
     c5a:	c0 01       	movw	r24, r0
     c5c:	61 9f       	mul	r22, r17
     c5e:	90 0d       	add	r25, r0
     c60:	11 24       	eor	r1, r1
     c62:	84 0f       	add	r24, r20
     c64:	95 1f       	adc	r25, r21
     c66:	e8 0e       	add	r14, r24
     c68:	f9 1e       	adc	r15, r25
     c6a:	ce 0c       	add	r12, r14
     c6c:	df 1c       	adc	r13, r15
     c6e:	c9 01       	movw	r24, r18
     c70:	88 0f       	add	r24, r24
     c72:	99 1f       	adc	r25, r25
     c74:	fc 01       	movw	r30, r24
     c76:	e2 53       	subi	r30, 0x32	; 50
     c78:	fe 4f       	sbci	r31, 0xFE	; 254
     c7a:	d1 82       	std	Z+1, r13	; 0x01
     c7c:	c0 82       	st	Z, r12
     c7e:	fc 01       	movw	r30, r24
     c80:	ec 53       	subi	r30, 0x3C	; 60
     c82:	fe 4f       	sbci	r31, 0xFE	; 254
     c84:	b1 82       	std	Z+1, r11	; 0x01
     c86:	a0 82       	st	Z, r10
     c88:	84 e0       	ldi	r24, 0x04	; 4
     c8a:	96 e0       	ldi	r25, 0x06	; 6
     c8c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     c90:	67 ee       	ldi	r22, 0xE7	; 231
     c92:	74 e0       	ldi	r23, 0x04	; 4
     c94:	84 e0       	ldi	r24, 0x04	; 4
     c96:	96 e0       	ldi	r25, 0x06	; 6
     c98:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     c9c:	80 e1       	ldi	r24, 0x10	; 16
     c9e:	97 e2       	ldi	r25, 0x27	; 39
     ca0:	00 97       	sbiw	r24, 0x00	; 0
     ca2:	31 f0       	breq	.+12     	; 0xcb0 <_Z9set_alarmv+0x296>
     ca4:	e9 e1       	ldi	r30, 0x19	; 25
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	31 97       	sbiw	r30, 0x01	; 1
     caa:	f1 f7       	brne	.-4      	; 0xca8 <_Z9set_alarmv+0x28e>
     cac:	01 97       	sbiw	r24, 0x01	; 1
     cae:	f8 cf       	rjmp	.-16     	; 0xca0 <_Z9set_alarmv+0x286>
     cb0:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <ith_alarm>
     cb4:	90 91 f1 05 	lds	r25, 0x05F1	; 0x8005f1 <ith_alarm+0x1>
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	90 93 f1 05 	sts	0x05F1, r25	; 0x8005f1 <ith_alarm+0x1>
     cbe:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <ith_alarm>
     cc2:	19 c0       	rjmp	.+50     	; 0xcf6 <_Z9set_alarmv+0x2dc>
     cc4:	a1 2c       	mov	r10, r1
     cc6:	b1 2c       	mov	r11, r1
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <_Z9set_alarmv+0x2b8>
     cca:	68 94       	set
     ccc:	aa 24       	eor	r10, r10
     cce:	a2 f8       	bld	r10, 2
     cd0:	b1 2c       	mov	r11, r1
     cd2:	84 e0       	ldi	r24, 0x04	; 4
     cd4:	96 e0       	ldi	r25, 0x06	; 6
     cd6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     cda:	b5 01       	movw	r22, r10
     cdc:	62 95       	swap	r22
     cde:	72 95       	swap	r23
     ce0:	70 7f       	andi	r23, 0xF0	; 240
     ce2:	76 27       	eor	r23, r22
     ce4:	60 7f       	andi	r22, 0xF0	; 240
     ce6:	76 27       	eor	r23, r22
     ce8:	64 5f       	subi	r22, 0xF4	; 244
     cea:	7e 4f       	sbci	r23, 0xFE	; 254
     cec:	84 e0       	ldi	r24, 0x04	; 4
     cee:	96 e0       	ldi	r25, 0x06	; 6
     cf0:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     cf4:	83 cf       	rjmp	.-250    	; 0xbfc <_Z9set_alarmv+0x1e2>
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	1f 91       	pop	r17
     cfc:	0f 91       	pop	r16
     cfe:	ff 90       	pop	r15
     d00:	ef 90       	pop	r14
     d02:	df 90       	pop	r13
     d04:	cf 90       	pop	r12
     d06:	bf 90       	pop	r11
     d08:	af 90       	pop	r10
     d0a:	08 95       	ret

00000d0c <_Z11deleteAlarmv>:
     d0c:	cf 92       	push	r12
     d0e:	df 92       	push	r13
     d10:	ef 92       	push	r14
     d12:	ff 92       	push	r15
     d14:	0f 93       	push	r16
     d16:	1f 93       	push	r17
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <alarmArray>
     d20:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <alarmArray+0x1>
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	b1 f4       	brne	.+44     	; 0xd54 <_Z11deleteAlarmv+0x48>
     d28:	84 e0       	ldi	r24, 0x04	; 4
     d2a:	96 e0       	ldi	r25, 0x06	; 6
     d2c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     d30:	66 ef       	ldi	r22, 0xF6	; 246
     d32:	74 e0       	ldi	r23, 0x04	; 4
     d34:	84 e0       	ldi	r24, 0x04	; 4
     d36:	96 e0       	ldi	r25, 0x06	; 6
     d38:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     d3c:	61 e3       	ldi	r22, 0x31	; 49
     d3e:	84 e0       	ldi	r24, 0x04	; 4
     d40:	96 e0       	ldi	r25, 0x06	; 6
     d42:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     d46:	68 ef       	ldi	r22, 0xF8	; 248
     d48:	74 e0       	ldi	r23, 0x04	; 4
     d4a:	84 e0       	ldi	r24, 0x04	; 4
     d4c:	96 e0       	ldi	r25, 0x06	; 6
     d4e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     d52:	4c c0       	rjmp	.+152    	; 0xdec <_Z11deleteAlarmv+0xe0>
     d54:	84 e0       	ldi	r24, 0x04	; 4
     d56:	96 e0       	ldi	r25, 0x06	; 6
     d58:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     d5c:	66 ef       	ldi	r22, 0xF6	; 246
     d5e:	74 e0       	ldi	r23, 0x04	; 4
     d60:	84 e0       	ldi	r24, 0x04	; 4
     d62:	96 e0       	ldi	r25, 0x06	; 6
     d64:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     d68:	61 e3       	ldi	r22, 0x31	; 49
     d6a:	84 e0       	ldi	r24, 0x04	; 4
     d6c:	96 e0       	ldi	r25, 0x06	; 6
     d6e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     d72:	6f ef       	ldi	r22, 0xFF	; 255
     d74:	74 e0       	ldi	r23, 0x04	; 4
     d76:	84 e0       	ldi	r24, 0x04	; 4
     d78:	96 e0       	ldi	r25, 0x06	; 6
     d7a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     d7e:	20 91 ce 01 	lds	r18, 0x01CE	; 0x8001ce <alarmArray>
     d82:	30 91 cf 01 	lds	r19, 0x01CF	; 0x8001cf <alarmArray+0x1>
     d86:	c9 01       	movw	r24, r18
     d88:	64 e6       	ldi	r22, 0x64	; 100
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     d90:	7b 01       	movw	r14, r22
     d92:	8c 01       	movw	r16, r24
     d94:	c9 01       	movw	r24, r18
     d96:	68 ee       	ldi	r22, 0xE8	; 232
     d98:	73 e0       	ldi	r23, 0x03	; 3
     d9a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     d9e:	60 5d       	subi	r22, 0xD0	; 208
     da0:	84 e0       	ldi	r24, 0x04	; 4
     da2:	96 e0       	ldi	r25, 0x06	; 6
     da4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     da8:	ca e0       	ldi	r28, 0x0A	; 10
     daa:	d0 e0       	ldi	r29, 0x00	; 0
     dac:	c7 01       	movw	r24, r14
     dae:	be 01       	movw	r22, r28
     db0:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     db4:	60 e3       	ldi	r22, 0x30	; 48
     db6:	68 0f       	add	r22, r24
     db8:	84 e0       	ldi	r24, 0x04	; 4
     dba:	96 e0       	ldi	r25, 0x06	; 6
     dbc:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     dc0:	67 e9       	ldi	r22, 0x97	; 151
     dc2:	74 e0       	ldi	r23, 0x04	; 4
     dc4:	84 e0       	ldi	r24, 0x04	; 4
     dc6:	96 e0       	ldi	r25, 0x06	; 6
     dc8:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     dcc:	c8 01       	movw	r24, r16
     dce:	be 01       	movw	r22, r28
     dd0:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     dd4:	c8 2f       	mov	r28, r24
     dd6:	60 5d       	subi	r22, 0xD0	; 208
     dd8:	84 e0       	ldi	r24, 0x04	; 4
     dda:	96 e0       	ldi	r25, 0x06	; 6
     ddc:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     de0:	60 e3       	ldi	r22, 0x30	; 48
     de2:	6c 0f       	add	r22, r28
     de4:	84 e0       	ldi	r24, 0x04	; 4
     de6:	96 e0       	ldi	r25, 0x06	; 6
     de8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     dec:	c0 e0       	ldi	r28, 0x00	; 0
     dee:	d0 e0       	ldi	r29, 0x00	; 0
     df0:	84 e0       	ldi	r24, 0x04	; 4
     df2:	96 e0       	ldi	r25, 0x06	; 6
     df4:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN6Screen15Control_buttonsEv>
     df8:	84 36       	cpi	r24, 0x64	; 100
     dfa:	31 f4       	brne	.+12     	; 0xe08 <_Z11deleteAlarmv+0xfc>
     dfc:	c4 30       	cpi	r28, 0x04	; 4
     dfe:	d1 05       	cpc	r29, r1
     e00:	09 f4       	brne	.+2      	; 0xe04 <_Z11deleteAlarmv+0xf8>
     e02:	68 c0       	rjmp	.+208    	; 0xed4 <_Z11deleteAlarmv+0x1c8>
     e04:	21 96       	adiw	r28, 0x01	; 1
     e06:	6b c0       	rjmp	.+214    	; 0xede <_Z11deleteAlarmv+0x1d2>
     e08:	85 37       	cpi	r24, 0x75	; 117
     e0a:	29 f4       	brne	.+10     	; 0xe16 <_Z11deleteAlarmv+0x10a>
     e0c:	20 97       	sbiw	r28, 0x00	; 0
     e0e:	09 f4       	brne	.+2      	; 0xe12 <_Z11deleteAlarmv+0x106>
     e10:	64 c0       	rjmp	.+200    	; 0xeda <_Z11deleteAlarmv+0x1ce>
     e12:	21 97       	sbiw	r28, 0x01	; 1
     e14:	64 c0       	rjmp	.+200    	; 0xede <_Z11deleteAlarmv+0x1d2>
     e16:	83 37       	cpi	r24, 0x73	; 115
     e18:	09 f0       	breq	.+2      	; 0xe1c <_Z11deleteAlarmv+0x110>
     e1a:	59 c0       	rjmp	.+178    	; 0xece <_Z11deleteAlarmv+0x1c2>
     e1c:	84 e0       	ldi	r24, 0x04	; 4
     e1e:	96 e0       	ldi	r25, 0x06	; 6
     e20:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     e24:	62 e0       	ldi	r22, 0x02	; 2
     e26:	75 e0       	ldi	r23, 0x05	; 5
     e28:	84 e0       	ldi	r24, 0x04	; 4
     e2a:	96 e0       	ldi	r25, 0x06	; 6
     e2c:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     e30:	60 ec       	ldi	r22, 0xC0	; 192
     e32:	84 e0       	ldi	r24, 0x04	; 4
     e34:	96 e0       	ldi	r25, 0x06	; 6
     e36:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     e3a:	60 e1       	ldi	r22, 0x10	; 16
     e3c:	75 e0       	ldi	r23, 0x05	; 5
     e3e:	84 e0       	ldi	r24, 0x04	; 4
     e40:	96 e0       	ldi	r25, 0x06	; 6
     e42:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	96 e0       	ldi	r25, 0x06	; 6
     e4a:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN6Screen13pressedSelectEv>
     e4e:	88 23       	and	r24, r24
     e50:	b1 f1       	breq	.+108    	; 0xebe <_Z11deleteAlarmv+0x1b2>
     e52:	ce 01       	movw	r24, r28
     e54:	84 30       	cpi	r24, 0x04	; 4
     e56:	91 05       	cpc	r25, r1
     e58:	f4 f4       	brge	.+60     	; 0xe96 <_Z11deleteAlarmv+0x18a>
     e5a:	ac 01       	movw	r20, r24
     e5c:	4f 5f       	subi	r20, 0xFF	; 255
     e5e:	5f 4f       	sbci	r21, 0xFF	; 255
     e60:	9a 01       	movw	r18, r20
     e62:	22 0f       	add	r18, r18
     e64:	33 1f       	adc	r19, r19
     e66:	f9 01       	movw	r30, r18
     e68:	e2 53       	subi	r30, 0x32	; 50
     e6a:	fe 4f       	sbci	r31, 0xFE	; 254
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	88 0f       	add	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	fc 01       	movw	r30, r24
     e76:	e2 53       	subi	r30, 0x32	; 50
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
     e7a:	71 83       	std	Z+1, r23	; 0x01
     e7c:	60 83       	st	Z, r22
     e7e:	f9 01       	movw	r30, r18
     e80:	ec 53       	subi	r30, 0x3C	; 60
     e82:	fe 4f       	sbci	r31, 0xFE	; 254
     e84:	20 81       	ld	r18, Z
     e86:	31 81       	ldd	r19, Z+1	; 0x01
     e88:	fc 01       	movw	r30, r24
     e8a:	ec 53       	subi	r30, 0x3C	; 60
     e8c:	fe 4f       	sbci	r31, 0xFE	; 254
     e8e:	31 83       	std	Z+1, r19	; 0x01
     e90:	20 83       	st	Z, r18
     e92:	ca 01       	movw	r24, r20
     e94:	df cf       	rjmp	.-66     	; 0xe54 <_Z11deleteAlarmv+0x148>
     e96:	8f ef       	ldi	r24, 0xFF	; 255
     e98:	9f ef       	ldi	r25, 0xFF	; 255
     e9a:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <alarmArray+0x9>
     e9e:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <alarmArray+0x8>
     ea2:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <alarmToneArray+0x9>
     ea6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <alarmToneArray+0x8>
     eaa:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <ith_alarm>
     eae:	90 91 f1 05 	lds	r25, 0x05F1	; 0x8005f1 <ith_alarm+0x1>
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	90 93 f1 05 	sts	0x05F1, r25	; 0x8005f1 <ith_alarm+0x1>
     eb8:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <ith_alarm>
     ebc:	10 c0       	rjmp	.+32     	; 0xede <_Z11deleteAlarmv+0x1d2>
     ebe:	84 e0       	ldi	r24, 0x04	; 4
     ec0:	96 e0       	ldi	r25, 0x06	; 6
     ec2:	0e 94 85 03 	call	0x70a	; 0x70a <_ZN6Screen11pressedBackEv>
     ec6:	88 23       	and	r24, r24
     ec8:	09 f4       	brne	.+2      	; 0xecc <_Z11deleteAlarmv+0x1c0>
     eca:	bd cf       	rjmp	.-134    	; 0xe46 <_Z11deleteAlarmv+0x13a>
     ecc:	08 c0       	rjmp	.+16     	; 0xede <_Z11deleteAlarmv+0x1d2>
     ece:	82 36       	cpi	r24, 0x62	; 98
     ed0:	31 f4       	brne	.+12     	; 0xede <_Z11deleteAlarmv+0x1d2>
     ed2:	76 c0       	rjmp	.+236    	; 0xfc0 <_Z11deleteAlarmv+0x2b4>
     ed4:	c0 e0       	ldi	r28, 0x00	; 0
     ed6:	d0 e0       	ldi	r29, 0x00	; 0
     ed8:	02 c0       	rjmp	.+4      	; 0xede <_Z11deleteAlarmv+0x1d2>
     eda:	c4 e0       	ldi	r28, 0x04	; 4
     edc:	d0 e0       	ldi	r29, 0x00	; 0
     ede:	fe 01       	movw	r30, r28
     ee0:	ee 0f       	add	r30, r30
     ee2:	ff 1f       	adc	r31, r31
     ee4:	e2 53       	subi	r30, 0x32	; 50
     ee6:	fe 4f       	sbci	r31, 0xFE	; 254
     ee8:	80 81       	ld	r24, Z
     eea:	91 81       	ldd	r25, Z+1	; 0x01
     eec:	01 96       	adiw	r24, 0x01	; 1
     eee:	b9 f4       	brne	.+46     	; 0xf1e <_Z11deleteAlarmv+0x212>
     ef0:	84 e0       	ldi	r24, 0x04	; 4
     ef2:	96 e0       	ldi	r25, 0x06	; 6
     ef4:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     ef8:	66 ef       	ldi	r22, 0xF6	; 246
     efa:	74 e0       	ldi	r23, 0x04	; 4
     efc:	84 e0       	ldi	r24, 0x04	; 4
     efe:	96 e0       	ldi	r25, 0x06	; 6
     f00:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     f04:	6c 2f       	mov	r22, r28
     f06:	6f 5c       	subi	r22, 0xCF	; 207
     f08:	84 e0       	ldi	r24, 0x04	; 4
     f0a:	96 e0       	ldi	r25, 0x06	; 6
     f0c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     f10:	68 ef       	ldi	r22, 0xF8	; 248
     f12:	74 e0       	ldi	r23, 0x04	; 4
     f14:	84 e0       	ldi	r24, 0x04	; 4
     f16:	96 e0       	ldi	r25, 0x06	; 6
     f18:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     f1c:	69 cf       	rjmp	.-302    	; 0xdf0 <_Z11deleteAlarmv+0xe4>
     f1e:	84 e0       	ldi	r24, 0x04	; 4
     f20:	96 e0       	ldi	r25, 0x06	; 6
     f22:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     f26:	66 ef       	ldi	r22, 0xF6	; 246
     f28:	74 e0       	ldi	r23, 0x04	; 4
     f2a:	84 e0       	ldi	r24, 0x04	; 4
     f2c:	96 e0       	ldi	r25, 0x06	; 6
     f2e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     f32:	6c 2f       	mov	r22, r28
     f34:	6f 5c       	subi	r22, 0xCF	; 207
     f36:	84 e0       	ldi	r24, 0x04	; 4
     f38:	96 e0       	ldi	r25, 0x06	; 6
     f3a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     f3e:	6f ef       	ldi	r22, 0xFF	; 255
     f40:	74 e0       	ldi	r23, 0x04	; 4
     f42:	84 e0       	ldi	r24, 0x04	; 4
     f44:	96 e0       	ldi	r25, 0x06	; 6
     f46:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     f4a:	fe 01       	movw	r30, r28
     f4c:	ee 0f       	add	r30, r30
     f4e:	ff 1f       	adc	r31, r31
     f50:	e2 53       	subi	r30, 0x32	; 50
     f52:	fe 4f       	sbci	r31, 0xFE	; 254
     f54:	20 81       	ld	r18, Z
     f56:	31 81       	ldd	r19, Z+1	; 0x01
     f58:	c9 01       	movw	r24, r18
     f5a:	64 e6       	ldi	r22, 0x64	; 100
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     f62:	6b 01       	movw	r12, r22
     f64:	7c 01       	movw	r14, r24
     f66:	c9 01       	movw	r24, r18
     f68:	68 ee       	ldi	r22, 0xE8	; 232
     f6a:	73 e0       	ldi	r23, 0x03	; 3
     f6c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     f70:	60 5d       	subi	r22, 0xD0	; 208
     f72:	84 e0       	ldi	r24, 0x04	; 4
     f74:	96 e0       	ldi	r25, 0x06	; 6
     f76:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     f7a:	0a e0       	ldi	r16, 0x0A	; 10
     f7c:	10 e0       	ldi	r17, 0x00	; 0
     f7e:	c6 01       	movw	r24, r12
     f80:	b8 01       	movw	r22, r16
     f82:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     f86:	60 e3       	ldi	r22, 0x30	; 48
     f88:	68 0f       	add	r22, r24
     f8a:	84 e0       	ldi	r24, 0x04	; 4
     f8c:	96 e0       	ldi	r25, 0x06	; 6
     f8e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     f92:	67 e9       	ldi	r22, 0x97	; 151
     f94:	74 e0       	ldi	r23, 0x04	; 4
     f96:	84 e0       	ldi	r24, 0x04	; 4
     f98:	96 e0       	ldi	r25, 0x06	; 6
     f9a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     f9e:	c7 01       	movw	r24, r14
     fa0:	b8 01       	movw	r22, r16
     fa2:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
     fa6:	18 2f       	mov	r17, r24
     fa8:	60 5d       	subi	r22, 0xD0	; 208
     faa:	84 e0       	ldi	r24, 0x04	; 4
     fac:	96 e0       	ldi	r25, 0x06	; 6
     fae:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     fb2:	60 e3       	ldi	r22, 0x30	; 48
     fb4:	61 0f       	add	r22, r17
     fb6:	84 e0       	ldi	r24, 0x04	; 4
     fb8:	96 e0       	ldi	r25, 0x06	; 6
     fba:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
     fbe:	18 cf       	rjmp	.-464    	; 0xdf0 <_Z11deleteAlarmv+0xe4>
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	ff 90       	pop	r15
     fca:	ef 90       	pop	r14
     fcc:	df 90       	pop	r13
     fce:	cf 90       	pop	r12
     fd0:	08 95       	ret

00000fd2 <_Z12factoryResetv>:
     fd2:	cf 92       	push	r12
     fd4:	ef 92       	push	r14
     fd6:	0f 93       	push	r16
     fd8:	84 e0       	ldi	r24, 0x04	; 4
     fda:	96 e0       	ldi	r25, 0x06	; 6
     fdc:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
     fe0:	62 e0       	ldi	r22, 0x02	; 2
     fe2:	75 e0       	ldi	r23, 0x05	; 5
     fe4:	84 e0       	ldi	r24, 0x04	; 4
     fe6:	96 e0       	ldi	r25, 0x06	; 6
     fe8:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
     fec:	60 ec       	ldi	r22, 0xC0	; 192
     fee:	84 e0       	ldi	r24, 0x04	; 4
     ff0:	96 e0       	ldi	r25, 0x06	; 6
     ff2:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
     ff6:	60 e1       	ldi	r22, 0x10	; 16
     ff8:	75 e0       	ldi	r23, 0x05	; 5
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	96 e0       	ldi	r25, 0x06	; 6
     ffe:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1002:	84 e0       	ldi	r24, 0x04	; 4
    1004:	96 e0       	ldi	r25, 0x06	; 6
    1006:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN6Screen13pressedSelectEv>
    100a:	88 23       	and	r24, r24
    100c:	09 f4       	brne	.+2      	; 0x1010 <_Z12factoryResetv+0x3e>
    100e:	aa c0       	rjmp	.+340    	; 0x1164 <_Z12factoryResetv+0x192>
    1010:	c1 2c       	mov	r12, r1
    1012:	e1 2c       	mov	r14, r1
    1014:	00 e0       	ldi	r16, 0x00	; 0
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	41 e0       	ldi	r20, 0x01	; 1
    101a:	61 e0       	ldi	r22, 0x01	; 1
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	0e 94 85 00 	call	0x10a	; 0x10a <_Z14ds1307_setdatehhhhhhh>
    1022:	61 e2       	ldi	r22, 0x21	; 33
    1024:	75 e0       	ldi	r23, 0x05	; 5
    1026:	84 e0       	ldi	r24, 0x04	; 4
    1028:	96 e0       	ldi	r25, 0x06	; 6
    102a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    102e:	80 e1       	ldi	r24, 0x10	; 16
    1030:	97 e2       	ldi	r25, 0x27	; 39
    1032:	00 97       	sbiw	r24, 0x00	; 0
    1034:	31 f0       	breq	.+12     	; 0x1042 <_Z12factoryResetv+0x70>
    1036:	e9 e1       	ldi	r30, 0x19	; 25
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	31 97       	sbiw	r30, 0x01	; 1
    103c:	f1 f7       	brne	.-4      	; 0x103a <_Z12factoryResetv+0x68>
    103e:	01 97       	sbiw	r24, 0x01	; 1
    1040:	f8 cf       	rjmp	.-16     	; 0x1032 <_Z12factoryResetv+0x60>
    1042:	6d e2       	ldi	r22, 0x2D	; 45
    1044:	75 e0       	ldi	r23, 0x05	; 5
    1046:	84 e0       	ldi	r24, 0x04	; 4
    1048:	96 e0       	ldi	r25, 0x06	; 6
    104a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    104e:	80 e1       	ldi	r24, 0x10	; 16
    1050:	97 e2       	ldi	r25, 0x27	; 39
    1052:	00 97       	sbiw	r24, 0x00	; 0
    1054:	31 f0       	breq	.+12     	; 0x1062 <_Z12factoryResetv+0x90>
    1056:	e9 e1       	ldi	r30, 0x19	; 25
    1058:	f0 e0       	ldi	r31, 0x00	; 0
    105a:	31 97       	sbiw	r30, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <_Z12factoryResetv+0x88>
    105e:	01 97       	sbiw	r24, 0x01	; 1
    1060:	f8 cf       	rjmp	.-16     	; 0x1052 <_Z12factoryResetv+0x80>
    1062:	6d e2       	ldi	r22, 0x2D	; 45
    1064:	75 e0       	ldi	r23, 0x05	; 5
    1066:	84 e0       	ldi	r24, 0x04	; 4
    1068:	96 e0       	ldi	r25, 0x06	; 6
    106a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    106e:	80 e1       	ldi	r24, 0x10	; 16
    1070:	97 e2       	ldi	r25, 0x27	; 39
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	31 f0       	breq	.+12     	; 0x1082 <_Z12factoryResetv+0xb0>
    1076:	e9 e1       	ldi	r30, 0x19	; 25
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	31 97       	sbiw	r30, 0x01	; 1
    107c:	f1 f7       	brne	.-4      	; 0x107a <_Z12factoryResetv+0xa8>
    107e:	01 97       	sbiw	r24, 0x01	; 1
    1080:	f8 cf       	rjmp	.-16     	; 0x1072 <_Z12factoryResetv+0xa0>
    1082:	6d e2       	ldi	r22, 0x2D	; 45
    1084:	75 e0       	ldi	r23, 0x05	; 5
    1086:	84 e0       	ldi	r24, 0x04	; 4
    1088:	96 e0       	ldi	r25, 0x06	; 6
    108a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    108e:	80 e1       	ldi	r24, 0x10	; 16
    1090:	97 e2       	ldi	r25, 0x27	; 39
    1092:	00 97       	sbiw	r24, 0x00	; 0
    1094:	31 f0       	breq	.+12     	; 0x10a2 <_Z12factoryResetv+0xd0>
    1096:	e9 e1       	ldi	r30, 0x19	; 25
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	31 97       	sbiw	r30, 0x01	; 1
    109c:	f1 f7       	brne	.-4      	; 0x109a <_Z12factoryResetv+0xc8>
    109e:	01 97       	sbiw	r24, 0x01	; 1
    10a0:	f8 cf       	rjmp	.-16     	; 0x1092 <_Z12factoryResetv+0xc0>
    10a2:	84 e0       	ldi	r24, 0x04	; 4
    10a4:	96 e0       	ldi	r25, 0x06	; 6
    10a6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    10aa:	84 ec       	ldi	r24, 0xC4	; 196
    10ac:	99 e0       	ldi	r25, 0x09	; 9
    10ae:	01 97       	sbiw	r24, 0x01	; 1
    10b0:	f1 f7       	brne	.-4      	; 0x10ae <_Z12factoryResetv+0xdc>
    10b2:	61 e2       	ldi	r22, 0x21	; 33
    10b4:	75 e0       	ldi	r23, 0x05	; 5
    10b6:	84 e0       	ldi	r24, 0x04	; 4
    10b8:	96 e0       	ldi	r25, 0x06	; 6
    10ba:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    10be:	80 e1       	ldi	r24, 0x10	; 16
    10c0:	97 e2       	ldi	r25, 0x27	; 39
    10c2:	00 97       	sbiw	r24, 0x00	; 0
    10c4:	31 f0       	breq	.+12     	; 0x10d2 <_Z12factoryResetv+0x100>
    10c6:	e9 e1       	ldi	r30, 0x19	; 25
    10c8:	f0 e0       	ldi	r31, 0x00	; 0
    10ca:	31 97       	sbiw	r30, 0x01	; 1
    10cc:	f1 f7       	brne	.-4      	; 0x10ca <_Z12factoryResetv+0xf8>
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	f8 cf       	rjmp	.-16     	; 0x10c2 <_Z12factoryResetv+0xf0>
    10d2:	6d e2       	ldi	r22, 0x2D	; 45
    10d4:	75 e0       	ldi	r23, 0x05	; 5
    10d6:	84 e0       	ldi	r24, 0x04	; 4
    10d8:	96 e0       	ldi	r25, 0x06	; 6
    10da:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    10de:	80 e1       	ldi	r24, 0x10	; 16
    10e0:	97 e2       	ldi	r25, 0x27	; 39
    10e2:	00 97       	sbiw	r24, 0x00	; 0
    10e4:	31 f0       	breq	.+12     	; 0x10f2 <_Z12factoryResetv+0x120>
    10e6:	e9 e1       	ldi	r30, 0x19	; 25
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	31 97       	sbiw	r30, 0x01	; 1
    10ec:	f1 f7       	brne	.-4      	; 0x10ea <_Z12factoryResetv+0x118>
    10ee:	01 97       	sbiw	r24, 0x01	; 1
    10f0:	f8 cf       	rjmp	.-16     	; 0x10e2 <_Z12factoryResetv+0x110>
    10f2:	6d e2       	ldi	r22, 0x2D	; 45
    10f4:	75 e0       	ldi	r23, 0x05	; 5
    10f6:	84 e0       	ldi	r24, 0x04	; 4
    10f8:	96 e0       	ldi	r25, 0x06	; 6
    10fa:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    10fe:	80 e1       	ldi	r24, 0x10	; 16
    1100:	97 e2       	ldi	r25, 0x27	; 39
    1102:	00 97       	sbiw	r24, 0x00	; 0
    1104:	31 f0       	breq	.+12     	; 0x1112 <_Z12factoryResetv+0x140>
    1106:	e9 e1       	ldi	r30, 0x19	; 25
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	31 97       	sbiw	r30, 0x01	; 1
    110c:	f1 f7       	brne	.-4      	; 0x110a <_Z12factoryResetv+0x138>
    110e:	01 97       	sbiw	r24, 0x01	; 1
    1110:	f8 cf       	rjmp	.-16     	; 0x1102 <_Z12factoryResetv+0x130>
    1112:	6d e2       	ldi	r22, 0x2D	; 45
    1114:	75 e0       	ldi	r23, 0x05	; 5
    1116:	84 e0       	ldi	r24, 0x04	; 4
    1118:	96 e0       	ldi	r25, 0x06	; 6
    111a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    111e:	80 e1       	ldi	r24, 0x10	; 16
    1120:	97 e2       	ldi	r25, 0x27	; 39
    1122:	00 97       	sbiw	r24, 0x00	; 0
    1124:	31 f0       	breq	.+12     	; 0x1132 <_Z12factoryResetv+0x160>
    1126:	e9 e1       	ldi	r30, 0x19	; 25
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	31 97       	sbiw	r30, 0x01	; 1
    112c:	f1 f7       	brne	.-4      	; 0x112a <_Z12factoryResetv+0x158>
    112e:	01 97       	sbiw	r24, 0x01	; 1
    1130:	f8 cf       	rjmp	.-16     	; 0x1122 <_Z12factoryResetv+0x150>
    1132:	84 e0       	ldi	r24, 0x04	; 4
    1134:	96 e0       	ldi	r25, 0x06	; 6
    1136:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    113a:	6f e2       	ldi	r22, 0x2F	; 47
    113c:	75 e0       	ldi	r23, 0x05	; 5
    113e:	84 e0       	ldi	r24, 0x04	; 4
    1140:	96 e0       	ldi	r25, 0x06	; 6
    1142:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1146:	80 e1       	ldi	r24, 0x10	; 16
    1148:	97 e2       	ldi	r25, 0x27	; 39
    114a:	00 97       	sbiw	r24, 0x00	; 0
    114c:	31 f0       	breq	.+12     	; 0x115a <_Z12factoryResetv+0x188>
    114e:	e9 e1       	ldi	r30, 0x19	; 25
    1150:	f0 e0       	ldi	r31, 0x00	; 0
    1152:	31 97       	sbiw	r30, 0x01	; 1
    1154:	f1 f7       	brne	.-4      	; 0x1152 <_Z12factoryResetv+0x180>
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	f8 cf       	rjmp	.-16     	; 0x114a <_Z12factoryResetv+0x178>
    115a:	84 e0       	ldi	r24, 0x04	; 4
    115c:	96 e0       	ldi	r25, 0x06	; 6
    115e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    1162:	07 c0       	rjmp	.+14     	; 0x1172 <_Z12factoryResetv+0x1a0>
    1164:	84 e0       	ldi	r24, 0x04	; 4
    1166:	96 e0       	ldi	r25, 0x06	; 6
    1168:	0e 94 85 03 	call	0x70a	; 0x70a <_ZN6Screen11pressedBackEv>
    116c:	88 23       	and	r24, r24
    116e:	09 f4       	brne	.+2      	; 0x1172 <_Z12factoryResetv+0x1a0>
    1170:	48 cf       	rjmp	.-368    	; 0x1002 <_Z12factoryResetv+0x30>
    1172:	0f 91       	pop	r16
    1174:	ef 90       	pop	r14
    1176:	cf 90       	pop	r12
    1178:	08 95       	ret

0000117a <_Z10checkAlarmv>:
    117a:	cf 92       	push	r12
    117c:	df 92       	push	r13
    117e:	ef 92       	push	r14
    1180:	ff 92       	push	r15
    1182:	0f 93       	push	r16
    1184:	1f 93       	push	r17
    1186:	cf 93       	push	r28
    1188:	df 93       	push	r29
    118a:	0f 2e       	mov	r0, r31
    118c:	fc ef       	ldi	r31, 0xFC	; 252
    118e:	cf 2e       	mov	r12, r31
    1190:	f5 e0       	ldi	r31, 0x05	; 5
    1192:	df 2e       	mov	r13, r31
    1194:	f0 2d       	mov	r31, r0
    1196:	0f 2e       	mov	r0, r31
    1198:	fd ef       	ldi	r31, 0xFD	; 253
    119a:	ef 2e       	mov	r14, r31
    119c:	f5 e0       	ldi	r31, 0x05	; 5
    119e:	ff 2e       	mov	r15, r31
    11a0:	f0 2d       	mov	r31, r0
    11a2:	0e ef       	ldi	r16, 0xFE	; 254
    11a4:	15 e0       	ldi	r17, 0x05	; 5
    11a6:	2f ef       	ldi	r18, 0xFF	; 255
    11a8:	35 e0       	ldi	r19, 0x05	; 5
    11aa:	40 e0       	ldi	r20, 0x00	; 0
    11ac:	56 e0       	ldi	r21, 0x06	; 6
    11ae:	61 e0       	ldi	r22, 0x01	; 1
    11b0:	76 e0       	ldi	r23, 0x06	; 6
    11b2:	82 e0       	ldi	r24, 0x02	; 2
    11b4:	96 e0       	ldi	r25, 0x06	; 6
    11b6:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14ds1307_getdatePhS_S_S_S_S_S_>
    11ba:	c0 e0       	ldi	r28, 0x00	; 0
    11bc:	d0 e0       	ldi	r29, 0x00	; 0
    11be:	c5 30       	cpi	r28, 0x05	; 5
    11c0:	d1 05       	cpc	r29, r1
    11c2:	0c f0       	brlt	.+2      	; 0x11c6 <_Z10checkAlarmv+0x4c>
    11c4:	bc c0       	rjmp	.+376    	; 0x133e <_Z10checkAlarmv+0x1c4>
    11c6:	fe 01       	movw	r30, r28
    11c8:	ee 0f       	add	r30, r30
    11ca:	ff 1f       	adc	r31, r31
    11cc:	e2 53       	subi	r30, 0x32	; 50
    11ce:	fe 4f       	sbci	r31, 0xFE	; 254
    11d0:	20 81       	ld	r18, Z
    11d2:	31 81       	ldd	r19, Z+1	; 0x01
    11d4:	2f 3f       	cpi	r18, 0xFF	; 255
    11d6:	8f ef       	ldi	r24, 0xFF	; 255
    11d8:	38 07       	cpc	r19, r24
    11da:	09 f4       	brne	.+2      	; 0x11de <_Z10checkAlarmv+0x64>
    11dc:	b0 c0       	rjmp	.+352    	; 0x133e <_Z10checkAlarmv+0x1c4>
    11de:	c9 01       	movw	r24, r18
    11e0:	64 e6       	ldi	r22, 0x64	; 100
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    11e8:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <hour>
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	68 17       	cp	r22, r24
    11f0:	79 07       	cpc	r23, r25
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <_Z10checkAlarmv+0x7c>
    11f4:	a2 c0       	rjmp	.+324    	; 0x133a <_Z10checkAlarmv+0x1c0>
    11f6:	c9 01       	movw	r24, r18
    11f8:	64 e6       	ldi	r22, 0x64	; 100
    11fa:	70 e0       	ldi	r23, 0x00	; 0
    11fc:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1200:	20 91 fd 05 	lds	r18, 0x05FD	; 0x8005fd <minute>
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	82 17       	cp	r24, r18
    1208:	93 07       	cpc	r25, r19
    120a:	09 f0       	breq	.+2      	; 0x120e <_Z10checkAlarmv+0x94>
    120c:	96 c0       	rjmp	.+300    	; 0x133a <_Z10checkAlarmv+0x1c0>
    120e:	84 e0       	ldi	r24, 0x04	; 4
    1210:	96 e0       	ldi	r25, 0x06	; 6
    1212:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    1216:	67 e3       	ldi	r22, 0x37	; 55
    1218:	75 e0       	ldi	r23, 0x05	; 5
    121a:	84 e0       	ldi	r24, 0x04	; 4
    121c:	96 e0       	ldi	r25, 0x06	; 6
    121e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1222:	60 91 fe 05 	lds	r22, 0x05FE	; 0x8005fe <hour>
    1226:	1d ec       	ldi	r17, 0xCD	; 205
    1228:	61 9f       	mul	r22, r17
    122a:	61 2d       	mov	r22, r1
    122c:	11 24       	eor	r1, r1
    122e:	66 95       	lsr	r22
    1230:	66 95       	lsr	r22
    1232:	66 95       	lsr	r22
    1234:	60 5d       	subi	r22, 0xD0	; 208
    1236:	84 e0       	ldi	r24, 0x04	; 4
    1238:	96 e0       	ldi	r25, 0x06	; 6
    123a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    123e:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <hour>
    1242:	81 9f       	mul	r24, r17
    1244:	91 2d       	mov	r25, r1
    1246:	11 24       	eor	r1, r1
    1248:	96 95       	lsr	r25
    124a:	96 95       	lsr	r25
    124c:	96 95       	lsr	r25
    124e:	99 0f       	add	r25, r25
    1250:	29 2f       	mov	r18, r25
    1252:	22 0f       	add	r18, r18
    1254:	22 0f       	add	r18, r18
    1256:	92 0f       	add	r25, r18
    1258:	89 1b       	sub	r24, r25
    125a:	60 e3       	ldi	r22, 0x30	; 48
    125c:	68 0f       	add	r22, r24
    125e:	84 e0       	ldi	r24, 0x04	; 4
    1260:	96 e0       	ldi	r25, 0x06	; 6
    1262:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1266:	67 e9       	ldi	r22, 0x97	; 151
    1268:	74 e0       	ldi	r23, 0x04	; 4
    126a:	84 e0       	ldi	r24, 0x04	; 4
    126c:	96 e0       	ldi	r25, 0x06	; 6
    126e:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1272:	60 91 fd 05 	lds	r22, 0x05FD	; 0x8005fd <minute>
    1276:	61 9f       	mul	r22, r17
    1278:	61 2d       	mov	r22, r1
    127a:	11 24       	eor	r1, r1
    127c:	66 95       	lsr	r22
    127e:	66 95       	lsr	r22
    1280:	66 95       	lsr	r22
    1282:	60 5d       	subi	r22, 0xD0	; 208
    1284:	84 e0       	ldi	r24, 0x04	; 4
    1286:	96 e0       	ldi	r25, 0x06	; 6
    1288:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    128c:	90 91 fd 05 	lds	r25, 0x05FD	; 0x8005fd <minute>
    1290:	91 9f       	mul	r25, r17
    1292:	81 2d       	mov	r24, r1
    1294:	11 24       	eor	r1, r1
    1296:	86 95       	lsr	r24
    1298:	86 95       	lsr	r24
    129a:	86 95       	lsr	r24
    129c:	88 0f       	add	r24, r24
    129e:	28 2f       	mov	r18, r24
    12a0:	22 0f       	add	r18, r18
    12a2:	22 0f       	add	r18, r18
    12a4:	82 0f       	add	r24, r18
    12a6:	98 1b       	sub	r25, r24
    12a8:	60 e3       	ldi	r22, 0x30	; 48
    12aa:	69 0f       	add	r22, r25
    12ac:	84 e0       	ldi	r24, 0x04	; 4
    12ae:	96 e0       	ldi	r25, 0x06	; 6
    12b0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    12b4:	fe 01       	movw	r30, r28
    12b6:	ee 0f       	add	r30, r30
    12b8:	ff 1f       	adc	r31, r31
    12ba:	ec 53       	subi	r30, 0x3C	; 60
    12bc:	fe 4f       	sbci	r31, 0xFE	; 254
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	85 e0       	ldi	r24, 0x05	; 5
    12c4:	96 e0       	ldi	r25, 0x06	; 6
    12c6:	0e 94 75 14 	call	0x28ea	; 0x28ea <_ZN4Tone10playMelodyEi>
    12ca:	84 e0       	ldi	r24, 0x04	; 4
    12cc:	96 e0       	ldi	r25, 0x06	; 6
    12ce:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    12d2:	c4 30       	cpi	r28, 0x04	; 4
    12d4:	d1 05       	cpc	r29, r1
    12d6:	ec f4       	brge	.+58     	; 0x1312 <_Z10checkAlarmv+0x198>
    12d8:	9e 01       	movw	r18, r28
    12da:	2f 5f       	subi	r18, 0xFF	; 255
    12dc:	3f 4f       	sbci	r19, 0xFF	; 255
    12de:	c9 01       	movw	r24, r18
    12e0:	88 0f       	add	r24, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	fc 01       	movw	r30, r24
    12e6:	e2 53       	subi	r30, 0x32	; 50
    12e8:	fe 4f       	sbci	r31, 0xFE	; 254
    12ea:	40 81       	ld	r20, Z
    12ec:	51 81       	ldd	r21, Z+1	; 0x01
    12ee:	cc 0f       	add	r28, r28
    12f0:	dd 1f       	adc	r29, r29
    12f2:	fe 01       	movw	r30, r28
    12f4:	e2 53       	subi	r30, 0x32	; 50
    12f6:	fe 4f       	sbci	r31, 0xFE	; 254
    12f8:	51 83       	std	Z+1, r21	; 0x01
    12fa:	40 83       	st	Z, r20
    12fc:	fc 01       	movw	r30, r24
    12fe:	ec 53       	subi	r30, 0x3C	; 60
    1300:	fe 4f       	sbci	r31, 0xFE	; 254
    1302:	80 81       	ld	r24, Z
    1304:	91 81       	ldd	r25, Z+1	; 0x01
    1306:	cc 53       	subi	r28, 0x3C	; 60
    1308:	de 4f       	sbci	r29, 0xFE	; 254
    130a:	99 83       	std	Y+1, r25	; 0x01
    130c:	88 83       	st	Y, r24
    130e:	e9 01       	movw	r28, r18
    1310:	e0 cf       	rjmp	.-64     	; 0x12d2 <_Z10checkAlarmv+0x158>
    1312:	8f ef       	ldi	r24, 0xFF	; 255
    1314:	9f ef       	ldi	r25, 0xFF	; 255
    1316:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <alarmArray+0x9>
    131a:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <alarmArray+0x8>
    131e:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <alarmToneArray+0x9>
    1322:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <alarmToneArray+0x8>
    1326:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <ith_alarm>
    132a:	90 91 f1 05 	lds	r25, 0x05F1	; 0x8005f1 <ith_alarm+0x1>
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	90 93 f1 05 	sts	0x05F1, r25	; 0x8005f1 <ith_alarm+0x1>
    1334:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <ith_alarm>
    1338:	02 c0       	rjmp	.+4      	; 0x133e <_Z10checkAlarmv+0x1c4>
    133a:	21 96       	adiw	r28, 0x01	; 1
    133c:	40 cf       	rjmp	.-384    	; 0x11be <_Z10checkAlarmv+0x44>
    133e:	df 91       	pop	r29
    1340:	cf 91       	pop	r28
    1342:	1f 91       	pop	r17
    1344:	0f 91       	pop	r16
    1346:	ff 90       	pop	r15
    1348:	ef 90       	pop	r14
    134a:	df 90       	pop	r13
    134c:	cf 90       	pop	r12
    134e:	08 95       	ret

00001350 <_Z15moveCursorRighti>:
    1350:	0f 93       	push	r16
    1352:	1f 93       	push	r17
    1354:	cf 93       	push	r28
    1356:	df 93       	push	r29
    1358:	8c 01       	movw	r16, r24
    135a:	c0 e0       	ldi	r28, 0x00	; 0
    135c:	d0 e0       	ldi	r29, 0x00	; 0
    135e:	c0 17       	cp	r28, r16
    1360:	d1 07       	cpc	r29, r17
    1362:	3c f4       	brge	.+14     	; 0x1372 <_Z15moveCursorRighti+0x22>
    1364:	64 e1       	ldi	r22, 0x14	; 20
    1366:	84 e0       	ldi	r24, 0x04	; 4
    1368:	96 e0       	ldi	r25, 0x06	; 6
    136a:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    136e:	21 96       	adiw	r28, 0x01	; 1
    1370:	f6 cf       	rjmp	.-20     	; 0x135e <_Z15moveCursorRighti+0xe>
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	08 95       	ret

0000137c <_Z14moveCursorLefti>:
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	8c 01       	movw	r16, r24
    1386:	c0 e0       	ldi	r28, 0x00	; 0
    1388:	d0 e0       	ldi	r29, 0x00	; 0
    138a:	c0 17       	cp	r28, r16
    138c:	d1 07       	cpc	r29, r17
    138e:	3c f4       	brge	.+14     	; 0x139e <_Z14moveCursorLefti+0x22>
    1390:	60 e1       	ldi	r22, 0x10	; 16
    1392:	84 e0       	ldi	r24, 0x04	; 4
    1394:	96 e0       	ldi	r25, 0x06	; 6
    1396:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    139a:	21 96       	adiw	r28, 0x01	; 1
    139c:	f6 cf       	rjmp	.-20     	; 0x138a <_Z14moveCursorLefti+0xe>
    139e:	df 91       	pop	r29
    13a0:	cf 91       	pop	r28
    13a2:	1f 91       	pop	r17
    13a4:	0f 91       	pop	r16
    13a6:	08 95       	ret

000013a8 <_Z12setClockTimev>:
    13a8:	8f 92       	push	r8
    13aa:	9f 92       	push	r9
    13ac:	af 92       	push	r10
    13ae:	bf 92       	push	r11
    13b0:	cf 92       	push	r12
    13b2:	ef 92       	push	r14
    13b4:	0f 93       	push	r16
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	84 e0       	ldi	r24, 0x04	; 4
    13bc:	96 e0       	ldi	r25, 0x06	; 6
    13be:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    13c2:	6d e3       	ldi	r22, 0x3D	; 61
    13c4:	75 e0       	ldi	r23, 0x05	; 5
    13c6:	84 e0       	ldi	r24, 0x04	; 4
    13c8:	96 e0       	ldi	r25, 0x06	; 6
    13ca:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    13ce:	60 ec       	ldi	r22, 0xC0	; 192
    13d0:	84 e0       	ldi	r24, 0x04	; 4
    13d2:	96 e0       	ldi	r25, 0x06	; 6
    13d4:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    13d8:	6c eb       	ldi	r22, 0xBC	; 188
    13da:	74 e0       	ldi	r23, 0x04	; 4
    13dc:	84 e0       	ldi	r24, 0x04	; 4
    13de:	96 e0       	ldi	r25, 0x06	; 6
    13e0:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    13e4:	60 ec       	ldi	r22, 0xC0	; 192
    13e6:	84 e0       	ldi	r24, 0x04	; 4
    13e8:	96 e0       	ldi	r25, 0x06	; 6
    13ea:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    13ee:	84 e0       	ldi	r24, 0x04	; 4
    13f0:	96 e0       	ldi	r25, 0x06	; 6
    13f2:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
    13f6:	83 e0       	ldi	r24, 0x03	; 3
    13f8:	96 e0       	ldi	r25, 0x06	; 6
    13fa:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    13fe:	28 2f       	mov	r18, r24
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	20 53       	subi	r18, 0x30	; 48
    1404:	31 09       	sbc	r19, r1
    1406:	c9 01       	movw	r24, r18
    1408:	88 0f       	add	r24, r24
    140a:	99 1f       	adc	r25, r25
    140c:	22 0f       	add	r18, r18
    140e:	33 1f       	adc	r19, r19
    1410:	22 0f       	add	r18, r18
    1412:	33 1f       	adc	r19, r19
    1414:	22 0f       	add	r18, r18
    1416:	33 1f       	adc	r19, r19
    1418:	82 0f       	add	r24, r18
    141a:	93 1f       	adc	r25, r19
    141c:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <h+0x1>
    1420:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <h>
    1424:	8a 39       	cpi	r24, 0x9A	; 154
    1426:	21 e0       	ldi	r18, 0x01	; 1
    1428:	92 07       	cpc	r25, r18
    142a:	09 f4       	brne	.+2      	; 0x142e <_Z12setClockTimev+0x86>
    142c:	1c c2       	rjmp	.+1080   	; 0x1866 <_Z12setClockTimev+0x4be>
    142e:	6a e0       	ldi	r22, 0x0A	; 10
    1430:	70 e0       	ldi	r23, 0x00	; 0
    1432:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1436:	60 5d       	subi	r22, 0xD0	; 208
    1438:	84 e0       	ldi	r24, 0x04	; 4
    143a:	96 e0       	ldi	r25, 0x06	; 6
    143c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1440:	83 e0       	ldi	r24, 0x03	; 3
    1442:	96 e0       	ldi	r25, 0x06	; 6
    1444:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	c0 97       	sbiw	r24, 0x30	; 48
    144c:	20 91 f6 05 	lds	r18, 0x05F6	; 0x8005f6 <h>
    1450:	30 91 f7 05 	lds	r19, 0x05F7	; 0x8005f7 <h+0x1>
    1454:	82 0f       	add	r24, r18
    1456:	93 1f       	adc	r25, r19
    1458:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <h+0x1>
    145c:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <h>
    1460:	83 3c       	cpi	r24, 0xC3	; 195
    1462:	21 e0       	ldi	r18, 0x01	; 1
    1464:	92 07       	cpc	r25, r18
    1466:	09 f4       	brne	.+2      	; 0x146a <_Z12setClockTimev+0xc2>
    1468:	fe c1       	rjmp	.+1020   	; 0x1866 <_Z12setClockTimev+0x4be>
    146a:	6a e0       	ldi	r22, 0x0A	; 10
    146c:	70 e0       	ldi	r23, 0x00	; 0
    146e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1472:	60 e3       	ldi	r22, 0x30	; 48
    1474:	68 0f       	add	r22, r24
    1476:	84 e0       	ldi	r24, 0x04	; 4
    1478:	96 e0       	ldi	r25, 0x06	; 6
    147a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    147e:	84 e0       	ldi	r24, 0x04	; 4
    1480:	96 e0       	ldi	r25, 0x06	; 6
    1482:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
    1486:	84 e2       	ldi	r24, 0x24	; 36
    1488:	94 ef       	ldi	r25, 0xF4	; 244
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	f1 f7       	brne	.-4      	; 0x148a <_Z12setClockTimev+0xe2>
    148e:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <h>
    1492:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <h+0x1>
    1496:	48 97       	sbiw	r24, 0x18	; 24
    1498:	64 f0       	brlt	.+24     	; 0x14b2 <_Z12setClockTimev+0x10a>
    149a:	60 ec       	ldi	r22, 0xC0	; 192
    149c:	84 e0       	ldi	r24, 0x04	; 4
    149e:	96 e0       	ldi	r25, 0x06	; 6
    14a0:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    14a4:	6b e4       	ldi	r22, 0x4B	; 75
    14a6:	75 e0       	ldi	r23, 0x05	; 5
    14a8:	84 e0       	ldi	r24, 0x04	; 4
    14aa:	96 e0       	ldi	r25, 0x06	; 6
    14ac:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    14b0:	99 cf       	rjmp	.-206    	; 0x13e4 <_Z12setClockTimev+0x3c>
    14b2:	64 ec       	ldi	r22, 0xC4	; 196
    14b4:	74 e0       	ldi	r23, 0x04	; 4
    14b6:	84 e0       	ldi	r24, 0x04	; 4
    14b8:	96 e0       	ldi	r25, 0x06	; 6
    14ba:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    14be:	84 e0       	ldi	r24, 0x04	; 4
    14c0:	96 e0       	ldi	r25, 0x06	; 6
    14c2:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
    14c6:	83 e0       	ldi	r24, 0x03	; 3
    14c8:	96 e0       	ldi	r25, 0x06	; 6
    14ca:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	20 53       	subi	r18, 0x30	; 48
    14d4:	31 09       	sbc	r19, r1
    14d6:	c9 01       	movw	r24, r18
    14d8:	88 0f       	add	r24, r24
    14da:	99 1f       	adc	r25, r25
    14dc:	22 0f       	add	r18, r18
    14de:	33 1f       	adc	r19, r19
    14e0:	22 0f       	add	r18, r18
    14e2:	33 1f       	adc	r19, r19
    14e4:	22 0f       	add	r18, r18
    14e6:	33 1f       	adc	r19, r19
    14e8:	82 0f       	add	r24, r18
    14ea:	93 1f       	adc	r25, r19
    14ec:	90 93 f5 05 	sts	0x05F5, r25	; 0x8005f5 <M+0x1>
    14f0:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <M>
    14f4:	8a 39       	cpi	r24, 0x9A	; 154
    14f6:	21 e0       	ldi	r18, 0x01	; 1
    14f8:	92 07       	cpc	r25, r18
    14fa:	09 f4       	brne	.+2      	; 0x14fe <_Z12setClockTimev+0x156>
    14fc:	b4 c1       	rjmp	.+872    	; 0x1866 <_Z12setClockTimev+0x4be>
    14fe:	6a e0       	ldi	r22, 0x0A	; 10
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1506:	60 5d       	subi	r22, 0xD0	; 208
    1508:	84 e0       	ldi	r24, 0x04	; 4
    150a:	96 e0       	ldi	r25, 0x06	; 6
    150c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1510:	83 e0       	ldi	r24, 0x03	; 3
    1512:	96 e0       	ldi	r25, 0x06	; 6
    1514:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	c0 97       	sbiw	r24, 0x30	; 48
    151c:	20 91 f4 05 	lds	r18, 0x05F4	; 0x8005f4 <M>
    1520:	30 91 f5 05 	lds	r19, 0x05F5	; 0x8005f5 <M+0x1>
    1524:	82 0f       	add	r24, r18
    1526:	93 1f       	adc	r25, r19
    1528:	90 93 f5 05 	sts	0x05F5, r25	; 0x8005f5 <M+0x1>
    152c:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <M>
    1530:	83 3c       	cpi	r24, 0xC3	; 195
    1532:	21 e0       	ldi	r18, 0x01	; 1
    1534:	92 07       	cpc	r25, r18
    1536:	09 f4       	brne	.+2      	; 0x153a <_Z12setClockTimev+0x192>
    1538:	96 c1       	rjmp	.+812    	; 0x1866 <_Z12setClockTimev+0x4be>
    153a:	6a e0       	ldi	r22, 0x0A	; 10
    153c:	70 e0       	ldi	r23, 0x00	; 0
    153e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1542:	60 e3       	ldi	r22, 0x30	; 48
    1544:	68 0f       	add	r22, r24
    1546:	84 e0       	ldi	r24, 0x04	; 4
    1548:	96 e0       	ldi	r25, 0x06	; 6
    154a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    154e:	84 e2       	ldi	r24, 0x24	; 36
    1550:	94 ef       	ldi	r25, 0xF4	; 244
    1552:	01 97       	sbiw	r24, 0x01	; 1
    1554:	f1 f7       	brne	.-4      	; 0x1552 <_Z12setClockTimev+0x1aa>
    1556:	84 e0       	ldi	r24, 0x04	; 4
    1558:	96 e0       	ldi	r25, 0x06	; 6
    155a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
    155e:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <M>
    1562:	90 91 f5 05 	lds	r25, 0x05F5	; 0x8005f5 <M+0x1>
    1566:	cc 97       	sbiw	r24, 0x3c	; 60
    1568:	a4 f0       	brlt	.+40     	; 0x1592 <_Z12setClockTimev+0x1ea>
    156a:	60 ec       	ldi	r22, 0xC0	; 192
    156c:	84 e0       	ldi	r24, 0x04	; 4
    156e:	96 e0       	ldi	r25, 0x06	; 6
    1570:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    1574:	85 e0       	ldi	r24, 0x05	; 5
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	0e 94 a8 09 	call	0x1350	; 0x1350 <_Z15moveCursorRighti>
    157c:	61 ec       	ldi	r22, 0xC1	; 193
    157e:	74 e0       	ldi	r23, 0x04	; 4
    1580:	84 e0       	ldi	r24, 0x04	; 4
    1582:	96 e0       	ldi	r25, 0x06	; 6
    1584:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1588:	82 e0       	ldi	r24, 0x02	; 2
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	0e 94 be 09 	call	0x137c	; 0x137c <_Z14moveCursorLefti>
    1590:	96 cf       	rjmp	.-212    	; 0x14be <_Z12setClockTimev+0x116>
    1592:	88 e8       	ldi	r24, 0x88	; 136
    1594:	93 e1       	ldi	r25, 0x13	; 19
    1596:	00 97       	sbiw	r24, 0x00	; 0
    1598:	31 f0       	breq	.+12     	; 0x15a6 <_Z12setClockTimev+0x1fe>
    159a:	e9 e1       	ldi	r30, 0x19	; 25
    159c:	f0 e0       	ldi	r31, 0x00	; 0
    159e:	31 97       	sbiw	r30, 0x01	; 1
    15a0:	f1 f7       	brne	.-4      	; 0x159e <_Z12setClockTimev+0x1f6>
    15a2:	01 97       	sbiw	r24, 0x01	; 1
    15a4:	f8 cf       	rjmp	.-16     	; 0x1596 <_Z12setClockTimev+0x1ee>
    15a6:	84 e0       	ldi	r24, 0x04	; 4
    15a8:	96 e0       	ldi	r25, 0x06	; 6
    15aa:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    15ae:	6e e4       	ldi	r22, 0x4E	; 78
    15b0:	75 e0       	ldi	r23, 0x05	; 5
    15b2:	84 e0       	ldi	r24, 0x04	; 4
    15b4:	96 e0       	ldi	r25, 0x06	; 6
    15b6:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    15ba:	60 ec       	ldi	r22, 0xC0	; 192
    15bc:	84 e0       	ldi	r24, 0x04	; 4
    15be:	96 e0       	ldi	r25, 0x06	; 6
    15c0:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    15c4:	6c e5       	ldi	r22, 0x5C	; 92
    15c6:	75 e0       	ldi	r23, 0x05	; 5
    15c8:	84 e0       	ldi	r24, 0x04	; 4
    15ca:	96 e0       	ldi	r25, 0x06	; 6
    15cc:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    15d0:	60 ec       	ldi	r22, 0xC0	; 192
    15d2:	84 e0       	ldi	r24, 0x04	; 4
    15d4:	96 e0       	ldi	r25, 0x06	; 6
    15d6:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    15da:	84 e0       	ldi	r24, 0x04	; 4
    15dc:	96 e0       	ldi	r25, 0x06	; 6
    15de:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
    15e2:	83 e0       	ldi	r24, 0x03	; 3
    15e4:	96 e0       	ldi	r25, 0x06	; 6
    15e6:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	c0 97       	sbiw	r24, 0x30	; 48
    15ee:	ec 01       	movw	r28, r24
    15f0:	cc 0f       	add	r28, r28
    15f2:	dd 1f       	adc	r29, r29
    15f4:	88 0f       	add	r24, r24
    15f6:	99 1f       	adc	r25, r25
    15f8:	88 0f       	add	r24, r24
    15fa:	99 1f       	adc	r25, r25
    15fc:	88 0f       	add	r24, r24
    15fe:	99 1f       	adc	r25, r25
    1600:	c8 0f       	add	r28, r24
    1602:	d9 1f       	adc	r29, r25
    1604:	ca 39       	cpi	r28, 0x9A	; 154
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	d8 07       	cpc	r29, r24
    160a:	09 f4       	brne	.+2      	; 0x160e <_Z12setClockTimev+0x266>
    160c:	2c c1       	rjmp	.+600    	; 0x1866 <_Z12setClockTimev+0x4be>
    160e:	ce 01       	movw	r24, r28
    1610:	6a e0       	ldi	r22, 0x0A	; 10
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    1618:	60 5d       	subi	r22, 0xD0	; 208
    161a:	84 e0       	ldi	r24, 0x04	; 4
    161c:	96 e0       	ldi	r25, 0x06	; 6
    161e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1622:	83 e0       	ldi	r24, 0x03	; 3
    1624:	96 e0       	ldi	r25, 0x06	; 6
    1626:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	c0 97       	sbiw	r24, 0x30	; 48
    162e:	c8 0f       	add	r28, r24
    1630:	d9 1f       	adc	r29, r25
    1632:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <h>
    1636:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <h+0x1>
    163a:	83 3c       	cpi	r24, 0xC3	; 195
    163c:	91 40       	sbci	r25, 0x01	; 1
    163e:	09 f4       	brne	.+2      	; 0x1642 <_Z12setClockTimev+0x29a>
    1640:	12 c1       	rjmp	.+548    	; 0x1866 <_Z12setClockTimev+0x4be>
    1642:	ce 01       	movw	r24, r28
    1644:	6a e0       	ldi	r22, 0x0A	; 10
    1646:	70 e0       	ldi	r23, 0x00	; 0
    1648:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    164c:	60 e3       	ldi	r22, 0x30	; 48
    164e:	68 0f       	add	r22, r24
    1650:	84 e0       	ldi	r24, 0x04	; 4
    1652:	96 e0       	ldi	r25, 0x06	; 6
    1654:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1658:	84 e0       	ldi	r24, 0x04	; 4
    165a:	96 e0       	ldi	r25, 0x06	; 6
    165c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
    1660:	84 e2       	ldi	r24, 0x24	; 36
    1662:	94 ef       	ldi	r25, 0xF4	; 244
    1664:	01 97       	sbiw	r24, 0x01	; 1
    1666:	f1 f7       	brne	.-4      	; 0x1664 <_Z12setClockTimev+0x2bc>
    1668:	64 ec       	ldi	r22, 0xC4	; 196
    166a:	74 e0       	ldi	r23, 0x04	; 4
    166c:	84 e0       	ldi	r24, 0x04	; 4
    166e:	96 e0       	ldi	r25, 0x06	; 6
    1670:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1674:	84 e0       	ldi	r24, 0x04	; 4
    1676:	96 e0       	ldi	r25, 0x06	; 6
    1678:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
    167c:	83 e0       	ldi	r24, 0x03	; 3
    167e:	96 e0       	ldi	r25, 0x06	; 6
    1680:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    1684:	28 2f       	mov	r18, r24
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	20 53       	subi	r18, 0x30	; 48
    168a:	31 09       	sbc	r19, r1
    168c:	c9 01       	movw	r24, r18
    168e:	88 0f       	add	r24, r24
    1690:	99 1f       	adc	r25, r25
    1692:	22 0f       	add	r18, r18
    1694:	33 1f       	adc	r19, r19
    1696:	22 0f       	add	r18, r18
    1698:	33 1f       	adc	r19, r19
    169a:	22 0f       	add	r18, r18
    169c:	33 1f       	adc	r19, r19
    169e:	82 0f       	add	r24, r18
    16a0:	93 1f       	adc	r25, r19
    16a2:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <m+0x1>
    16a6:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <m>
    16aa:	8a 39       	cpi	r24, 0x9A	; 154
    16ac:	21 e0       	ldi	r18, 0x01	; 1
    16ae:	92 07       	cpc	r25, r18
    16b0:	09 f4       	brne	.+2      	; 0x16b4 <_Z12setClockTimev+0x30c>
    16b2:	d9 c0       	rjmp	.+434    	; 0x1866 <_Z12setClockTimev+0x4be>
    16b4:	6a e0       	ldi	r22, 0x0A	; 10
    16b6:	70 e0       	ldi	r23, 0x00	; 0
    16b8:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    16bc:	60 5d       	subi	r22, 0xD0	; 208
    16be:	84 e0       	ldi	r24, 0x04	; 4
    16c0:	96 e0       	ldi	r25, 0x06	; 6
    16c2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    16c6:	83 e0       	ldi	r24, 0x03	; 3
    16c8:	96 e0       	ldi	r25, 0x06	; 6
    16ca:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	c0 97       	sbiw	r24, 0x30	; 48
    16d2:	20 91 fa 05 	lds	r18, 0x05FA	; 0x8005fa <m>
    16d6:	30 91 fb 05 	lds	r19, 0x05FB	; 0x8005fb <m+0x1>
    16da:	82 0f       	add	r24, r18
    16dc:	93 1f       	adc	r25, r19
    16de:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <m+0x1>
    16e2:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <m>
    16e6:	83 3c       	cpi	r24, 0xC3	; 195
    16e8:	21 e0       	ldi	r18, 0x01	; 1
    16ea:	92 07       	cpc	r25, r18
    16ec:	09 f4       	brne	.+2      	; 0x16f0 <_Z12setClockTimev+0x348>
    16ee:	bb c0       	rjmp	.+374    	; 0x1866 <_Z12setClockTimev+0x4be>
    16f0:	6a e0       	ldi	r22, 0x0A	; 10
    16f2:	70 e0       	ldi	r23, 0x00	; 0
    16f4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    16f8:	60 e3       	ldi	r22, 0x30	; 48
    16fa:	68 0f       	add	r22, r24
    16fc:	84 e0       	ldi	r24, 0x04	; 4
    16fe:	96 e0       	ldi	r25, 0x06	; 6
    1700:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    1704:	84 e2       	ldi	r24, 0x24	; 36
    1706:	94 ef       	ldi	r25, 0xF4	; 244
    1708:	01 97       	sbiw	r24, 0x01	; 1
    170a:	f1 f7       	brne	.-4      	; 0x1708 <_Z12setClockTimev+0x360>
    170c:	84 e0       	ldi	r24, 0x04	; 4
    170e:	96 e0       	ldi	r25, 0x06	; 6
    1710:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
    1714:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <m>
    1718:	90 91 fb 05 	lds	r25, 0x05FB	; 0x8005fb <m+0x1>
    171c:	0d 97       	sbiw	r24, 0x0d	; 13
    171e:	a4 f0       	brlt	.+40     	; 0x1748 <_Z12setClockTimev+0x3a0>
    1720:	60 ec       	ldi	r22, 0xC0	; 192
    1722:	84 e0       	ldi	r24, 0x04	; 4
    1724:	96 e0       	ldi	r25, 0x06	; 6
    1726:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    172a:	85 e0       	ldi	r24, 0x05	; 5
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 a8 09 	call	0x1350	; 0x1350 <_Z15moveCursorRighti>
    1732:	69 e6       	ldi	r22, 0x69	; 105
    1734:	75 e0       	ldi	r23, 0x05	; 5
    1736:	84 e0       	ldi	r24, 0x04	; 4
    1738:	96 e0       	ldi	r25, 0x06	; 6
    173a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    173e:	82 e0       	ldi	r24, 0x02	; 2
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	0e 94 be 09 	call	0x137c	; 0x137c <_Z14moveCursorLefti>
    1746:	96 cf       	rjmp	.-212    	; 0x1674 <_Z12setClockTimev+0x2cc>
    1748:	64 ec       	ldi	r22, 0xC4	; 196
    174a:	74 e0       	ldi	r23, 0x04	; 4
    174c:	84 e0       	ldi	r24, 0x04	; 4
    174e:	96 e0       	ldi	r25, 0x06	; 6
    1750:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    1754:	84 e0       	ldi	r24, 0x04	; 4
    1756:	96 e0       	ldi	r25, 0x06	; 6
    1758:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN6Screen5blinkEv>
    175c:	83 e0       	ldi	r24, 0x03	; 3
    175e:	96 e0       	ldi	r25, 0x06	; 6
    1760:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    1764:	28 2f       	mov	r18, r24
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	20 53       	subi	r18, 0x30	; 48
    176a:	31 09       	sbc	r19, r1
    176c:	c9 01       	movw	r24, r18
    176e:	88 0f       	add	r24, r24
    1770:	99 1f       	adc	r25, r25
    1772:	22 0f       	add	r18, r18
    1774:	33 1f       	adc	r19, r19
    1776:	22 0f       	add	r18, r18
    1778:	33 1f       	adc	r19, r19
    177a:	22 0f       	add	r18, r18
    177c:	33 1f       	adc	r19, r19
    177e:	82 0f       	add	r24, r18
    1780:	93 1f       	adc	r25, r19
    1782:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <d+0x1>
    1786:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <d>
    178a:	8a 39       	cpi	r24, 0x9A	; 154
    178c:	21 e0       	ldi	r18, 0x01	; 1
    178e:	92 07       	cpc	r25, r18
    1790:	09 f4       	brne	.+2      	; 0x1794 <_Z12setClockTimev+0x3ec>
    1792:	69 c0       	rjmp	.+210    	; 0x1866 <_Z12setClockTimev+0x4be>
    1794:	6a e0       	ldi	r22, 0x0A	; 10
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    179c:	60 5d       	subi	r22, 0xD0	; 208
    179e:	84 e0       	ldi	r24, 0x04	; 4
    17a0:	96 e0       	ldi	r25, 0x06	; 6
    17a2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    17a6:	83 e0       	ldi	r24, 0x03	; 3
    17a8:	96 e0       	ldi	r25, 0x06	; 6
    17aa:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN7Key_Pad10pressedKeyEv>
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	9c 01       	movw	r18, r24
    17b2:	20 53       	subi	r18, 0x30	; 48
    17b4:	31 09       	sbc	r19, r1
    17b6:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <d>
    17ba:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <d+0x1>
    17be:	82 0f       	add	r24, r18
    17c0:	93 1f       	adc	r25, r19
    17c2:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <d+0x1>
    17c6:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <d>
    17ca:	83 3c       	cpi	r24, 0xC3	; 195
    17cc:	21 e0       	ldi	r18, 0x01	; 1
    17ce:	92 07       	cpc	r25, r18
    17d0:	09 f4       	brne	.+2      	; 0x17d4 <_Z12setClockTimev+0x42c>
    17d2:	49 c0       	rjmp	.+146    	; 0x1866 <_Z12setClockTimev+0x4be>
    17d4:	6a e0       	ldi	r22, 0x0A	; 10
    17d6:	70 e0       	ldi	r23, 0x00	; 0
    17d8:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    17dc:	60 e3       	ldi	r22, 0x30	; 48
    17de:	68 0f       	add	r22, r24
    17e0:	84 e0       	ldi	r24, 0x04	; 4
    17e2:	96 e0       	ldi	r25, 0x06	; 6
    17e4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    17e8:	84 e2       	ldi	r24, 0x24	; 36
    17ea:	94 ef       	ldi	r25, 0xF4	; 244
    17ec:	01 97       	sbiw	r24, 0x01	; 1
    17ee:	f1 f7       	brne	.-4      	; 0x17ec <_Z12setClockTimev+0x444>
    17f0:	84 e0       	ldi	r24, 0x04	; 4
    17f2:	96 e0       	ldi	r25, 0x06	; 6
    17f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN6Screen9stopBlinkEv>
    17f8:	a0 90 fa 05 	lds	r10, 0x05FA	; 0x8005fa <m>
    17fc:	b0 90 fb 05 	lds	r11, 0x05FB	; 0x8005fb <m+0x1>
    1800:	f5 01       	movw	r30, r10
    1802:	31 97       	sbiw	r30, 0x01	; 1
    1804:	ee 0f       	add	r30, r30
    1806:	ff 1f       	adc	r31, r31
    1808:	e4 55       	subi	r30, 0x54	; 84
    180a:	fe 4f       	sbci	r31, 0xFE	; 254
    180c:	80 81       	ld	r24, Z
    180e:	91 81       	ldd	r25, Z+1	; 0x01
    1810:	80 90 f8 05 	lds	r8, 0x05F8	; 0x8005f8 <d>
    1814:	90 90 f9 05 	lds	r9, 0x05F9	; 0x8005f9 <d+0x1>
    1818:	88 16       	cp	r8, r24
    181a:	99 06       	cpc	r9, r25
    181c:	a4 f0       	brlt	.+40     	; 0x1846 <_Z12setClockTimev+0x49e>
    181e:	60 ec       	ldi	r22, 0xC0	; 192
    1820:	84 e0       	ldi	r24, 0x04	; 4
    1822:	96 e0       	ldi	r25, 0x06	; 6
    1824:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
    1828:	8a e0       	ldi	r24, 0x0A	; 10
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	0e 94 a8 09 	call	0x1350	; 0x1350 <_Z15moveCursorRighti>
    1830:	66 e6       	ldi	r22, 0x66	; 102
    1832:	75 e0       	ldi	r23, 0x05	; 5
    1834:	84 e0       	ldi	r24, 0x04	; 4
    1836:	96 e0       	ldi	r25, 0x06	; 6
    1838:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
    183c:	82 e0       	ldi	r24, 0x02	; 2
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	0e 94 be 09 	call	0x137c	; 0x137c <_Z14moveCursorLefti>
    1844:	87 cf       	rjmp	.-242    	; 0x1754 <_Z12setClockTimev+0x3ac>
    1846:	a4 01       	movw	r20, r8
    1848:	b5 01       	movw	r22, r10
    184a:	ce 01       	movw	r24, r28
    184c:	0e 94 bd 04 	call	0x97a	; 0x97a <_Z6getDayiii>
    1850:	e0 90 f4 05 	lds	r14, 0x05F4	; 0x8005f4 <M>
    1854:	00 91 f6 05 	lds	r16, 0x05F6	; 0x8005f6 <h>
    1858:	c1 2c       	mov	r12, r1
    185a:	28 2f       	mov	r18, r24
    185c:	48 2d       	mov	r20, r8
    185e:	6a 2d       	mov	r22, r10
    1860:	8c 2f       	mov	r24, r28
    1862:	0e 94 85 00 	call	0x10a	; 0x10a <_Z14ds1307_setdatehhhhhhh>
    1866:	df 91       	pop	r29
    1868:	cf 91       	pop	r28
    186a:	0f 91       	pop	r16
    186c:	ef 90       	pop	r14
    186e:	cf 90       	pop	r12
    1870:	bf 90       	pop	r11
    1872:	af 90       	pop	r10
    1874:	9f 90       	pop	r9
    1876:	8f 90       	pop	r8
    1878:	08 95       	ret

0000187a <_Z10typewriterPc>:

void typewriter(char *str){
    187a:	0f 93       	push	r16
    187c:	1f 93       	push	r17
    187e:	cf 93       	push	r28
    1880:	df 93       	push	r29
    1882:	8c 01       	movw	r16, r24
	int l;
	for(l=0;str[l]!=0;l++)
    1884:	c0 e0       	ldi	r28, 0x00	; 0
    1886:	d0 e0       	ldi	r29, 0x00	; 0
    1888:	f8 01       	movw	r30, r16
    188a:	ec 0f       	add	r30, r28
    188c:	fd 1f       	adc	r31, r29
    188e:	60 81       	ld	r22, Z
    1890:	66 23       	and	r22, r22
    1892:	51 f0       	breq	.+20     	; 0x18a8 <_Z10typewriterPc+0x2e>
	{
		sc.LCD_Char(str[l]);
    1894:	84 e0       	ldi	r24, 0x04	; 4
    1896:	96 e0       	ldi	r25, 0x06	; 6
    1898:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN6Screen8LCD_CharEh>
    189c:	88 ea       	ldi	r24, 0xA8	; 168
    189e:	91 e6       	ldi	r25, 0x61	; 97
    18a0:	01 97       	sbiw	r24, 0x01	; 1
    18a2:	f1 f7       	brne	.-4      	; 0x18a0 <_Z10typewriterPc+0x26>
}
}

void typewriter(char *str){
	int l;
	for(l=0;str[l]!=0;l++)
    18a4:	21 96       	adiw	r28, 0x01	; 1
    18a6:	f0 cf       	rjmp	.-32     	; 0x1888 <_Z10typewriterPc+0xe>
	{
		sc.LCD_Char(str[l]);
		_delay_ms(100);
	}
    18a8:	df 91       	pop	r29
    18aa:	cf 91       	pop	r28
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	08 95       	ret

000018b2 <_Z7aboutUsv>:
}



void aboutUs(){
	sc.LCD_clear();
    18b2:	84 e0       	ldi	r24, 0x04	; 4
    18b4:	96 e0       	ldi	r25, 0x06	; 6
    18b6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	typewriter("TEAM OROLOGIO");
    18ba:	80 eb       	ldi	r24, 0xB0	; 176
    18bc:	95 e0       	ldi	r25, 0x05	; 5
    18be:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	sc.LCD_Command(0XC0);
    18c2:	60 ec       	ldi	r22, 0xC0	; 192
    18c4:	84 e0       	ldi	r24, 0x04	; 4
    18c6:	96 e0       	ldi	r25, 0x06	; 6
    18c8:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN6Screen11LCD_CommandEh>
	typewriter("Version 1.0");
    18cc:	8e eb       	ldi	r24, 0xBE	; 190
    18ce:	95 e0       	ldi	r25, 0x05	; 5
    18d0:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18d4:	80 e1       	ldi	r24, 0x10	; 16
    18d6:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    18d8:	00 97       	sbiw	r24, 0x00	; 0
    18da:	31 f0       	breq	.+12     	; 0x18e8 <_Z7aboutUsv+0x36>
    18dc:	e9 e1       	ldi	r30, 0x19	; 25
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	31 97       	sbiw	r30, 0x01	; 1
    18e2:	f1 f7       	brne	.-4      	; 0x18e0 <_Z7aboutUsv+0x2e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18e4:	01 97       	sbiw	r24, 0x01	; 1
    18e6:	f8 cf       	rjmp	.-16     	; 0x18d8 <_Z7aboutUsv+0x26>
	_delay_ms(1000);
	sc.LCD_clear();
    18e8:	84 e0       	ldi	r24, 0x04	; 4
    18ea:	96 e0       	ldi	r25, 0x06	; 6
    18ec:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	typewriter("Chathushka");
    18f0:	8a ec       	ldi	r24, 0xCA	; 202
    18f2:	95 e0       	ldi	r25, 0x05	; 5
    18f4:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18f8:	80 e1       	ldi	r24, 0x10	; 16
    18fa:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    18fc:	00 97       	sbiw	r24, 0x00	; 0
    18fe:	31 f0       	breq	.+12     	; 0x190c <_Z7aboutUsv+0x5a>
    1900:	e9 e1       	ldi	r30, 0x19	; 25
    1902:	f0 e0       	ldi	r31, 0x00	; 0
    1904:	31 97       	sbiw	r30, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <_Z7aboutUsv+0x52>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	f8 cf       	rjmp	.-16     	; 0x18fc <_Z7aboutUsv+0x4a>
	_delay_ms(1000);
	sc.LCD_clear();
    190c:	84 e0       	ldi	r24, 0x04	; 4
    190e:	96 e0       	ldi	r25, 0x06	; 6
    1910:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	typewriter("Methma");
    1914:	85 ed       	ldi	r24, 0xD5	; 213
    1916:	95 e0       	ldi	r25, 0x05	; 5
    1918:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    191c:	80 e1       	ldi	r24, 0x10	; 16
    191e:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    1920:	00 97       	sbiw	r24, 0x00	; 0
    1922:	31 f0       	breq	.+12     	; 0x1930 <_Z7aboutUsv+0x7e>
    1924:	e9 e1       	ldi	r30, 0x19	; 25
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	31 97       	sbiw	r30, 0x01	; 1
    192a:	f1 f7       	brne	.-4      	; 0x1928 <_Z7aboutUsv+0x76>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    192c:	01 97       	sbiw	r24, 0x01	; 1
    192e:	f8 cf       	rjmp	.-16     	; 0x1920 <_Z7aboutUsv+0x6e>
	_delay_ms(1000);
	sc.LCD_clear();
    1930:	84 e0       	ldi	r24, 0x04	; 4
    1932:	96 e0       	ldi	r25, 0x06	; 6
    1934:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	typewriter("Chamith");
    1938:	8c ed       	ldi	r24, 0xDC	; 220
    193a:	95 e0       	ldi	r25, 0x05	; 5
    193c:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1940:	80 e1       	ldi	r24, 0x10	; 16
    1942:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	31 f0       	breq	.+12     	; 0x1954 <_Z7aboutUsv+0xa2>
    1948:	e9 e1       	ldi	r30, 0x19	; 25
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	31 97       	sbiw	r30, 0x01	; 1
    194e:	f1 f7       	brne	.-4      	; 0x194c <_Z7aboutUsv+0x9a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1950:	01 97       	sbiw	r24, 0x01	; 1
    1952:	f8 cf       	rjmp	.-16     	; 0x1944 <_Z7aboutUsv+0x92>
	_delay_ms(1000);
	sc.LCD_clear();
    1954:	84 e0       	ldi	r24, 0x04	; 4
    1956:	96 e0       	ldi	r25, 0x06	; 6
    1958:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	typewriter("Vinuja");
    195c:	84 ee       	ldi	r24, 0xE4	; 228
    195e:	95 e0       	ldi	r25, 0x05	; 5
    1960:	0e 94 3d 0c 	call	0x187a	; 0x187a <_Z10typewriterPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1964:	80 e1       	ldi	r24, 0x10	; 16
    1966:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    1968:	00 97       	sbiw	r24, 0x00	; 0
    196a:	31 f0       	breq	.+12     	; 0x1978 <_Z7aboutUsv+0xc6>
    196c:	e9 e1       	ldi	r30, 0x19	; 25
    196e:	f0 e0       	ldi	r31, 0x00	; 0
    1970:	31 97       	sbiw	r30, 0x01	; 1
    1972:	f1 f7       	brne	.-4      	; 0x1970 <_Z7aboutUsv+0xbe>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	f8 cf       	rjmp	.-16     	; 0x1968 <_Z7aboutUsv+0xb6>
	_delay_ms(1000);
	sc.LCD_clear();
    1978:	84 e0       	ldi	r24, 0x04	; 4
    197a:	96 e0       	ldi	r25, 0x06	; 6
    197c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
    1980:	08 95       	ret

00001982 <_Z8mainMenuv>:
}


void mainMenu()
{
	sc.LCD_clear();
    1982:	84 e0       	ldi	r24, 0x04	; 4
    1984:	96 e0       	ldi	r25, 0x06	; 6
    1986:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
	sc.LCD_String(menu[menu_i]);
    198a:	60 91 f2 05 	lds	r22, 0x05F2	; 0x8005f2 <menu_i>
    198e:	70 91 f3 05 	lds	r23, 0x05F3	; 0x8005f3 <menu_i+0x1>
    1992:	62 95       	swap	r22
    1994:	72 95       	swap	r23
    1996:	70 7f       	andi	r23, 0xF0	; 240
    1998:	76 27       	eor	r23, r22
    199a:	60 7f       	andi	r22, 0xF0	; 240
    199c:	76 27       	eor	r23, r22
    199e:	64 5a       	subi	r22, 0xA4	; 164
    19a0:	7e 4f       	sbci	r23, 0xFE	; 254
    19a2:	84 e0       	ldi	r24, 0x04	; 4
    19a4:	96 e0       	ldi	r25, 0x06	; 6
    19a6:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
	
	while(1){
		
		char btn = sc.Control_buttons();
    19aa:	84 e0       	ldi	r24, 0x04	; 4
    19ac:	96 e0       	ldi	r25, 0x06	; 6
    19ae:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN6Screen15Control_buttonsEv>
		if (btn=='d'){
    19b2:	84 36       	cpi	r24, 0x64	; 100
    19b4:	91 f4       	brne	.+36     	; 0x19da <_Z8mainMenuv+0x58>
			switch(menu_i)
    19b6:	80 91 f2 05 	lds	r24, 0x05F2	; 0x8005f2 <menu_i>
    19ba:	90 91 f3 05 	lds	r25, 0x05F3	; 0x8005f3 <menu_i+0x1>
    19be:	84 30       	cpi	r24, 0x04	; 4
    19c0:	91 05       	cpc	r25, r1
    19c2:	29 f4       	brne	.+10     	; 0x19ce <_Z8mainMenuv+0x4c>
			{
				case 4: menu_i = 0; break;
    19c4:	10 92 f3 05 	sts	0x05F3, r1	; 0x8005f3 <menu_i+0x1>
    19c8:	10 92 f2 05 	sts	0x05F2, r1	; 0x8005f2 <menu_i>
    19cc:	43 c0       	rjmp	.+134    	; 0x1a54 <_Z8mainMenuv+0xd2>
				default: menu_i ++; break;
    19ce:	01 96       	adiw	r24, 0x01	; 1
    19d0:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <menu_i+0x1>
    19d4:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <menu_i>
    19d8:	3d c0       	rjmp	.+122    	; 0x1a54 <_Z8mainMenuv+0xd2>
			}
		}
		else if (btn=='u'){
    19da:	85 37       	cpi	r24, 0x75	; 117
    19dc:	99 f4       	brne	.+38     	; 0x1a04 <_Z8mainMenuv+0x82>
			switch (menu_i)
    19de:	80 91 f2 05 	lds	r24, 0x05F2	; 0x8005f2 <menu_i>
    19e2:	90 91 f3 05 	lds	r25, 0x05F3	; 0x8005f3 <menu_i+0x1>
    19e6:	00 97       	sbiw	r24, 0x00	; 0
    19e8:	39 f4       	brne	.+14     	; 0x19f8 <_Z8mainMenuv+0x76>
			{
				case 0: menu_i = 4; break;
    19ea:	84 e0       	ldi	r24, 0x04	; 4
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <menu_i+0x1>
    19f2:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <menu_i>
    19f6:	2e c0       	rjmp	.+92     	; 0x1a54 <_Z8mainMenuv+0xd2>
				default: menu_i --; break;
    19f8:	01 97       	sbiw	r24, 0x01	; 1
    19fa:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <menu_i+0x1>
    19fe:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <menu_i>
    1a02:	28 c0       	rjmp	.+80     	; 0x1a54 <_Z8mainMenuv+0xd2>
			}
		}
		
		else if (btn=='b'){
    1a04:	82 36       	cpi	r24, 0x62	; 98
    1a06:	19 f4       	brne	.+6      	; 0x1a0e <_Z8mainMenuv+0x8c>
			mainLoop();
    1a08:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <_Z8mainLoopv>
		_delay_ms(500);
		
		
		
	}
}
    1a0c:	08 95       	ret
		
		else if (btn=='b'){
			mainLoop();
		break;}
		
		else if (btn=='s'){
    1a0e:	83 37       	cpi	r24, 0x73	; 115
    1a10:	09 f5       	brne	.+66     	; 0x1a54 <_Z8mainMenuv+0xd2>
			switch (menu_i)
    1a12:	80 91 f2 05 	lds	r24, 0x05F2	; 0x8005f2 <menu_i>
    1a16:	90 91 f3 05 	lds	r25, 0x05F3	; 0x8005f3 <menu_i+0x1>
    1a1a:	82 30       	cpi	r24, 0x02	; 2
    1a1c:	91 05       	cpc	r25, r1
    1a1e:	91 f0       	breq	.+36     	; 0x1a44 <_Z8mainMenuv+0xc2>
    1a20:	2c f4       	brge	.+10     	; 0x1a2c <_Z8mainMenuv+0xaa>
    1a22:	00 97       	sbiw	r24, 0x00	; 0
    1a24:	49 f0       	breq	.+18     	; 0x1a38 <_Z8mainMenuv+0xb6>
    1a26:	01 97       	sbiw	r24, 0x01	; 1
    1a28:	51 f0       	breq	.+20     	; 0x1a3e <_Z8mainMenuv+0xbc>
    1a2a:	14 c0       	rjmp	.+40     	; 0x1a54 <_Z8mainMenuv+0xd2>
    1a2c:	83 30       	cpi	r24, 0x03	; 3
    1a2e:	91 05       	cpc	r25, r1
    1a30:	61 f0       	breq	.+24     	; 0x1a4a <_Z8mainMenuv+0xc8>
    1a32:	04 97       	sbiw	r24, 0x04	; 4
    1a34:	69 f0       	breq	.+26     	; 0x1a50 <_Z8mainMenuv+0xce>
    1a36:	0e c0       	rjmp	.+28     	; 0x1a54 <_Z8mainMenuv+0xd2>
			{case 0:
				set_alarm();
    1a38:	0e 94 0d 05 	call	0xa1a	; 0xa1a <_Z9set_alarmv>
				break;
    1a3c:	0b c0       	rjmp	.+22     	; 0x1a54 <_Z8mainMenuv+0xd2>
				
				case 1:
				setClockTime();
    1a3e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12setClockTimev>
				break;
    1a42:	08 c0       	rjmp	.+16     	; 0x1a54 <_Z8mainMenuv+0xd2>
				
				case 2:
				deleteAlarm();
    1a44:	0e 94 86 06 	call	0xd0c	; 0xd0c <_Z11deleteAlarmv>
				break;
    1a48:	05 c0       	rjmp	.+10     	; 0x1a54 <_Z8mainMenuv+0xd2>
				
				case 3:
				factoryReset();
    1a4a:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <_Z12factoryResetv>
				break;
    1a4e:	02 c0       	rjmp	.+4      	; 0x1a54 <_Z8mainMenuv+0xd2>
				
				case 4:
				aboutUs();
    1a50:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <_Z7aboutUsv>
				
			}
		}
		

		sc.LCD_clear();
    1a54:	84 e0       	ldi	r24, 0x04	; 4
    1a56:	96 e0       	ldi	r25, 0x06	; 6
    1a58:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
		sc.LCD_String(menu[menu_i]);
    1a5c:	60 91 f2 05 	lds	r22, 0x05F2	; 0x8005f2 <menu_i>
    1a60:	70 91 f3 05 	lds	r23, 0x05F3	; 0x8005f3 <menu_i+0x1>
    1a64:	62 95       	swap	r22
    1a66:	72 95       	swap	r23
    1a68:	70 7f       	andi	r23, 0xF0	; 240
    1a6a:	76 27       	eor	r23, r22
    1a6c:	60 7f       	andi	r22, 0xF0	; 240
    1a6e:	76 27       	eor	r23, r22
    1a70:	64 5a       	subi	r22, 0xA4	; 164
    1a72:	7e 4f       	sbci	r23, 0xFE	; 254
    1a74:	84 e0       	ldi	r24, 0x04	; 4
    1a76:	96 e0       	ldi	r25, 0x06	; 6
    1a78:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN6Screen10LCD_StringEPc>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a7c:	88 e8       	ldi	r24, 0x88	; 136
    1a7e:	93 e1       	ldi	r25, 0x13	; 19
		while(__ticks)
    1a80:	00 97       	sbiw	r24, 0x00	; 0
    1a82:	09 f4       	brne	.+2      	; 0x1a86 <_Z8mainMenuv+0x104>
    1a84:	92 cf       	rjmp	.-220    	; 0x19aa <_Z8mainMenuv+0x28>
    1a86:	e9 e1       	ldi	r30, 0x19	; 25
    1a88:	f0 e0       	ldi	r31, 0x00	; 0
    1a8a:	31 97       	sbiw	r30, 0x01	; 1
    1a8c:	f1 f7       	brne	.-4      	; 0x1a8a <_Z8mainMenuv+0x108>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
    1a90:	f7 cf       	rjmp	.-18     	; 0x1a80 <_Z8mainMenuv+0xfe>

00001a92 <_Z8mainLoopv>:
		
	}
}

void mainLoop(){
	showTime();
    1a92:	0e 94 a1 03 	call	0x742	; 0x742 <_Z8showTimev>
	checkAlarm();
    1a96:	0e 94 bd 08 	call	0x117a	; 0x117a <_Z10checkAlarmv>
	if (sc.pressedSelect()){
    1a9a:	84 e0       	ldi	r24, 0x04	; 4
    1a9c:	96 e0       	ldi	r25, 0x06	; 6
    1a9e:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN6Screen13pressedSelectEv>
    1aa2:	88 23       	and	r24, r24
    1aa4:	31 f0       	breq	.+12     	; 0x1ab2 <_Z8mainLoopv+0x20>
		sc.LCD_clear();
    1aa6:	84 e0       	ldi	r24, 0x04	; 4
    1aa8:	96 e0       	ldi	r25, 0x06	; 6
    1aaa:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_ZN6Screen9LCD_clearEv>
		mainMenu();
    1aae:	0e 94 c1 0c 	call	0x1982	; 0x1982 <_Z8mainMenuv>
    1ab2:	08 95       	ret

00001ab4 <_GLOBAL__sub_I_tone>:
	for(l=0;str[l]!=0;l++)
	{
		sc.LCD_Char(str[l]);
		_delay_ms(100);
	}
    1ab4:	6f ef       	ldi	r22, 0xFF	; 255
    1ab6:	7f ef       	ldi	r23, 0xFF	; 255
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	0e 94 95 03 	call	0x72a	; 0x72a <_Z41__static_initialization_and_destruction_0ii>
    1ac0:	08 95       	ret

00001ac2 <_ZN4ToneC1Ei>:

Screen sc3;

Tone::Tone(int pin_1)
{
	SPEAKER_PIN=pin_1;
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	71 83       	std	Z+1, r23	; 0x01
    1ac6:	60 83       	st	Z, r22
    1ac8:	08 95       	ret

00001aca <_ZN4Tone8playNoteEff>:
}

//Function to play a single note

void Tone:: playNote(float frequency, float duration)
{
    1aca:	2f 92       	push	r2
    1acc:	3f 92       	push	r3
    1ace:	4f 92       	push	r4
    1ad0:	5f 92       	push	r5
    1ad2:	6f 92       	push	r6
    1ad4:	7f 92       	push	r7
    1ad6:	8f 92       	push	r8
    1ad8:	9f 92       	push	r9
    1ada:	af 92       	push	r10
    1adc:	bf 92       	push	r11
    1ade:	cf 92       	push	r12
    1ae0:	df 92       	push	r13
    1ae2:	ef 92       	push	r14
    1ae4:	ff 92       	push	r15
    1ae6:	0f 93       	push	r16
    1ae8:	1f 93       	push	r17
    1aea:	cf 93       	push	r28
    1aec:	df 93       	push	r29
    1aee:	cd b7       	in	r28, 0x3d	; 61
    1af0:	de b7       	in	r29, 0x3e	; 62
    1af2:	62 97       	sbiw	r28, 0x12	; 18
    1af4:	0f b6       	in	r0, 0x3f	; 63
    1af6:	f8 94       	cli
    1af8:	de bf       	out	0x3e, r29	; 62
    1afa:	0f be       	out	0x3f, r0	; 63
    1afc:	cd bf       	out	0x3d, r28	; 61
    1afe:	1c 01       	movw	r2, r24
    1b00:	6a 01       	movw	r12, r20
    1b02:	7b 01       	movw	r14, r22
    1b04:	c9 01       	movw	r24, r18
    1b06:	b8 01       	movw	r22, r16
	duration*=0.5;
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	40 e0       	ldi	r20, 0x00	; 0
    1b0e:	5f e3       	ldi	r21, 0x3F	; 63
    1b10:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1b14:	4b 01       	movw	r8, r22
    1b16:	5c 01       	movw	r10, r24
	long int cycles;
	float half_period;
	float wavelength;
	
	SPEAKER_DDR |= (1 << SPEAKER_PIN);
    1b18:	24 b1       	in	r18, 0x04	; 4
    1b1a:	81 e0       	ldi	r24, 0x01	; 1
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	f1 01       	movw	r30, r2
    1b20:	00 80       	ld	r0, Z
    1b22:	02 c0       	rjmp	.+4      	; 0x1b28 <_ZN4Tone8playNoteEff+0x5e>
    1b24:	88 0f       	add	r24, r24
    1b26:	99 1f       	adc	r25, r25
    1b28:	0a 94       	dec	r0
    1b2a:	e2 f7       	brpl	.-8      	; 0x1b24 <_ZN4Tone8playNoteEff+0x5a>
    1b2c:	82 2b       	or	r24, r18
    1b2e:	84 b9       	out	0x04, r24	; 4
	if (frequency==0){
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	30 e0       	ldi	r19, 0x00	; 0
    1b34:	a9 01       	movw	r20, r18
    1b36:	c7 01       	movw	r24, r14
    1b38:	b6 01       	movw	r22, r12
    1b3a:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1b3e:	81 11       	cpse	r24, r1
    1b40:	da c0       	rjmp	.+436    	; 0x1cf6 <_ZN4Tone8playNoteEff+0x22c>
		SPEAKER_PORT &= ~(1 << SPEAKER_PIN);
    1b42:	25 b1       	in	r18, 0x05	; 5
    1b44:	81 e0       	ldi	r24, 0x01	; 1
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	f1 01       	movw	r30, r2
    1b4a:	00 80       	ld	r0, Z
    1b4c:	02 c0       	rjmp	.+4      	; 0x1b52 <_ZN4Tone8playNoteEff+0x88>
    1b4e:	88 0f       	add	r24, r24
    1b50:	99 1f       	adc	r25, r25
    1b52:	0a 94       	dec	r0
    1b54:	e2 f7       	brpl	.-8      	; 0x1b4e <_ZN4Tone8playNoteEff+0x84>
    1b56:	80 95       	com	r24
    1b58:	82 23       	and	r24, r18
    1b5a:	85 b9       	out	0x05, r24	; 5
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1b5c:	2b ea       	ldi	r18, 0xAB	; 171
    1b5e:	3a ea       	ldi	r19, 0xAA	; 170
    1b60:	4a ea       	ldi	r20, 0xAA	; 170
    1b62:	5e e3       	ldi	r21, 0x3E	; 62
    1b64:	c5 01       	movw	r24, r10
    1b66:	b4 01       	movw	r22, r8
    1b68:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1b6c:	6b 01       	movw	r12, r22
    1b6e:	7c 01       	movw	r14, r24
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1b70:	20 e0       	ldi	r18, 0x00	; 0
    1b72:	30 e0       	ldi	r19, 0x00	; 0
    1b74:	40 e8       	ldi	r20, 0x80	; 128
    1b76:	5e e3       	ldi	r21, 0x3E	; 62
    1b78:	c5 01       	movw	r24, r10
    1b7a:	b4 01       	movw	r22, r8
    1b7c:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1b80:	2b 01       	movw	r4, r22
    1b82:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	40 e8       	ldi	r20, 0x80	; 128
    1b8a:	5f e3       	ldi	r21, 0x3F	; 63
    1b8c:	c7 01       	movw	r24, r14
    1b8e:	b6 01       	movw	r22, r12
    1b90:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1b94:	88 23       	and	r24, r24
    1b96:	0c f4       	brge	.+2      	; 0x1b9a <_ZN4Tone8playNoteEff+0xd0>
    1b98:	66 c0       	rjmp	.+204    	; 0x1c66 <_ZN4Tone8playNoteEff+0x19c>
		__ticks = 1;
	else if (__tmp2 > 65535)
    1b9a:	20 e0       	ldi	r18, 0x00	; 0
    1b9c:	3f ef       	ldi	r19, 0xFF	; 255
    1b9e:	4f e7       	ldi	r20, 0x7F	; 127
    1ba0:	57 e4       	ldi	r21, 0x47	; 71
    1ba2:	c3 01       	movw	r24, r6
    1ba4:	b2 01       	movw	r22, r4
    1ba6:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1baa:	18 16       	cp	r1, r24
    1bac:	0c f0       	brlt	.+2      	; 0x1bb0 <_ZN4Tone8playNoteEff+0xe6>
    1bae:	43 c0       	rjmp	.+134    	; 0x1c36 <_ZN4Tone8playNoteEff+0x16c>
	{
		_delay_ms(__us / 1000.0);
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	4a e7       	ldi	r20, 0x7A	; 122
    1bb6:	54 e4       	ldi	r21, 0x44	; 68
    1bb8:	c5 01       	movw	r24, r10
    1bba:	b4 01       	movw	r22, r8
    1bbc:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <__divsf3>
    1bc0:	2b 01       	movw	r4, r22
    1bc2:	3c 01       	movw	r6, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1bc4:	20 e0       	ldi	r18, 0x00	; 0
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	4a e7       	ldi	r20, 0x7A	; 122
    1bca:	53 e4       	ldi	r21, 0x43	; 67
    1bcc:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1bd0:	6b 01       	movw	r12, r22
    1bd2:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1bd4:	20 e0       	ldi	r18, 0x00	; 0
    1bd6:	30 e0       	ldi	r19, 0x00	; 0
    1bd8:	40 e8       	ldi	r20, 0x80	; 128
    1bda:	5f e3       	ldi	r21, 0x3F	; 63
    1bdc:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1be0:	88 23       	and	r24, r24
    1be2:	1c f1       	brlt	.+70     	; 0x1c2a <_ZN4Tone8playNoteEff+0x160>
		__ticks = 1;
	else if (__tmp > 65535)
    1be4:	20 e0       	ldi	r18, 0x00	; 0
    1be6:	3f ef       	ldi	r19, 0xFF	; 255
    1be8:	4f e7       	ldi	r20, 0x7F	; 127
    1bea:	57 e4       	ldi	r21, 0x47	; 71
    1bec:	c7 01       	movw	r24, r14
    1bee:	b6 01       	movw	r22, r12
    1bf0:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1bf4:	18 16       	cp	r1, r24
    1bf6:	a4 f4       	brge	.+40     	; 0x1c20 <_ZN4Tone8playNoteEff+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	30 e0       	ldi	r19, 0x00	; 0
    1bfc:	40 e2       	ldi	r20, 0x20	; 32
    1bfe:	51 e4       	ldi	r21, 0x41	; 65
    1c00:	c3 01       	movw	r24, r6
    1c02:	b2 01       	movw	r22, r4
    1c04:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1c08:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    1c0c:	61 15       	cp	r22, r1
    1c0e:	71 05       	cpc	r23, r1
    1c10:	69 f1       	breq	.+90     	; 0x1c6c <_ZN4Tone8playNoteEff+0x1a2>
    1c12:	89 e1       	ldi	r24, 0x19	; 25
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	01 97       	sbiw	r24, 0x01	; 1
    1c18:	f1 f7       	brne	.-4      	; 0x1c16 <_ZN4Tone8playNoteEff+0x14c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c1a:	61 50       	subi	r22, 0x01	; 1
    1c1c:	71 09       	sbc	r23, r1
    1c1e:	f6 cf       	rjmp	.-20     	; 0x1c0c <_ZN4Tone8playNoteEff+0x142>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c20:	c7 01       	movw	r24, r14
    1c22:	b6 01       	movw	r22, r12
    1c24:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1c28:	02 c0       	rjmp	.+4      	; 0x1c2e <_ZN4Tone8playNoteEff+0x164>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1c2a:	61 e0       	ldi	r22, 0x01	; 1
    1c2c:	70 e0       	ldi	r23, 0x00	; 0
    1c2e:	cb 01       	movw	r24, r22
    1c30:	01 97       	sbiw	r24, 0x01	; 1
    1c32:	f1 f7       	brne	.-4      	; 0x1c30 <_ZN4Tone8playNoteEff+0x166>
    1c34:	1b c0       	rjmp	.+54     	; 0x1c6c <_ZN4Tone8playNoteEff+0x1a2>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	4f e7       	ldi	r20, 0x7F	; 127
    1c3c:	53 e4       	ldi	r21, 0x43	; 67
    1c3e:	c7 01       	movw	r24, r14
    1c40:	b6 01       	movw	r22, r12
    1c42:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1c46:	18 16       	cp	r1, r24
    1c48:	44 f4       	brge	.+16     	; 0x1c5a <_ZN4Tone8playNoteEff+0x190>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1c4a:	c3 01       	movw	r24, r6
    1c4c:	b2 01       	movw	r22, r4
    1c4e:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1c52:	cb 01       	movw	r24, r22
    1c54:	01 97       	sbiw	r24, 0x01	; 1
    1c56:	f1 f7       	brne	.-4      	; 0x1c54 <_ZN4Tone8playNoteEff+0x18a>
    1c58:	0c c0       	rjmp	.+24     	; 0x1c72 <_ZN4Tone8playNoteEff+0x1a8>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1c5a:	c7 01       	movw	r24, r14
    1c5c:	b6 01       	movw	r22, r12
    1c5e:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1c62:	69 87       	std	Y+9, r22	; 0x09
    1c64:	03 c0       	rjmp	.+6      	; 0x1c6c <_ZN4Tone8playNoteEff+0x1a2>
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
	__tmp2 = ((F_CPU) / 4e6) * __us;
	if (__tmp < 1.0)
		__ticks = 1;
    1c66:	21 e0       	ldi	r18, 0x01	; 1
    1c68:	29 87       	std	Y+9, r18	; 0x09
    1c6a:	00 c0       	rjmp	.+0      	; 0x1c6c <_ZN4Tone8playNoteEff+0x1a2>
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
    1c6c:	89 85       	ldd	r24, Y+9	; 0x09
    1c6e:	8a 95       	dec	r24
    1c70:	f1 f7       	brne	.-4      	; 0x1c6e <_ZN4Tone8playNoteEff+0x1a4>
		_delay_us(duration);
		float pauseBetweenNotes= duration*2;
    1c72:	a5 01       	movw	r20, r10
    1c74:	94 01       	movw	r18, r8
    1c76:	c5 01       	movw	r24, r10
    1c78:	b4 01       	movw	r22, r8
    1c7a:	0e 94 99 14 	call	0x2932	; 0x2932 <__addsf3>
    1c7e:	4b 01       	movw	r8, r22
    1c80:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c82:	20 e0       	ldi	r18, 0x00	; 0
    1c84:	30 e0       	ldi	r19, 0x00	; 0
    1c86:	4a e7       	ldi	r20, 0x7A	; 122
    1c88:	53 e4       	ldi	r21, 0x43	; 67
    1c8a:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1c8e:	6b 01       	movw	r12, r22
    1c90:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1c92:	20 e0       	ldi	r18, 0x00	; 0
    1c94:	30 e0       	ldi	r19, 0x00	; 0
    1c96:	40 e8       	ldi	r20, 0x80	; 128
    1c98:	5f e3       	ldi	r21, 0x3F	; 63
    1c9a:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1c9e:	88 23       	and	r24, r24
    1ca0:	24 f1       	brlt	.+72     	; 0x1cea <_ZN4Tone8playNoteEff+0x220>
		__ticks = 1;
	else if (__tmp > 65535)
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	3f ef       	ldi	r19, 0xFF	; 255
    1ca6:	4f e7       	ldi	r20, 0x7F	; 127
    1ca8:	57 e4       	ldi	r21, 0x47	; 71
    1caa:	c7 01       	movw	r24, r14
    1cac:	b6 01       	movw	r22, r12
    1cae:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1cb2:	18 16       	cp	r1, r24
    1cb4:	ac f4       	brge	.+42     	; 0x1ce0 <_ZN4Tone8playNoteEff+0x216>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cb6:	20 e0       	ldi	r18, 0x00	; 0
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e2       	ldi	r20, 0x20	; 32
    1cbc:	51 e4       	ldi	r21, 0x41	; 65
    1cbe:	c5 01       	movw	r24, r10
    1cc0:	b4 01       	movw	r22, r8
    1cc2:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1cc6:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    1cca:	61 15       	cp	r22, r1
    1ccc:	71 05       	cpc	r23, r1
    1cce:	09 f4       	brne	.+2      	; 0x1cd2 <_ZN4Tone8playNoteEff+0x208>
    1cd0:	8c c1       	rjmp	.+792    	; 0x1fea <_ZN4Tone8playNoteEff+0x520>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1cd2:	89 e1       	ldi	r24, 0x19	; 25
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	01 97       	sbiw	r24, 0x01	; 1
    1cd8:	f1 f7       	brne	.-4      	; 0x1cd6 <_ZN4Tone8playNoteEff+0x20c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cda:	61 50       	subi	r22, 0x01	; 1
    1cdc:	71 09       	sbc	r23, r1
    1cde:	f5 cf       	rjmp	.-22     	; 0x1cca <_ZN4Tone8playNoteEff+0x200>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ce0:	c7 01       	movw	r24, r14
    1ce2:	b6 01       	movw	r22, r12
    1ce4:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <_ZN4Tone8playNoteEff+0x224>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1cea:	61 e0       	ldi	r22, 0x01	; 1
    1cec:	70 e0       	ldi	r23, 0x00	; 0
    1cee:	cb 01       	movw	r24, r22
    1cf0:	01 97       	sbiw	r24, 0x01	; 1
    1cf2:	f1 f7       	brne	.-4      	; 0x1cf0 <_ZN4Tone8playNoteEff+0x226>
    1cf4:	7a c1       	rjmp	.+756    	; 0x1fea <_ZN4Tone8playNoteEff+0x520>
			_delay_ms (pauseBetweenNotes);
	}
	
	
	else{
		wavelength=(1/frequency)*1000;
    1cf6:	a7 01       	movw	r20, r14
    1cf8:	96 01       	movw	r18, r12
    1cfa:	60 e0       	ldi	r22, 0x00	; 0
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	80 e8       	ldi	r24, 0x80	; 128
    1d00:	9f e3       	ldi	r25, 0x3F	; 63
    1d02:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <__divsf3>
    1d06:	20 e0       	ldi	r18, 0x00	; 0
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	4a e7       	ldi	r20, 0x7A	; 122
    1d0c:	54 e4       	ldi	r21, 0x44	; 68
    1d0e:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1d12:	6b 01       	movw	r12, r22
    1d14:	7c 01       	movw	r14, r24
		cycles=2*duration/wavelength;
    1d16:	a5 01       	movw	r20, r10
    1d18:	94 01       	movw	r18, r8
    1d1a:	c5 01       	movw	r24, r10
    1d1c:	b4 01       	movw	r22, r8
    1d1e:	0e 94 99 14 	call	0x2932	; 0x2932 <__addsf3>
    1d22:	a7 01       	movw	r20, r14
    1d24:	96 01       	movw	r18, r12
    1d26:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <__divsf3>
    1d2a:	0e 94 7c 15 	call	0x2af8	; 0x2af8 <__fixsfsi>
    1d2e:	2b 01       	movw	r4, r22
    1d30:	3c 01       	movw	r6, r24
		half_period = wavelength/2;
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	30 e0       	ldi	r19, 0x00	; 0
    1d36:	40 e0       	ldi	r20, 0x00	; 0
    1d38:	5f e3       	ldi	r21, 0x3F	; 63
    1d3a:	c7 01       	movw	r24, r14
    1d3c:	b6 01       	movw	r22, r12
    1d3e:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1d42:	69 87       	std	Y+9, r22	; 0x09
    1d44:	7a 87       	std	Y+10, r23	; 0x0a
    1d46:	8b 87       	std	Y+11, r24	; 0x0b
    1d48:	9c 87       	std	Y+12, r25	; 0x0c

		
		
		for (int i=0;i<cycles;i++)
    1d4a:	e0 e0       	ldi	r30, 0x00	; 0
    1d4c:	f0 e0       	ldi	r31, 0x00	; 0
    1d4e:	fa 8b       	std	Y+18, r31	; 0x12
    1d50:	e9 8b       	std	Y+17, r30	; 0x11
    1d52:	19 81       	ldd	r17, Y+1	; 0x01
    1d54:	0d 81       	ldd	r16, Y+5	; 0x05
    1d56:	29 89       	ldd	r18, Y+17	; 0x11
    1d58:	3a 89       	ldd	r19, Y+18	; 0x12
    1d5a:	c9 01       	movw	r24, r18
    1d5c:	33 0f       	add	r19, r19
    1d5e:	aa 0b       	sbc	r26, r26
    1d60:	bb 0b       	sbc	r27, r27
    1d62:	84 15       	cp	r24, r4
    1d64:	95 05       	cpc	r25, r5
    1d66:	a6 05       	cpc	r26, r6
    1d68:	b7 05       	cpc	r27, r7
    1d6a:	0c f0       	brlt	.+2      	; 0x1d6e <_ZN4Tone8playNoteEff+0x2a4>
    1d6c:	3e c1       	rjmp	.+636    	; 0x1fea <_ZN4Tone8playNoteEff+0x520>
		{
			_delay_us(half_period*1000);
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	4a e7       	ldi	r20, 0x7A	; 122
    1d74:	54 e4       	ldi	r21, 0x44	; 68
    1d76:	69 85       	ldd	r22, Y+9	; 0x09
    1d78:	7a 85       	ldd	r23, Y+10	; 0x0a
    1d7a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d7c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d7e:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1d82:	4b 01       	movw	r8, r22
    1d84:	5c 01       	movw	r10, r24
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1d86:	2b ea       	ldi	r18, 0xAB	; 171
    1d88:	3a ea       	ldi	r19, 0xAA	; 170
    1d8a:	4a ea       	ldi	r20, 0xAA	; 170
    1d8c:	5e e3       	ldi	r21, 0x3E	; 62
    1d8e:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1d92:	6b 01       	movw	r12, r22
    1d94:	7c 01       	movw	r14, r24
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1d96:	20 e0       	ldi	r18, 0x00	; 0
    1d98:	30 e0       	ldi	r19, 0x00	; 0
    1d9a:	40 e8       	ldi	r20, 0x80	; 128
    1d9c:	5e e3       	ldi	r21, 0x3E	; 62
    1d9e:	c5 01       	movw	r24, r10
    1da0:	b4 01       	movw	r22, r8
    1da2:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1da6:	69 83       	std	Y+1, r22	; 0x01
    1da8:	7a 83       	std	Y+2, r23	; 0x02
    1daa:	8b 83       	std	Y+3, r24	; 0x03
    1dac:	9c 83       	std	Y+4, r25	; 0x04
	if (__tmp < 1.0)
    1dae:	20 e0       	ldi	r18, 0x00	; 0
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	40 e8       	ldi	r20, 0x80	; 128
    1db4:	5f e3       	ldi	r21, 0x3F	; 63
    1db6:	c7 01       	movw	r24, r14
    1db8:	b6 01       	movw	r22, r12
    1dba:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1dbe:	88 23       	and	r24, r24
    1dc0:	0c f4       	brge	.+2      	; 0x1dc4 <_ZN4Tone8playNoteEff+0x2fa>
    1dc2:	74 c0       	rjmp	.+232    	; 0x1eac <_ZN4Tone8playNoteEff+0x3e2>
		__ticks = 1;
	else if (__tmp2 > 65535)
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	3f ef       	ldi	r19, 0xFF	; 255
    1dc8:	4f e7       	ldi	r20, 0x7F	; 127
    1dca:	57 e4       	ldi	r21, 0x47	; 71
    1dcc:	69 81       	ldd	r22, Y+1	; 0x01
    1dce:	7a 81       	ldd	r23, Y+2	; 0x02
    1dd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1dd2:	9c 81       	ldd	r25, Y+4	; 0x04
    1dd4:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1dd8:	18 16       	cp	r1, r24
    1dda:	0c f0       	brlt	.+2      	; 0x1dde <_ZN4Tone8playNoteEff+0x314>
    1ddc:	4d c0       	rjmp	.+154    	; 0x1e78 <_ZN4Tone8playNoteEff+0x3ae>
	{
		_delay_ms(__us / 1000.0);
    1dde:	20 e0       	ldi	r18, 0x00	; 0
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	4a e7       	ldi	r20, 0x7A	; 122
    1de4:	54 e4       	ldi	r21, 0x44	; 68
    1de6:	c5 01       	movw	r24, r10
    1de8:	b4 01       	movw	r22, r8
    1dea:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <__divsf3>
    1dee:	6d 87       	std	Y+13, r22	; 0x0d
    1df0:	7e 87       	std	Y+14, r23	; 0x0e
    1df2:	8f 87       	std	Y+15, r24	; 0x0f
    1df4:	98 8b       	std	Y+16, r25	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1df6:	20 e0       	ldi	r18, 0x00	; 0
    1df8:	30 e0       	ldi	r19, 0x00	; 0
    1dfa:	4a e7       	ldi	r20, 0x7A	; 122
    1dfc:	53 e4       	ldi	r21, 0x43	; 67
    1dfe:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1e02:	6d 83       	std	Y+5, r22	; 0x05
    1e04:	7e 83       	std	Y+6, r23	; 0x06
    1e06:	8f 83       	std	Y+7, r24	; 0x07
    1e08:	98 87       	std	Y+8, r25	; 0x08
	if (__tmp < 1.0)
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	40 e8       	ldi	r20, 0x80	; 128
    1e10:	5f e3       	ldi	r21, 0x3F	; 63
    1e12:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1e16:	88 23       	and	r24, r24
    1e18:	4c f1       	brlt	.+82     	; 0x1e6c <_ZN4Tone8playNoteEff+0x3a2>
		__ticks = 1;
	else if (__tmp > 65535)
    1e1a:	20 e0       	ldi	r18, 0x00	; 0
    1e1c:	3f ef       	ldi	r19, 0xFF	; 255
    1e1e:	4f e7       	ldi	r20, 0x7F	; 127
    1e20:	57 e4       	ldi	r21, 0x47	; 71
    1e22:	6d 81       	ldd	r22, Y+5	; 0x05
    1e24:	7e 81       	ldd	r23, Y+6	; 0x06
    1e26:	8f 81       	ldd	r24, Y+7	; 0x07
    1e28:	98 85       	ldd	r25, Y+8	; 0x08
    1e2a:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1e2e:	18 16       	cp	r1, r24
    1e30:	b4 f4       	brge	.+44     	; 0x1e5e <_ZN4Tone8playNoteEff+0x394>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	40 e2       	ldi	r20, 0x20	; 32
    1e38:	51 e4       	ldi	r21, 0x41	; 65
    1e3a:	6d 85       	ldd	r22, Y+13	; 0x0d
    1e3c:	7e 85       	ldd	r23, Y+14	; 0x0e
    1e3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e40:	98 89       	ldd	r25, Y+16	; 0x10
    1e42:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1e46:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    1e4a:	61 15       	cp	r22, r1
    1e4c:	71 05       	cpc	r23, r1
    1e4e:	81 f1       	breq	.+96     	; 0x1eb0 <_ZN4Tone8playNoteEff+0x3e6>
    1e50:	89 e1       	ldi	r24, 0x19	; 25
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	f1 f7       	brne	.-4      	; 0x1e54 <_ZN4Tone8playNoteEff+0x38a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e58:	61 50       	subi	r22, 0x01	; 1
    1e5a:	71 09       	sbc	r23, r1
    1e5c:	f6 cf       	rjmp	.-20     	; 0x1e4a <_ZN4Tone8playNoteEff+0x380>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e5e:	6d 81       	ldd	r22, Y+5	; 0x05
    1e60:	7e 81       	ldd	r23, Y+6	; 0x06
    1e62:	8f 81       	ldd	r24, Y+7	; 0x07
    1e64:	98 85       	ldd	r25, Y+8	; 0x08
    1e66:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1e6a:	02 c0       	rjmp	.+4      	; 0x1e70 <_ZN4Tone8playNoteEff+0x3a6>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1e6c:	61 e0       	ldi	r22, 0x01	; 1
    1e6e:	70 e0       	ldi	r23, 0x00	; 0
    1e70:	cb 01       	movw	r24, r22
    1e72:	01 97       	sbiw	r24, 0x01	; 1
    1e74:	f1 f7       	brne	.-4      	; 0x1e72 <_ZN4Tone8playNoteEff+0x3a8>
    1e76:	1c c0       	rjmp	.+56     	; 0x1eb0 <_ZN4Tone8playNoteEff+0x3e6>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1e78:	20 e0       	ldi	r18, 0x00	; 0
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	4f e7       	ldi	r20, 0x7F	; 127
    1e7e:	53 e4       	ldi	r21, 0x43	; 67
    1e80:	c7 01       	movw	r24, r14
    1e82:	b6 01       	movw	r22, r12
    1e84:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1e88:	18 16       	cp	r1, r24
    1e8a:	54 f4       	brge	.+20     	; 0x1ea0 <_ZN4Tone8playNoteEff+0x3d6>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1e8c:	69 81       	ldd	r22, Y+1	; 0x01
    1e8e:	7a 81       	ldd	r23, Y+2	; 0x02
    1e90:	8b 81       	ldd	r24, Y+3	; 0x03
    1e92:	9c 81       	ldd	r25, Y+4	; 0x04
    1e94:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1e98:	cb 01       	movw	r24, r22
    1e9a:	01 97       	sbiw	r24, 0x01	; 1
    1e9c:	f1 f7       	brne	.-4      	; 0x1e9a <_ZN4Tone8playNoteEff+0x3d0>
    1e9e:	0b c0       	rjmp	.+22     	; 0x1eb6 <_ZN4Tone8playNoteEff+0x3ec>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1ea0:	c7 01       	movw	r24, r14
    1ea2:	b6 01       	movw	r22, r12
    1ea4:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1ea8:	06 2f       	mov	r16, r22
    1eaa:	02 c0       	rjmp	.+4      	; 0x1eb0 <_ZN4Tone8playNoteEff+0x3e6>
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
	__tmp2 = ((F_CPU) / 4e6) * __us;
	if (__tmp < 1.0)
		__ticks = 1;
    1eac:	01 e0       	ldi	r16, 0x01	; 1
    1eae:	00 c0       	rjmp	.+0      	; 0x1eb0 <_ZN4Tone8playNoteEff+0x3e6>
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
    1eb0:	80 2f       	mov	r24, r16
    1eb2:	8a 95       	dec	r24
    1eb4:	f1 f7       	brne	.-4      	; 0x1eb2 <_ZN4Tone8playNoteEff+0x3e8>
			SPEAKER_PORT |= (1 << SPEAKER_PIN);
    1eb6:	25 b1       	in	r18, 0x05	; 5
    1eb8:	81 e0       	ldi	r24, 0x01	; 1
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	f1 01       	movw	r30, r2
    1ebe:	00 80       	ld	r0, Z
    1ec0:	02 c0       	rjmp	.+4      	; 0x1ec6 <_ZN4Tone8playNoteEff+0x3fc>
    1ec2:	88 0f       	add	r24, r24
    1ec4:	99 1f       	adc	r25, r25
    1ec6:	0a 94       	dec	r0
    1ec8:	e2 f7       	brpl	.-8      	; 0x1ec2 <_ZN4Tone8playNoteEff+0x3f8>
    1eca:	82 2b       	or	r24, r18
    1ecc:	85 b9       	out	0x05, r24	; 5
#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
	__tmp2 = ((F_CPU) / 4e6) * __us;
	if (__tmp < 1.0)
    1ece:	20 e0       	ldi	r18, 0x00	; 0
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	40 e8       	ldi	r20, 0x80	; 128
    1ed4:	5f e3       	ldi	r21, 0x3F	; 63
    1ed6:	c7 01       	movw	r24, r14
    1ed8:	b6 01       	movw	r22, r12
    1eda:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1ede:	88 23       	and	r24, r24
    1ee0:	0c f4       	brge	.+2      	; 0x1ee4 <_ZN4Tone8playNoteEff+0x41a>
    1ee2:	6a c0       	rjmp	.+212    	; 0x1fb8 <_ZN4Tone8playNoteEff+0x4ee>
		__ticks = 1;
	else if (__tmp2 > 65535)
    1ee4:	20 e0       	ldi	r18, 0x00	; 0
    1ee6:	3f ef       	ldi	r19, 0xFF	; 255
    1ee8:	4f e7       	ldi	r20, 0x7F	; 127
    1eea:	57 e4       	ldi	r21, 0x47	; 71
    1eec:	69 81       	ldd	r22, Y+1	; 0x01
    1eee:	7a 81       	ldd	r23, Y+2	; 0x02
    1ef0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ef2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef4:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1ef8:	18 16       	cp	r1, r24
    1efa:	0c f0       	brlt	.+2      	; 0x1efe <_ZN4Tone8playNoteEff+0x434>
    1efc:	43 c0       	rjmp	.+134    	; 0x1f84 <_ZN4Tone8playNoteEff+0x4ba>
	{
		_delay_ms(__us / 1000.0);
    1efe:	20 e0       	ldi	r18, 0x00	; 0
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	4a e7       	ldi	r20, 0x7A	; 122
    1f04:	54 e4       	ldi	r21, 0x44	; 68
    1f06:	c5 01       	movw	r24, r10
    1f08:	b4 01       	movw	r22, r8
    1f0a:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <__divsf3>
    1f0e:	4b 01       	movw	r8, r22
    1f10:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1f12:	20 e0       	ldi	r18, 0x00	; 0
    1f14:	30 e0       	ldi	r19, 0x00	; 0
    1f16:	4a e7       	ldi	r20, 0x7A	; 122
    1f18:	53 e4       	ldi	r21, 0x43	; 67
    1f1a:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1f1e:	6b 01       	movw	r12, r22
    1f20:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	40 e8       	ldi	r20, 0x80	; 128
    1f28:	5f e3       	ldi	r21, 0x3F	; 63
    1f2a:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    1f2e:	88 23       	and	r24, r24
    1f30:	1c f1       	brlt	.+70     	; 0x1f78 <_ZN4Tone8playNoteEff+0x4ae>
		__ticks = 1;
	else if (__tmp > 65535)
    1f32:	20 e0       	ldi	r18, 0x00	; 0
    1f34:	3f ef       	ldi	r19, 0xFF	; 255
    1f36:	4f e7       	ldi	r20, 0x7F	; 127
    1f38:	57 e4       	ldi	r21, 0x47	; 71
    1f3a:	c7 01       	movw	r24, r14
    1f3c:	b6 01       	movw	r22, r12
    1f3e:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1f42:	18 16       	cp	r1, r24
    1f44:	a4 f4       	brge	.+40     	; 0x1f6e <_ZN4Tone8playNoteEff+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e2       	ldi	r20, 0x20	; 32
    1f4c:	51 e4       	ldi	r21, 0x41	; 65
    1f4e:	c5 01       	movw	r24, r10
    1f50:	b4 01       	movw	r22, r8
    1f52:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    1f56:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    1f5a:	61 15       	cp	r22, r1
    1f5c:	71 05       	cpc	r23, r1
    1f5e:	71 f1       	breq	.+92     	; 0x1fbc <_ZN4Tone8playNoteEff+0x4f2>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1f60:	89 e1       	ldi	r24, 0x19	; 25
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	01 97       	sbiw	r24, 0x01	; 1
    1f66:	f1 f7       	brne	.-4      	; 0x1f64 <_ZN4Tone8playNoteEff+0x49a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f68:	61 50       	subi	r22, 0x01	; 1
    1f6a:	71 09       	sbc	r23, r1
    1f6c:	f6 cf       	rjmp	.-20     	; 0x1f5a <_ZN4Tone8playNoteEff+0x490>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f6e:	c7 01       	movw	r24, r14
    1f70:	b6 01       	movw	r22, r12
    1f72:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1f76:	02 c0       	rjmp	.+4      	; 0x1f7c <_ZN4Tone8playNoteEff+0x4b2>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1f78:	61 e0       	ldi	r22, 0x01	; 1
    1f7a:	70 e0       	ldi	r23, 0x00	; 0
    1f7c:	cb 01       	movw	r24, r22
    1f7e:	01 97       	sbiw	r24, 0x01	; 1
    1f80:	f1 f7       	brne	.-4      	; 0x1f7e <_ZN4Tone8playNoteEff+0x4b4>
    1f82:	1c c0       	rjmp	.+56     	; 0x1fbc <_ZN4Tone8playNoteEff+0x4f2>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1f84:	20 e0       	ldi	r18, 0x00	; 0
    1f86:	30 e0       	ldi	r19, 0x00	; 0
    1f88:	4f e7       	ldi	r20, 0x7F	; 127
    1f8a:	53 e4       	ldi	r21, 0x43	; 67
    1f8c:	c7 01       	movw	r24, r14
    1f8e:	b6 01       	movw	r22, r12
    1f90:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    1f94:	18 16       	cp	r1, r24
    1f96:	54 f4       	brge	.+20     	; 0x1fac <_ZN4Tone8playNoteEff+0x4e2>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1f98:	69 81       	ldd	r22, Y+1	; 0x01
    1f9a:	7a 81       	ldd	r23, Y+2	; 0x02
    1f9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1fa0:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1fa4:	cb 01       	movw	r24, r22
    1fa6:	01 97       	sbiw	r24, 0x01	; 1
    1fa8:	f1 f7       	brne	.-4      	; 0x1fa6 <_ZN4Tone8playNoteEff+0x4dc>
    1faa:	0b c0       	rjmp	.+22     	; 0x1fc2 <_ZN4Tone8playNoteEff+0x4f8>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1fac:	c7 01       	movw	r24, r14
    1fae:	b6 01       	movw	r22, r12
    1fb0:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    1fb4:	16 2f       	mov	r17, r22
    1fb6:	02 c0       	rjmp	.+4      	; 0x1fbc <_ZN4Tone8playNoteEff+0x4f2>
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
	__tmp2 = ((F_CPU) / 4e6) * __us;
	if (__tmp < 1.0)
		__ticks = 1;
    1fb8:	11 e0       	ldi	r17, 0x01	; 1
    1fba:	00 c0       	rjmp	.+0      	; 0x1fbc <_ZN4Tone8playNoteEff+0x4f2>
	__asm__ volatile (
		"1: dec %0" "\n\t"
		"brne 1b"
		: "=r" (__count)
		: "0" (__count)
	);
    1fbc:	81 2f       	mov	r24, r17
    1fbe:	8a 95       	dec	r24
    1fc0:	f1 f7       	brne	.-4      	; 0x1fbe <_ZN4Tone8playNoteEff+0x4f4>
			_delay_us(half_period*1000);
			SPEAKER_PORT &= ~(1 << SPEAKER_PIN);
    1fc2:	25 b1       	in	r18, 0x05	; 5
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	f1 01       	movw	r30, r2
    1fca:	00 80       	ld	r0, Z
    1fcc:	02 c0       	rjmp	.+4      	; 0x1fd2 <_ZN4Tone8playNoteEff+0x508>
    1fce:	88 0f       	add	r24, r24
    1fd0:	99 1f       	adc	r25, r25
    1fd2:	0a 94       	dec	r0
    1fd4:	e2 f7       	brpl	.-8      	; 0x1fce <_ZN4Tone8playNoteEff+0x504>
    1fd6:	80 95       	com	r24
    1fd8:	82 23       	and	r24, r18
    1fda:	85 b9       	out	0x05, r24	; 5
		cycles=2*duration/wavelength;
		half_period = wavelength/2;

		
		
		for (int i=0;i<cycles;i++)
    1fdc:	29 89       	ldd	r18, Y+17	; 0x11
    1fde:	3a 89       	ldd	r19, Y+18	; 0x12
    1fe0:	2f 5f       	subi	r18, 0xFF	; 255
    1fe2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fe4:	3a 8b       	std	Y+18, r19	; 0x12
    1fe6:	29 8b       	std	Y+17, r18	; 0x11
    1fe8:	b6 ce       	rjmp	.-660    	; 0x1d56 <_ZN4Tone8playNoteEff+0x28c>
			SPEAKER_PORT |= (1 << SPEAKER_PIN);
			_delay_us(half_period*1000);
			SPEAKER_PORT &= ~(1 << SPEAKER_PIN);
		}
	}
}
    1fea:	62 96       	adiw	r28, 0x12	; 18
    1fec:	0f b6       	in	r0, 0x3f	; 63
    1fee:	f8 94       	cli
    1ff0:	de bf       	out	0x3e, r29	; 62
    1ff2:	0f be       	out	0x3f, r0	; 63
    1ff4:	cd bf       	out	0x3d, r28	; 61
    1ff6:	df 91       	pop	r29
    1ff8:	cf 91       	pop	r28
    1ffa:	1f 91       	pop	r17
    1ffc:	0f 91       	pop	r16
    1ffe:	ff 90       	pop	r15
    2000:	ef 90       	pop	r14
    2002:	df 90       	pop	r13
    2004:	cf 90       	pop	r12
    2006:	bf 90       	pop	r11
    2008:	af 90       	pop	r10
    200a:	9f 90       	pop	r9
    200c:	8f 90       	pop	r8
    200e:	7f 90       	pop	r7
    2010:	6f 90       	pop	r6
    2012:	5f 90       	pop	r5
    2014:	4f 90       	pop	r4
    2016:	3f 90       	pop	r3
    2018:	2f 90       	pop	r2
    201a:	08 95       	ret

0000201c <_ZN4Tone7melody1Ev>:

//Notes and their durations.

char Tone::melody1()
{  char state='0';
    201c:	2f 92       	push	r2
    201e:	3f 92       	push	r3
    2020:	4f 92       	push	r4
    2022:	5f 92       	push	r5
    2024:	6f 92       	push	r6
    2026:	7f 92       	push	r7
    2028:	8f 92       	push	r8
    202a:	9f 92       	push	r9
    202c:	af 92       	push	r10
    202e:	bf 92       	push	r11
    2030:	cf 92       	push	r12
    2032:	df 92       	push	r13
    2034:	ef 92       	push	r14
    2036:	ff 92       	push	r15
    2038:	0f 93       	push	r16
    203a:	1f 93       	push	r17
    203c:	cf 93       	push	r28
    203e:	df 93       	push	r29
    2040:	cd b7       	in	r28, 0x3d	; 61
    2042:	de b7       	in	r29, 0x3e	; 62
    2044:	65 97       	sbiw	r28, 0x15	; 21
    2046:	0f b6       	in	r0, 0x3f	; 63
    2048:	f8 94       	cli
    204a:	de bf       	out	0x3e, r29	; 62
    204c:	0f be       	out	0x3f, r0	; 63
    204e:	cd bf       	out	0x3d, r28	; 61
    2050:	6c 01       	movw	r12, r24
	int changing=0;
	int melody[] = {
		NOTE_G5,NOTE_G5,NOTE_G5,NOTE_G5,0
	};
    2052:	8a e0       	ldi	r24, 0x0A	; 10
    2054:	e8 ed       	ldi	r30, 0xD8	; 216
    2056:	f1 e0       	ldi	r31, 0x01	; 1
    2058:	de 01       	movw	r26, r28
    205a:	11 96       	adiw	r26, 0x01	; 1
    205c:	01 90       	ld	r0, Z+
    205e:	0d 92       	st	X+, r0
    2060:	8a 95       	dec	r24
    2062:	e1 f7       	brne	.-8      	; 0x205c <_ZN4Tone7melody1Ev+0x40>

	int noteDurations[] = {
		4,4,4,4,1
	};
    2064:	8a e0       	ldi	r24, 0x0A	; 10
    2066:	e2 ee       	ldi	r30, 0xE2	; 226
    2068:	f1 e0       	ldi	r31, 0x01	; 1
    206a:	de 01       	movw	r26, r28
    206c:	1b 96       	adiw	r26, 0x0b	; 11
    206e:	01 90       	ld	r0, Z+
    2070:	0d 92       	st	X+, r0
    2072:	8a 95       	dec	r24
    2074:	e1 f7       	brne	.-8      	; 0x206e <_ZN4Tone7melody1Ev+0x52>

//Notes and their durations.

char Tone::melody1()
{  char state='0';
	int changing=0;
    2076:	21 2c       	mov	r2, r1
    2078:	31 2c       	mov	r3, r1
}

//Notes and their durations.

char Tone::melody1()
{  char state='0';
    207a:	80 e3       	ldi	r24, 0x30	; 48
    207c:	8d 8b       	std	Y+21, r24	; 0x15
    207e:	03 c0       	rjmp	.+6      	; 0x2086 <_ZN4Tone7melody1Ev+0x6a>
		for (int currentNote=0; currentNote<length;currentNote++)
		{
			
			state=sc3.pressedButton();
			if (state !='0'){
				changing=1;
    2080:	22 24       	eor	r2, r2
    2082:	23 94       	inc	r2
    2084:	31 2c       	mov	r3, r1
		4,4,4,4,1
	};
	
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);

	while (changing==0)
    2086:	21 14       	cp	r2, r1
    2088:	31 04       	cpc	r3, r1
    208a:	09 f0       	breq	.+2      	; 0x208e <_ZN4Tone7melody1Ev+0x72>
    208c:	7a c0       	rjmp	.+244    	; 0x2182 <_ZN4Tone7melody1Ev+0x166>
    208e:	e1 2c       	mov	r14, r1
    2090:	f1 2c       	mov	r15, r1
	{
		
		for (int currentNote=0; currentNote<length;currentNote++)
    2092:	95 e0       	ldi	r25, 0x05	; 5
    2094:	e9 16       	cp	r14, r25
    2096:	f1 04       	cpc	r15, r1
    2098:	b4 f7       	brge	.-20     	; 0x2086 <_ZN4Tone7melody1Ev+0x6a>
		{
			
			state=sc3.pressedButton();
    209a:	87 e0       	ldi	r24, 0x07	; 7
    209c:	96 e0       	ldi	r25, 0x06	; 6
    209e:	0e 94 2e 03 	call	0x65c	; 0x65c <_ZN6Screen13pressedButtonEv>
    20a2:	8d 8b       	std	Y+21, r24	; 0x15
			if (state !='0'){
    20a4:	80 33       	cpi	r24, 0x30	; 48
    20a6:	61 f7       	brne	.-40     	; 0x2080 <_ZN4Tone7melody1Ev+0x64>
				changing=1;
				break;
			}
			
			float noteDuration = 200 / noteDurations[currentNote];
    20a8:	87 01       	movw	r16, r14
    20aa:	00 0f       	add	r16, r16
    20ac:	11 1f       	adc	r17, r17
    20ae:	e1 e0       	ldi	r30, 0x01	; 1
    20b0:	f0 e0       	ldi	r31, 0x00	; 0
    20b2:	ec 0f       	add	r30, r28
    20b4:	fd 1f       	adc	r31, r29
    20b6:	0e 0f       	add	r16, r30
    20b8:	1f 1f       	adc	r17, r31
    20ba:	f8 01       	movw	r30, r16
    20bc:	62 85       	ldd	r22, Z+10	; 0x0a
    20be:	73 85       	ldd	r23, Z+11	; 0x0b
    20c0:	88 ec       	ldi	r24, 0xC8	; 200
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    20c8:	07 2e       	mov	r0, r23
    20ca:	00 0c       	add	r0, r0
    20cc:	88 0b       	sbc	r24, r24
    20ce:	99 0b       	sbc	r25, r25
    20d0:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    20d4:	2b 01       	movw	r4, r22
    20d6:	3c 01       	movw	r6, r24
			playNote(melody[currentNote],noteDuration);
    20d8:	f8 01       	movw	r30, r16
    20da:	60 81       	ld	r22, Z
    20dc:	71 81       	ldd	r23, Z+1	; 0x01
    20de:	07 2e       	mov	r0, r23
    20e0:	00 0c       	add	r0, r0
    20e2:	88 0b       	sbc	r24, r24
    20e4:	99 0b       	sbc	r25, r25
    20e6:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    20ea:	ab 01       	movw	r20, r22
    20ec:	bc 01       	movw	r22, r24
    20ee:	93 01       	movw	r18, r6
    20f0:	82 01       	movw	r16, r4
    20f2:	c6 01       	movw	r24, r12
    20f4:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN4Tone8playNoteEff>
			float pauseBetweenNotes= noteDuration*2;
    20f8:	a3 01       	movw	r20, r6
    20fa:	92 01       	movw	r18, r4
    20fc:	c3 01       	movw	r24, r6
    20fe:	b2 01       	movw	r22, r4
    2100:	0e 94 99 14 	call	0x2932	; 0x2932 <__addsf3>
    2104:	4b 01       	movw	r8, r22
    2106:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	4a e7       	ldi	r20, 0x7A	; 122
    210e:	53 e4       	ldi	r21, 0x43	; 67
    2110:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    2114:	2b 01       	movw	r4, r22
    2116:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	40 e8       	ldi	r20, 0x80	; 128
    211e:	5f e3       	ldi	r21, 0x3F	; 63
    2120:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    2124:	88 23       	and	r24, r24
    2126:	1c f1       	brlt	.+70     	; 0x216e <_ZN4Tone7melody1Ev+0x152>
		__ticks = 1;
	else if (__tmp > 65535)
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	3f ef       	ldi	r19, 0xFF	; 255
    212c:	4f e7       	ldi	r20, 0x7F	; 127
    212e:	57 e4       	ldi	r21, 0x47	; 71
    2130:	c3 01       	movw	r24, r6
    2132:	b2 01       	movw	r22, r4
    2134:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    2138:	18 16       	cp	r1, r24
    213a:	a4 f4       	brge	.+40     	; 0x2164 <_ZN4Tone7melody1Ev+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	40 e2       	ldi	r20, 0x20	; 32
    2142:	51 e4       	ldi	r21, 0x41	; 65
    2144:	c5 01       	movw	r24, r10
    2146:	b4 01       	movw	r22, r8
    2148:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    214c:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    2150:	61 15       	cp	r22, r1
    2152:	71 05       	cpc	r23, r1
    2154:	89 f0       	breq	.+34     	; 0x2178 <_ZN4Tone7melody1Ev+0x15c>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    2156:	89 e1       	ldi	r24, 0x19	; 25
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	01 97       	sbiw	r24, 0x01	; 1
    215c:	f1 f7       	brne	.-4      	; 0x215a <_ZN4Tone7melody1Ev+0x13e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    215e:	61 50       	subi	r22, 0x01	; 1
    2160:	71 09       	sbc	r23, r1
    2162:	f6 cf       	rjmp	.-20     	; 0x2150 <_ZN4Tone7melody1Ev+0x134>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2164:	c3 01       	movw	r24, r6
    2166:	b2 01       	movw	r22, r4
    2168:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    216c:	02 c0       	rjmp	.+4      	; 0x2172 <_ZN4Tone7melody1Ev+0x156>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    216e:	61 e0       	ldi	r22, 0x01	; 1
    2170:	70 e0       	ldi	r23, 0x00	; 0
    2172:	cb 01       	movw	r24, r22
    2174:	01 97       	sbiw	r24, 0x01	; 1
    2176:	f1 f7       	brne	.-4      	; 0x2174 <_ZN4Tone7melody1Ev+0x158>
			_delay_ms (pauseBetweenNotes);
			SPEAKER_PORT=0;
    2178:	15 b8       	out	0x05, r1	; 5
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);

	while (changing==0)
	{
		
		for (int currentNote=0; currentNote<length;currentNote++)
    217a:	ff ef       	ldi	r31, 0xFF	; 255
    217c:	ef 1a       	sub	r14, r31
    217e:	ff 0a       	sbc	r15, r31
    2180:	88 cf       	rjmp	.-240    	; 0x2092 <_ZN4Tone7melody1Ev+0x76>
    2182:	80 ea       	ldi	r24, 0xA0	; 160
    2184:	9f e0       	ldi	r25, 0x0F	; 15
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2186:	00 97       	sbiw	r24, 0x00	; 0
    2188:	31 f0       	breq	.+12     	; 0x2196 <_ZN4Tone7melody1Ev+0x17a>
    218a:	e9 e1       	ldi	r30, 0x19	; 25
    218c:	f0 e0       	ldi	r31, 0x00	; 0
    218e:	31 97       	sbiw	r30, 0x01	; 1
    2190:	f1 f7       	brne	.-4      	; 0x218e <_ZN4Tone7melody1Ev+0x172>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2192:	01 97       	sbiw	r24, 0x01	; 1
    2194:	f8 cf       	rjmp	.-16     	; 0x2186 <_ZN4Tone7melody1Ev+0x16a>
	}

	_delay_ms(400);
	
	return state;
}
    2196:	8d 89       	ldd	r24, Y+21	; 0x15
    2198:	65 96       	adiw	r28, 0x15	; 21
    219a:	0f b6       	in	r0, 0x3f	; 63
    219c:	f8 94       	cli
    219e:	de bf       	out	0x3e, r29	; 62
    21a0:	0f be       	out	0x3f, r0	; 63
    21a2:	cd bf       	out	0x3d, r28	; 61
    21a4:	df 91       	pop	r29
    21a6:	cf 91       	pop	r28
    21a8:	1f 91       	pop	r17
    21aa:	0f 91       	pop	r16
    21ac:	ff 90       	pop	r15
    21ae:	ef 90       	pop	r14
    21b0:	df 90       	pop	r13
    21b2:	cf 90       	pop	r12
    21b4:	bf 90       	pop	r11
    21b6:	af 90       	pop	r10
    21b8:	9f 90       	pop	r9
    21ba:	8f 90       	pop	r8
    21bc:	7f 90       	pop	r7
    21be:	6f 90       	pop	r6
    21c0:	5f 90       	pop	r5
    21c2:	4f 90       	pop	r4
    21c4:	3f 90       	pop	r3
    21c6:	2f 90       	pop	r2
    21c8:	08 95       	ret

000021ca <_ZN4Tone7melody2Ev>:


char Tone:: melody2()
{  
    21ca:	2f 92       	push	r2
    21cc:	3f 92       	push	r3
    21ce:	4f 92       	push	r4
    21d0:	5f 92       	push	r5
    21d2:	6f 92       	push	r6
    21d4:	7f 92       	push	r7
    21d6:	8f 92       	push	r8
    21d8:	9f 92       	push	r9
    21da:	af 92       	push	r10
    21dc:	bf 92       	push	r11
    21de:	cf 92       	push	r12
    21e0:	df 92       	push	r13
    21e2:	ef 92       	push	r14
    21e4:	ff 92       	push	r15
    21e6:	0f 93       	push	r16
    21e8:	1f 93       	push	r17
    21ea:	cf 93       	push	r28
    21ec:	df 93       	push	r29
    21ee:	cd b7       	in	r28, 0x3d	; 61
    21f0:	de b7       	in	r29, 0x3e	; 62
    21f2:	c1 54       	subi	r28, 0x41	; 65
    21f4:	d1 40       	sbci	r29, 0x01	; 1
    21f6:	0f b6       	in	r0, 0x3f	; 63
    21f8:	f8 94       	cli
    21fa:	de bf       	out	0x3e, r29	; 62
    21fc:	0f be       	out	0x3f, r0	; 63
    21fe:	cd bf       	out	0x3d, r28	; 61
    2200:	6c 01       	movw	r12, r24
		NOTE_A4, 0, NOTE_A4, NOTE_A4,
		NOTE_C5, 0, NOTE_AS4, NOTE_A4,
		/*NOTE_G4,0, NOTE_G4, NOTE_AS5,
		NOTE_A5, NOTE_AS5, NOTE_A5, NOTE_AS5,
		NOTE_G4,0, NOTE_G4, NOTE_AS5,
		NOTE_A5, NOTE_AS5, NOTE_A5, NOTE_AS5*/ };
    2202:	80 ea       	ldi	r24, 0xA0	; 160
    2204:	ec ee       	ldi	r30, 0xEC	; 236
    2206:	f1 e0       	ldi	r31, 0x01	; 1
    2208:	de 01       	movw	r26, r28
    220a:	11 96       	adiw	r26, 0x01	; 1
    220c:	01 90       	ld	r0, Z+
    220e:	0d 92       	st	X+, r0
    2210:	8a 95       	dec	r24
    2212:	e1 f7       	brne	.-8      	; 0x220c <_ZN4Tone7melody2Ev+0x42>
		4,4,4,4,
		4,4,4,4,
		/*4,4,4,4,
		4,4,4,4,
		4,4,4,4,
		4,4,4,4*/};
    2214:	80 ea       	ldi	r24, 0xA0	; 160
    2216:	ec e8       	ldi	r30, 0x8C	; 140
    2218:	f2 e0       	ldi	r31, 0x02	; 2
    221a:	de 01       	movw	r26, r28
    221c:	af 55       	subi	r26, 0x5F	; 95
    221e:	bf 4f       	sbci	r27, 0xFF	; 255
    2220:	01 90       	ld	r0, Z+
    2222:	0d 92       	st	X+, r0
    2224:	8a 95       	dec	r24
    2226:	e1 f7       	brne	.-8      	; 0x2220 <_ZN4Tone7melody2Ev+0x56>

char Tone:: melody2()
{  
	
	char state='0';
	int changing=0;
    2228:	21 2c       	mov	r2, r1
    222a:	31 2c       	mov	r3, r1


char Tone:: melody2()
{  
	
	char state='0';
    222c:	80 e3       	ldi	r24, 0x30	; 48
    222e:	cf 5b       	subi	r28, 0xBF	; 191
    2230:	de 4f       	sbci	r29, 0xFE	; 254
    2232:	88 83       	st	Y, r24
    2234:	c1 54       	subi	r28, 0x41	; 65
    2236:	d1 40       	sbci	r29, 0x01	; 1
    2238:	03 c0       	rjmp	.+6      	; 0x2240 <_ZN4Tone7melody2Ev+0x76>
	{	
		for (int currentNote=0; currentNote<length;currentNote++)
		{   
			state=sc3.pressedButton();
			if (state !='0'){
				changing=1;
    223a:	22 24       	eor	r2, r2
    223c:	23 94       	inc	r2
    223e:	31 2c       	mov	r3, r1
		4,4,4,4,
		4,4,4,4*/};
		
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	
	while (changing==0)
    2240:	21 14       	cp	r2, r1
    2242:	31 04       	cpc	r3, r1
    2244:	09 f0       	breq	.+2      	; 0x2248 <_ZN4Tone7melody2Ev+0x7e>
    2246:	84 c0       	rjmp	.+264    	; 0x2350 <_ZN4Tone7melody2Ev+0x186>
    2248:	e1 2c       	mov	r14, r1
    224a:	f1 2c       	mov	r15, r1
	{	
		for (int currentNote=0; currentNote<length;currentNote++)
    224c:	80 e5       	ldi	r24, 0x50	; 80
    224e:	e8 16       	cp	r14, r24
    2250:	f1 04       	cpc	r15, r1
    2252:	b4 f7       	brge	.-20     	; 0x2240 <_ZN4Tone7melody2Ev+0x76>
		{   
			state=sc3.pressedButton();
    2254:	87 e0       	ldi	r24, 0x07	; 7
    2256:	96 e0       	ldi	r25, 0x06	; 6
    2258:	0e 94 2e 03 	call	0x65c	; 0x65c <_ZN6Screen13pressedButtonEv>
    225c:	cf 5b       	subi	r28, 0xBF	; 191
    225e:	de 4f       	sbci	r29, 0xFE	; 254
    2260:	88 83       	st	Y, r24
    2262:	c1 54       	subi	r28, 0x41	; 65
    2264:	d1 40       	sbci	r29, 0x01	; 1
			if (state !='0'){
    2266:	80 33       	cpi	r24, 0x30	; 48
    2268:	41 f7       	brne	.-48     	; 0x223a <_ZN4Tone7melody2Ev+0x70>
				changing=1;
				break;
			}

			float noteDuration = 375 / noteDurations[currentNote];
    226a:	87 01       	movw	r16, r14
    226c:	00 0f       	add	r16, r16
    226e:	11 1f       	adc	r17, r17
    2270:	e1 ea       	ldi	r30, 0xA1	; 161
    2272:	f0 e0       	ldi	r31, 0x00	; 0
    2274:	ec 0f       	add	r30, r28
    2276:	fd 1f       	adc	r31, r29
    2278:	e0 0f       	add	r30, r16
    227a:	f1 1f       	adc	r31, r17
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	87 e7       	ldi	r24, 0x77	; 119
    2282:	91 e0       	ldi	r25, 0x01	; 1
    2284:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    2288:	07 2e       	mov	r0, r23
    228a:	00 0c       	add	r0, r0
    228c:	88 0b       	sbc	r24, r24
    228e:	99 0b       	sbc	r25, r25
    2290:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    2294:	2b 01       	movw	r4, r22
    2296:	3c 01       	movw	r6, r24
			playNote(melody[currentNote],noteDuration);
    2298:	e1 e0       	ldi	r30, 0x01	; 1
    229a:	f0 e0       	ldi	r31, 0x00	; 0
    229c:	ec 0f       	add	r30, r28
    229e:	fd 1f       	adc	r31, r29
    22a0:	e0 0f       	add	r30, r16
    22a2:	f1 1f       	adc	r31, r17
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	07 2e       	mov	r0, r23
    22aa:	00 0c       	add	r0, r0
    22ac:	88 0b       	sbc	r24, r24
    22ae:	99 0b       	sbc	r25, r25
    22b0:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    22b4:	ab 01       	movw	r20, r22
    22b6:	bc 01       	movw	r22, r24
    22b8:	93 01       	movw	r18, r6
    22ba:	82 01       	movw	r16, r4
    22bc:	c6 01       	movw	r24, r12
    22be:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN4Tone8playNoteEff>
			float pauseBetweenNotes= noteDuration*1.30;
    22c2:	26 e6       	ldi	r18, 0x66	; 102
    22c4:	36 e6       	ldi	r19, 0x66	; 102
    22c6:	46 ea       	ldi	r20, 0xA6	; 166
    22c8:	5f e3       	ldi	r21, 0x3F	; 63
    22ca:	c3 01       	movw	r24, r6
    22cc:	b2 01       	movw	r22, r4
    22ce:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    22d2:	4b 01       	movw	r8, r22
    22d4:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	30 e0       	ldi	r19, 0x00	; 0
    22da:	4a e7       	ldi	r20, 0x7A	; 122
    22dc:	53 e4       	ldi	r21, 0x43	; 67
    22de:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    22e2:	2b 01       	movw	r4, r22
    22e4:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    22e6:	20 e0       	ldi	r18, 0x00	; 0
    22e8:	30 e0       	ldi	r19, 0x00	; 0
    22ea:	40 e8       	ldi	r20, 0x80	; 128
    22ec:	5f e3       	ldi	r21, 0x3F	; 63
    22ee:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    22f2:	88 23       	and	r24, r24
    22f4:	1c f1       	brlt	.+70     	; 0x233c <_ZN4Tone7melody2Ev+0x172>
		__ticks = 1;
	else if (__tmp > 65535)
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	3f ef       	ldi	r19, 0xFF	; 255
    22fa:	4f e7       	ldi	r20, 0x7F	; 127
    22fc:	57 e4       	ldi	r21, 0x47	; 71
    22fe:	c3 01       	movw	r24, r6
    2300:	b2 01       	movw	r22, r4
    2302:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    2306:	18 16       	cp	r1, r24
    2308:	a4 f4       	brge	.+40     	; 0x2332 <_ZN4Tone7melody2Ev+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    230a:	20 e0       	ldi	r18, 0x00	; 0
    230c:	30 e0       	ldi	r19, 0x00	; 0
    230e:	40 e2       	ldi	r20, 0x20	; 32
    2310:	51 e4       	ldi	r21, 0x41	; 65
    2312:	c5 01       	movw	r24, r10
    2314:	b4 01       	movw	r22, r8
    2316:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    231a:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    231e:	61 15       	cp	r22, r1
    2320:	71 05       	cpc	r23, r1
    2322:	89 f0       	breq	.+34     	; 0x2346 <_ZN4Tone7melody2Ev+0x17c>
    2324:	89 e1       	ldi	r24, 0x19	; 25
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	01 97       	sbiw	r24, 0x01	; 1
    232a:	f1 f7       	brne	.-4      	; 0x2328 <_ZN4Tone7melody2Ev+0x15e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    232c:	61 50       	subi	r22, 0x01	; 1
    232e:	71 09       	sbc	r23, r1
    2330:	f6 cf       	rjmp	.-20     	; 0x231e <_ZN4Tone7melody2Ev+0x154>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2332:	c3 01       	movw	r24, r6
    2334:	b2 01       	movw	r22, r4
    2336:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    233a:	02 c0       	rjmp	.+4      	; 0x2340 <_ZN4Tone7melody2Ev+0x176>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    233c:	61 e0       	ldi	r22, 0x01	; 1
    233e:	70 e0       	ldi	r23, 0x00	; 0
    2340:	cb 01       	movw	r24, r22
    2342:	01 97       	sbiw	r24, 0x01	; 1
    2344:	f1 f7       	brne	.-4      	; 0x2342 <_ZN4Tone7melody2Ev+0x178>
			_delay_ms (pauseBetweenNotes);
			SPEAKER_PORT=0;
    2346:	15 b8       	out	0x05, r1	; 5
		
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	
	while (changing==0)
	{	
		for (int currentNote=0; currentNote<length;currentNote++)
    2348:	8f ef       	ldi	r24, 0xFF	; 255
    234a:	e8 1a       	sub	r14, r24
    234c:	f8 0a       	sbc	r15, r24
    234e:	7e cf       	rjmp	.-260    	; 0x224c <_ZN4Tone7melody2Ev+0x82>
    2350:	80 ea       	ldi	r24, 0xA0	; 160
    2352:	9f e0       	ldi	r25, 0x0F	; 15
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2354:	00 97       	sbiw	r24, 0x00	; 0
    2356:	31 f0       	breq	.+12     	; 0x2364 <_ZN4Tone7melody2Ev+0x19a>
    2358:	e9 e1       	ldi	r30, 0x19	; 25
    235a:	f0 e0       	ldi	r31, 0x00	; 0
    235c:	31 97       	sbiw	r30, 0x01	; 1
    235e:	f1 f7       	brne	.-4      	; 0x235c <_ZN4Tone7melody2Ev+0x192>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2360:	01 97       	sbiw	r24, 0x01	; 1
    2362:	f8 cf       	rjmp	.-16     	; 0x2354 <_ZN4Tone7melody2Ev+0x18a>
		
		
	}
	_delay_ms(400);
	return state;
}
    2364:	cf 5b       	subi	r28, 0xBF	; 191
    2366:	de 4f       	sbci	r29, 0xFE	; 254
    2368:	88 81       	ld	r24, Y
    236a:	c1 54       	subi	r28, 0x41	; 65
    236c:	d1 40       	sbci	r29, 0x01	; 1
    236e:	cf 5b       	subi	r28, 0xBF	; 191
    2370:	de 4f       	sbci	r29, 0xFE	; 254
    2372:	0f b6       	in	r0, 0x3f	; 63
    2374:	f8 94       	cli
    2376:	de bf       	out	0x3e, r29	; 62
    2378:	0f be       	out	0x3f, r0	; 63
    237a:	cd bf       	out	0x3d, r28	; 61
    237c:	df 91       	pop	r29
    237e:	cf 91       	pop	r28
    2380:	1f 91       	pop	r17
    2382:	0f 91       	pop	r16
    2384:	ff 90       	pop	r15
    2386:	ef 90       	pop	r14
    2388:	df 90       	pop	r13
    238a:	cf 90       	pop	r12
    238c:	bf 90       	pop	r11
    238e:	af 90       	pop	r10
    2390:	9f 90       	pop	r9
    2392:	8f 90       	pop	r8
    2394:	7f 90       	pop	r7
    2396:	6f 90       	pop	r6
    2398:	5f 90       	pop	r5
    239a:	4f 90       	pop	r4
    239c:	3f 90       	pop	r3
    239e:	2f 90       	pop	r2
    23a0:	08 95       	ret

000023a2 <_ZN4Tone7melody3Ev>:

char Tone:: melody3()
{   char state='0';
    23a2:	2f 92       	push	r2
    23a4:	3f 92       	push	r3
    23a6:	4f 92       	push	r4
    23a8:	5f 92       	push	r5
    23aa:	6f 92       	push	r6
    23ac:	7f 92       	push	r7
    23ae:	8f 92       	push	r8
    23b0:	9f 92       	push	r9
    23b2:	af 92       	push	r10
    23b4:	bf 92       	push	r11
    23b6:	cf 92       	push	r12
    23b8:	df 92       	push	r13
    23ba:	ef 92       	push	r14
    23bc:	ff 92       	push	r15
    23be:	0f 93       	push	r16
    23c0:	1f 93       	push	r17
    23c2:	cf 93       	push	r28
    23c4:	df 93       	push	r29
    23c6:	cd b7       	in	r28, 0x3d	; 61
    23c8:	de b7       	in	r29, 0x3e	; 62
    23ca:	c1 59       	subi	r28, 0x91	; 145
    23cc:	d1 09       	sbc	r29, r1
    23ce:	0f b6       	in	r0, 0x3f	; 63
    23d0:	f8 94       	cli
    23d2:	de bf       	out	0x3e, r29	; 62
    23d4:	0f be       	out	0x3f, r0	; 63
    23d6:	cd bf       	out	0x3d, r28	; 61
    23d8:	6c 01       	movw	r12, r24
		NOTE_E5, NOTE_D5, NOTE_E5, NOTE_A4, 0,
		NOTE_A4, NOTE_B4, NOTE_C5, NOTE_C5, 0,
		NOTE_D5, NOTE_E5, NOTE_A4, 0,
		NOTE_A4, NOTE_C5, NOTE_B4, NOTE_B4, 0,
		NOTE_C5, NOTE_A4, NOTE_B4, */
	};
    23da:	88 e4       	ldi	r24, 0x48	; 72
    23dc:	ec e2       	ldi	r30, 0x2C	; 44
    23de:	f3 e0       	ldi	r31, 0x03	; 3
    23e0:	de 01       	movw	r26, r28
    23e2:	11 96       	adiw	r26, 0x01	; 1
    23e4:	01 90       	ld	r0, Z+
    23e6:	0d 92       	st	X+, r0
    23e8:	8a 95       	dec	r24
    23ea:	e1 f7       	brne	.-8      	; 0x23e4 <_ZN4Tone7melody3Ev+0x42>
		8, 8, 8, 4, 8,
		8, 8, 4, 8, 8,
		4, 8, 4, 8,
		8, 8, 4, 8, 8,
		8, 8, 2 */
	};
    23ec:	88 e4       	ldi	r24, 0x48	; 72
    23ee:	e4 e7       	ldi	r30, 0x74	; 116
    23f0:	f3 e0       	ldi	r31, 0x03	; 3
    23f2:	de 01       	movw	r26, r28
    23f4:	a7 5b       	subi	r26, 0xB7	; 183
    23f6:	bf 4f       	sbci	r27, 0xFF	; 255
    23f8:	01 90       	ld	r0, Z+
    23fa:	0d 92       	st	X+, r0
    23fc:	8a 95       	dec	r24
    23fe:	e1 f7       	brne	.-8      	; 0x23f8 <_ZN4Tone7melody3Ev+0x56>
	return state;
}

char Tone:: melody3()
{   char state='0';
	int changing=0;
    2400:	21 2c       	mov	r2, r1
    2402:	31 2c       	mov	r3, r1
	_delay_ms(400);
	return state;
}

char Tone:: melody3()
{   char state='0';
    2404:	80 e3       	ldi	r24, 0x30	; 48
    2406:	cf 56       	subi	r28, 0x6F	; 111
    2408:	df 4f       	sbci	r29, 0xFF	; 255
    240a:	88 83       	st	Y, r24
    240c:	c1 59       	subi	r28, 0x91	; 145
    240e:	d0 40       	sbci	r29, 0x00	; 0
    2410:	03 c0       	rjmp	.+6      	; 0x2418 <_ZN4Tone7melody3Ev+0x76>
	{ 
		for (int currentNote=0; currentNote<length;currentNote++)
		{
			state=sc3.pressedButton();
			if (state !='0'){
				changing=1;
    2412:	22 24       	eor	r2, r2
    2414:	23 94       	inc	r2
    2416:	31 2c       	mov	r3, r1
	};
	
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	

	while (changing==0)
    2418:	21 14       	cp	r2, r1
    241a:	31 04       	cpc	r3, r1
    241c:	09 f0       	breq	.+2      	; 0x2420 <_ZN4Tone7melody3Ev+0x7e>
    241e:	84 c0       	rjmp	.+264    	; 0x2528 <_ZN4Tone7melody3Ev+0x186>
    2420:	e1 2c       	mov	r14, r1
    2422:	f1 2c       	mov	r15, r1
	{ 
		for (int currentNote=0; currentNote<length;currentNote++)
    2424:	84 e2       	ldi	r24, 0x24	; 36
    2426:	e8 16       	cp	r14, r24
    2428:	f1 04       	cpc	r15, r1
    242a:	b4 f7       	brge	.-20     	; 0x2418 <_ZN4Tone7melody3Ev+0x76>
		{
			state=sc3.pressedButton();
    242c:	87 e0       	ldi	r24, 0x07	; 7
    242e:	96 e0       	ldi	r25, 0x06	; 6
    2430:	0e 94 2e 03 	call	0x65c	; 0x65c <_ZN6Screen13pressedButtonEv>
    2434:	cf 56       	subi	r28, 0x6F	; 111
    2436:	df 4f       	sbci	r29, 0xFF	; 255
    2438:	88 83       	st	Y, r24
    243a:	c1 59       	subi	r28, 0x91	; 145
    243c:	d0 40       	sbci	r29, 0x00	; 0
			if (state !='0'){
    243e:	80 33       	cpi	r24, 0x30	; 48
    2440:	41 f7       	brne	.-48     	; 0x2412 <_ZN4Tone7melody3Ev+0x70>
				changing=1;
				break;
			}
			
			float noteDuration = 375 / noteDurations[currentNote];
    2442:	87 01       	movw	r16, r14
    2444:	00 0f       	add	r16, r16
    2446:	11 1f       	adc	r17, r17
    2448:	e9 e4       	ldi	r30, 0x49	; 73
    244a:	f0 e0       	ldi	r31, 0x00	; 0
    244c:	ec 0f       	add	r30, r28
    244e:	fd 1f       	adc	r31, r29
    2450:	e0 0f       	add	r30, r16
    2452:	f1 1f       	adc	r31, r17
    2454:	60 81       	ld	r22, Z
    2456:	71 81       	ldd	r23, Z+1	; 0x01
    2458:	87 e7       	ldi	r24, 0x77	; 119
    245a:	91 e0       	ldi	r25, 0x01	; 1
    245c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    2460:	07 2e       	mov	r0, r23
    2462:	00 0c       	add	r0, r0
    2464:	88 0b       	sbc	r24, r24
    2466:	99 0b       	sbc	r25, r25
    2468:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    246c:	2b 01       	movw	r4, r22
    246e:	3c 01       	movw	r6, r24
			playNote(melody[currentNote],noteDuration);
    2470:	e1 e0       	ldi	r30, 0x01	; 1
    2472:	f0 e0       	ldi	r31, 0x00	; 0
    2474:	ec 0f       	add	r30, r28
    2476:	fd 1f       	adc	r31, r29
    2478:	e0 0f       	add	r30, r16
    247a:	f1 1f       	adc	r31, r17
    247c:	60 81       	ld	r22, Z
    247e:	71 81       	ldd	r23, Z+1	; 0x01
    2480:	07 2e       	mov	r0, r23
    2482:	00 0c       	add	r0, r0
    2484:	88 0b       	sbc	r24, r24
    2486:	99 0b       	sbc	r25, r25
    2488:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    248c:	ab 01       	movw	r20, r22
    248e:	bc 01       	movw	r22, r24
    2490:	93 01       	movw	r18, r6
    2492:	82 01       	movw	r16, r4
    2494:	c6 01       	movw	r24, r12
    2496:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN4Tone8playNoteEff>
			float pauseBetweenNotes= noteDuration*1.30;
    249a:	26 e6       	ldi	r18, 0x66	; 102
    249c:	36 e6       	ldi	r19, 0x66	; 102
    249e:	46 ea       	ldi	r20, 0xA6	; 166
    24a0:	5f e3       	ldi	r21, 0x3F	; 63
    24a2:	c3 01       	movw	r24, r6
    24a4:	b2 01       	movw	r22, r4
    24a6:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    24aa:	4b 01       	movw	r8, r22
    24ac:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	4a e7       	ldi	r20, 0x7A	; 122
    24b4:	53 e4       	ldi	r21, 0x43	; 67
    24b6:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    24ba:	2b 01       	movw	r4, r22
    24bc:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    24be:	20 e0       	ldi	r18, 0x00	; 0
    24c0:	30 e0       	ldi	r19, 0x00	; 0
    24c2:	40 e8       	ldi	r20, 0x80	; 128
    24c4:	5f e3       	ldi	r21, 0x3F	; 63
    24c6:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    24ca:	88 23       	and	r24, r24
    24cc:	1c f1       	brlt	.+70     	; 0x2514 <_ZN4Tone7melody3Ev+0x172>
		__ticks = 1;
	else if (__tmp > 65535)
    24ce:	20 e0       	ldi	r18, 0x00	; 0
    24d0:	3f ef       	ldi	r19, 0xFF	; 255
    24d2:	4f e7       	ldi	r20, 0x7F	; 127
    24d4:	57 e4       	ldi	r21, 0x47	; 71
    24d6:	c3 01       	movw	r24, r6
    24d8:	b2 01       	movw	r22, r4
    24da:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    24de:	18 16       	cp	r1, r24
    24e0:	a4 f4       	brge	.+40     	; 0x250a <_ZN4Tone7melody3Ev+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e2       	ldi	r20, 0x20	; 32
    24e8:	51 e4       	ldi	r21, 0x41	; 65
    24ea:	c5 01       	movw	r24, r10
    24ec:	b4 01       	movw	r22, r8
    24ee:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    24f2:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    24f6:	61 15       	cp	r22, r1
    24f8:	71 05       	cpc	r23, r1
    24fa:	89 f0       	breq	.+34     	; 0x251e <_ZN4Tone7melody3Ev+0x17c>
    24fc:	89 e1       	ldi	r24, 0x19	; 25
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	f1 f7       	brne	.-4      	; 0x2500 <_ZN4Tone7melody3Ev+0x15e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2504:	61 50       	subi	r22, 0x01	; 1
    2506:	71 09       	sbc	r23, r1
    2508:	f6 cf       	rjmp	.-20     	; 0x24f6 <_ZN4Tone7melody3Ev+0x154>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    250a:	c3 01       	movw	r24, r6
    250c:	b2 01       	movw	r22, r4
    250e:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    2512:	02 c0       	rjmp	.+4      	; 0x2518 <_ZN4Tone7melody3Ev+0x176>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    2514:	61 e0       	ldi	r22, 0x01	; 1
    2516:	70 e0       	ldi	r23, 0x00	; 0
    2518:	cb 01       	movw	r24, r22
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	f1 f7       	brne	.-4      	; 0x251a <_ZN4Tone7melody3Ev+0x178>
			_delay_ms (pauseBetweenNotes);
			SPEAKER_PORT=0;
    251e:	15 b8       	out	0x05, r1	; 5
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	

	while (changing==0)
	{ 
		for (int currentNote=0; currentNote<length;currentNote++)
    2520:	8f ef       	ldi	r24, 0xFF	; 255
    2522:	e8 1a       	sub	r14, r24
    2524:	f8 0a       	sbc	r15, r24
    2526:	7e cf       	rjmp	.-260    	; 0x2424 <_ZN4Tone7melody3Ev+0x82>
    2528:	80 ea       	ldi	r24, 0xA0	; 160
    252a:	9f e0       	ldi	r25, 0x0F	; 15
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    252c:	00 97       	sbiw	r24, 0x00	; 0
    252e:	31 f0       	breq	.+12     	; 0x253c <_ZN4Tone7melody3Ev+0x19a>
    2530:	e9 e1       	ldi	r30, 0x19	; 25
    2532:	f0 e0       	ldi	r31, 0x00	; 0
    2534:	31 97       	sbiw	r30, 0x01	; 1
    2536:	f1 f7       	brne	.-4      	; 0x2534 <_ZN4Tone7melody3Ev+0x192>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2538:	01 97       	sbiw	r24, 0x01	; 1
    253a:	f8 cf       	rjmp	.-16     	; 0x252c <_ZN4Tone7melody3Ev+0x18a>
		
	}
	
	_delay_ms(400);
	return state;
}
    253c:	cf 56       	subi	r28, 0x6F	; 111
    253e:	df 4f       	sbci	r29, 0xFF	; 255
    2540:	88 81       	ld	r24, Y
    2542:	c1 59       	subi	r28, 0x91	; 145
    2544:	d0 40       	sbci	r29, 0x00	; 0
    2546:	cf 56       	subi	r28, 0x6F	; 111
    2548:	df 4f       	sbci	r29, 0xFF	; 255
    254a:	0f b6       	in	r0, 0x3f	; 63
    254c:	f8 94       	cli
    254e:	de bf       	out	0x3e, r29	; 62
    2550:	0f be       	out	0x3f, r0	; 63
    2552:	cd bf       	out	0x3d, r28	; 61
    2554:	df 91       	pop	r29
    2556:	cf 91       	pop	r28
    2558:	1f 91       	pop	r17
    255a:	0f 91       	pop	r16
    255c:	ff 90       	pop	r15
    255e:	ef 90       	pop	r14
    2560:	df 90       	pop	r13
    2562:	cf 90       	pop	r12
    2564:	bf 90       	pop	r11
    2566:	af 90       	pop	r10
    2568:	9f 90       	pop	r9
    256a:	8f 90       	pop	r8
    256c:	7f 90       	pop	r7
    256e:	6f 90       	pop	r6
    2570:	5f 90       	pop	r5
    2572:	4f 90       	pop	r4
    2574:	3f 90       	pop	r3
    2576:	2f 90       	pop	r2
    2578:	08 95       	ret

0000257a <_ZN4Tone7melody4Ev>:

char Tone:: melody4()
{   char state='0';
    257a:	2f 92       	push	r2
    257c:	3f 92       	push	r3
    257e:	4f 92       	push	r4
    2580:	5f 92       	push	r5
    2582:	6f 92       	push	r6
    2584:	7f 92       	push	r7
    2586:	8f 92       	push	r8
    2588:	9f 92       	push	r9
    258a:	af 92       	push	r10
    258c:	bf 92       	push	r11
    258e:	cf 92       	push	r12
    2590:	df 92       	push	r13
    2592:	ef 92       	push	r14
    2594:	ff 92       	push	r15
    2596:	0f 93       	push	r16
    2598:	1f 93       	push	r17
    259a:	cf 93       	push	r28
    259c:	df 93       	push	r29
    259e:	cd b7       	in	r28, 0x3d	; 61
    25a0:	de b7       	in	r29, 0x3e	; 62
    25a2:	c5 55       	subi	r28, 0x55	; 85
    25a4:	d1 09       	sbc	r29, r1
    25a6:	0f b6       	in	r0, 0x3f	; 63
    25a8:	f8 94       	cli
    25aa:	de bf       	out	0x3e, r29	; 62
    25ac:	0f be       	out	0x3f, r0	; 63
    25ae:	cd bf       	out	0x3d, r28	; 61
    25b0:	6c 01       	movw	r12, r24
		NOTE_F4,NOTE_AS3,NOTE_DS4,NOTE_D4,
		NOTE_GS3,NOTE_F3,NOTE_GS3,NOTE_G3,
		NOTE_C4,NOTE_F3,NOTE_GS3,NOTE_G3,
		NOTE_GS3,NOTE_F3,NOTE_GS3,NOTE_G3,
		NOTE_C4,NOTE_F3 */
	};
    25b2:	8a e2       	ldi	r24, 0x2A	; 42
    25b4:	ec eb       	ldi	r30, 0xBC	; 188
    25b6:	f3 e0       	ldi	r31, 0x03	; 3
    25b8:	de 01       	movw	r26, r28
    25ba:	11 96       	adiw	r26, 0x01	; 1
    25bc:	01 90       	ld	r0, Z+
    25be:	0d 92       	st	X+, r0
    25c0:	8a 95       	dec	r24
    25c2:	e1 f7       	brne	.-8      	; 0x25bc <_ZN4Tone7melody4Ev+0x42>
		6,24,24,12,
		12,24,24,12,
		12,24,24,12,
		12,24,24,12,
		12*/
	};
    25c4:	8a e2       	ldi	r24, 0x2A	; 42
    25c6:	e6 ee       	ldi	r30, 0xE6	; 230
    25c8:	f3 e0       	ldi	r31, 0x03	; 3
    25ca:	de 01       	movw	r26, r28
    25cc:	9b 96       	adiw	r26, 0x2b	; 43
    25ce:	01 90       	ld	r0, Z+
    25d0:	0d 92       	st	X+, r0
    25d2:	8a 95       	dec	r24
    25d4:	e1 f7       	brne	.-8      	; 0x25ce <_ZN4Tone7melody4Ev+0x54>
	return state;
}

char Tone:: melody4()
{   char state='0';
	int changing=0;
    25d6:	21 2c       	mov	r2, r1
    25d8:	31 2c       	mov	r3, r1
	_delay_ms(400);
	return state;
}

char Tone:: melody4()
{   char state='0';
    25da:	80 e3       	ldi	r24, 0x30	; 48
    25dc:	66 96       	adiw	r28, 0x16	; 22
    25de:	8f af       	std	Y+63, r24	; 0x3f
    25e0:	66 97       	sbiw	r28, 0x16	; 22
    25e2:	03 c0       	rjmp	.+6      	; 0x25ea <_ZN4Tone7melody4Ev+0x70>
		
		for (int currentNote=0; currentNote<length;currentNote++)
		{
			state=sc3.pressedButton();
			if (state !='0'){
				changing=1;
    25e4:	22 24       	eor	r2, r2
    25e6:	23 94       	inc	r2
    25e8:	31 2c       	mov	r3, r1
		12*/
	};
	
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	
	while (changing==0)
    25ea:	21 14       	cp	r2, r1
    25ec:	31 04       	cpc	r3, r1
    25ee:	09 f0       	breq	.+2      	; 0x25f2 <_ZN4Tone7melody4Ev+0x78>
    25f0:	7e c0       	rjmp	.+252    	; 0x26ee <_ZN4Tone7melody4Ev+0x174>
    25f2:	e1 2c       	mov	r14, r1
    25f4:	f1 2c       	mov	r15, r1
	{
		
		for (int currentNote=0; currentNote<length;currentNote++)
    25f6:	95 e1       	ldi	r25, 0x15	; 21
    25f8:	e9 16       	cp	r14, r25
    25fa:	f1 04       	cpc	r15, r1
    25fc:	b4 f7       	brge	.-20     	; 0x25ea <_ZN4Tone7melody4Ev+0x70>
		{
			state=sc3.pressedButton();
    25fe:	87 e0       	ldi	r24, 0x07	; 7
    2600:	96 e0       	ldi	r25, 0x06	; 6
    2602:	0e 94 2e 03 	call	0x65c	; 0x65c <_ZN6Screen13pressedButtonEv>
    2606:	66 96       	adiw	r28, 0x16	; 22
    2608:	8f af       	std	Y+63, r24	; 0x3f
    260a:	66 97       	sbiw	r28, 0x16	; 22
			if (state !='0'){
    260c:	80 33       	cpi	r24, 0x30	; 48
    260e:	51 f7       	brne	.-44     	; 0x25e4 <_ZN4Tone7melody4Ev+0x6a>
				changing=1;
				break;
			}
			
			float noteDuration = 1375 / noteDurations[currentNote];
    2610:	87 01       	movw	r16, r14
    2612:	00 0f       	add	r16, r16
    2614:	11 1f       	adc	r17, r17
    2616:	e1 e0       	ldi	r30, 0x01	; 1
    2618:	f0 e0       	ldi	r31, 0x00	; 0
    261a:	ec 0f       	add	r30, r28
    261c:	fd 1f       	adc	r31, r29
    261e:	0e 0f       	add	r16, r30
    2620:	1f 1f       	adc	r17, r31
    2622:	f8 01       	movw	r30, r16
    2624:	62 a5       	ldd	r22, Z+42	; 0x2a
    2626:	73 a5       	ldd	r23, Z+43	; 0x2b
    2628:	8f e5       	ldi	r24, 0x5F	; 95
    262a:	95 e0       	ldi	r25, 0x05	; 5
    262c:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    2630:	07 2e       	mov	r0, r23
    2632:	00 0c       	add	r0, r0
    2634:	88 0b       	sbc	r24, r24
    2636:	99 0b       	sbc	r25, r25
    2638:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    263c:	2b 01       	movw	r4, r22
    263e:	3c 01       	movw	r6, r24
			playNote(melody[currentNote],noteDuration);
    2640:	f8 01       	movw	r30, r16
    2642:	60 81       	ld	r22, Z
    2644:	71 81       	ldd	r23, Z+1	; 0x01
    2646:	07 2e       	mov	r0, r23
    2648:	00 0c       	add	r0, r0
    264a:	88 0b       	sbc	r24, r24
    264c:	99 0b       	sbc	r25, r25
    264e:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    2652:	ab 01       	movw	r20, r22
    2654:	bc 01       	movw	r22, r24
    2656:	93 01       	movw	r18, r6
    2658:	82 01       	movw	r16, r4
    265a:	c6 01       	movw	r24, r12
    265c:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN4Tone8playNoteEff>
			float pauseBetweenNotes= noteDuration*1.30;
    2660:	26 e6       	ldi	r18, 0x66	; 102
    2662:	36 e6       	ldi	r19, 0x66	; 102
    2664:	46 ea       	ldi	r20, 0xA6	; 166
    2666:	5f e3       	ldi	r21, 0x3F	; 63
    2668:	c3 01       	movw	r24, r6
    266a:	b2 01       	movw	r22, r4
    266c:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    2670:	4b 01       	movw	r8, r22
    2672:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2674:	20 e0       	ldi	r18, 0x00	; 0
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	4a e7       	ldi	r20, 0x7A	; 122
    267a:	53 e4       	ldi	r21, 0x43	; 67
    267c:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    2680:	2b 01       	movw	r4, r22
    2682:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	40 e8       	ldi	r20, 0x80	; 128
    268a:	5f e3       	ldi	r21, 0x3F	; 63
    268c:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    2690:	88 23       	and	r24, r24
    2692:	1c f1       	brlt	.+70     	; 0x26da <_ZN4Tone7melody4Ev+0x160>
		__ticks = 1;
	else if (__tmp > 65535)
    2694:	20 e0       	ldi	r18, 0x00	; 0
    2696:	3f ef       	ldi	r19, 0xFF	; 255
    2698:	4f e7       	ldi	r20, 0x7F	; 127
    269a:	57 e4       	ldi	r21, 0x47	; 71
    269c:	c3 01       	movw	r24, r6
    269e:	b2 01       	movw	r22, r4
    26a0:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    26a4:	18 16       	cp	r1, r24
    26a6:	a4 f4       	brge	.+40     	; 0x26d0 <_ZN4Tone7melody4Ev+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	40 e2       	ldi	r20, 0x20	; 32
    26ae:	51 e4       	ldi	r21, 0x41	; 65
    26b0:	c5 01       	movw	r24, r10
    26b2:	b4 01       	movw	r22, r8
    26b4:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    26b8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    26bc:	61 15       	cp	r22, r1
    26be:	71 05       	cpc	r23, r1
    26c0:	89 f0       	breq	.+34     	; 0x26e4 <_ZN4Tone7melody4Ev+0x16a>
    26c2:	89 e1       	ldi	r24, 0x19	; 25
    26c4:	90 e0       	ldi	r25, 0x00	; 0
    26c6:	01 97       	sbiw	r24, 0x01	; 1
    26c8:	f1 f7       	brne	.-4      	; 0x26c6 <_ZN4Tone7melody4Ev+0x14c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ca:	61 50       	subi	r22, 0x01	; 1
    26cc:	71 09       	sbc	r23, r1
    26ce:	f6 cf       	rjmp	.-20     	; 0x26bc <_ZN4Tone7melody4Ev+0x142>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26d0:	c3 01       	movw	r24, r6
    26d2:	b2 01       	movw	r22, r4
    26d4:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    26d8:	02 c0       	rjmp	.+4      	; 0x26de <_ZN4Tone7melody4Ev+0x164>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    26da:	61 e0       	ldi	r22, 0x01	; 1
    26dc:	70 e0       	ldi	r23, 0x00	; 0
    26de:	cb 01       	movw	r24, r22
    26e0:	01 97       	sbiw	r24, 0x01	; 1
    26e2:	f1 f7       	brne	.-4      	; 0x26e0 <_ZN4Tone7melody4Ev+0x166>
			_delay_ms (pauseBetweenNotes);
			SPEAKER_PORT=0;
    26e4:	15 b8       	out	0x05, r1	; 5
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);
	
	while (changing==0)
	{
		
		for (int currentNote=0; currentNote<length;currentNote++)
    26e6:	ff ef       	ldi	r31, 0xFF	; 255
    26e8:	ef 1a       	sub	r14, r31
    26ea:	ff 0a       	sbc	r15, r31
    26ec:	84 cf       	rjmp	.-248    	; 0x25f6 <_ZN4Tone7melody4Ev+0x7c>
		}
		
	}
	
	return state;
}
    26ee:	66 96       	adiw	r28, 0x16	; 22
    26f0:	8f ad       	ldd	r24, Y+63	; 0x3f
    26f2:	66 97       	sbiw	r28, 0x16	; 22
    26f4:	cb 5a       	subi	r28, 0xAB	; 171
    26f6:	df 4f       	sbci	r29, 0xFF	; 255
    26f8:	0f b6       	in	r0, 0x3f	; 63
    26fa:	f8 94       	cli
    26fc:	de bf       	out	0x3e, r29	; 62
    26fe:	0f be       	out	0x3f, r0	; 63
    2700:	cd bf       	out	0x3d, r28	; 61
    2702:	df 91       	pop	r29
    2704:	cf 91       	pop	r28
    2706:	1f 91       	pop	r17
    2708:	0f 91       	pop	r16
    270a:	ff 90       	pop	r15
    270c:	ef 90       	pop	r14
    270e:	df 90       	pop	r13
    2710:	cf 90       	pop	r12
    2712:	bf 90       	pop	r11
    2714:	af 90       	pop	r10
    2716:	9f 90       	pop	r9
    2718:	8f 90       	pop	r8
    271a:	7f 90       	pop	r7
    271c:	6f 90       	pop	r6
    271e:	5f 90       	pop	r5
    2720:	4f 90       	pop	r4
    2722:	3f 90       	pop	r3
    2724:	2f 90       	pop	r2
    2726:	08 95       	ret

00002728 <_ZN4Tone7melody5Ev>:


char Tone:: melody5()
{  char state='0';
    2728:	2f 92       	push	r2
    272a:	3f 92       	push	r3
    272c:	4f 92       	push	r4
    272e:	5f 92       	push	r5
    2730:	6f 92       	push	r6
    2732:	7f 92       	push	r7
    2734:	8f 92       	push	r8
    2736:	9f 92       	push	r9
    2738:	af 92       	push	r10
    273a:	bf 92       	push	r11
    273c:	cf 92       	push	r12
    273e:	df 92       	push	r13
    2740:	ef 92       	push	r14
    2742:	ff 92       	push	r15
    2744:	0f 93       	push	r16
    2746:	1f 93       	push	r17
    2748:	cf 93       	push	r28
    274a:	df 93       	push	r29
    274c:	cd b7       	in	r28, 0x3d	; 61
    274e:	de b7       	in	r29, 0x3e	; 62
    2750:	c9 57       	subi	r28, 0x79	; 121
    2752:	d1 09       	sbc	r29, r1
    2754:	0f b6       	in	r0, 0x3f	; 63
    2756:	f8 94       	cli
    2758:	de bf       	out	0x3e, r29	; 62
    275a:	0f be       	out	0x3f, r0	; 63
    275c:	cd bf       	out	0x3d, r28	; 61
    275e:	6c 01       	movw	r12, r24
		0,NOTE_C5,NOTE_D5,NOTE_DS5,
		NOTE_DS5,NOTE_F5,NOTE_D5,NOTE_D5,
		NOTE_DS5,NOTE_C5,NOTE_C5,NOTE_D5,
		NOTE_B4,NOTE_GS4,NOTE_G4,NOTE_C5 */
		
	};
    2760:	8c e3       	ldi	r24, 0x3C	; 60
    2762:	e0 e1       	ldi	r30, 0x10	; 16
    2764:	f4 e0       	ldi	r31, 0x04	; 4
    2766:	de 01       	movw	r26, r28
    2768:	11 96       	adiw	r26, 0x01	; 1
    276a:	01 90       	ld	r0, Z+
    276c:	0d 92       	st	X+, r0
    276e:	8a 95       	dec	r24
    2770:	e1 f7       	brne	.-8      	; 0x276a <_ZN4Tone7melody5Ev+0x42>
		12,12,6,6,
		12,24,24,12,
		24,24,12,24,
		24,12,24,24,
		12,24,24,3*/
	};
    2772:	8c e3       	ldi	r24, 0x3C	; 60
    2774:	ec e4       	ldi	r30, 0x4C	; 76
    2776:	f4 e0       	ldi	r31, 0x04	; 4
    2778:	de 01       	movw	r26, r28
    277a:	dd 96       	adiw	r26, 0x3d	; 61
    277c:	01 90       	ld	r0, Z+
    277e:	0d 92       	st	X+, r0
    2780:	8a 95       	dec	r24
    2782:	e1 f7       	brne	.-8      	; 0x277c <_ZN4Tone7melody5Ev+0x54>
}


char Tone:: melody5()
{  char state='0';
	int changing=0;
    2784:	21 2c       	mov	r2, r1
    2786:	31 2c       	mov	r3, r1
	return state;
}


char Tone:: melody5()
{  char state='0';
    2788:	80 e3       	ldi	r24, 0x30	; 48
    278a:	ea 96       	adiw	r28, 0x3a	; 58
    278c:	8f af       	std	Y+63, r24	; 0x3f
    278e:	ea 97       	sbiw	r28, 0x3a	; 58
    2790:	03 c0       	rjmp	.+6      	; 0x2798 <_ZN4Tone7melody5Ev+0x70>
	{
			for (int currentNote=0; currentNote<length;currentNote++)
			{
				state=sc3.pressedButton();
				if (state !='0'){
					changing=1;
    2792:	22 24       	eor	r2, r2
    2794:	23 94       	inc	r2
    2796:	31 2c       	mov	r3, r1
		12,24,24,3*/
	};
	
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);

	while (changing==0)
    2798:	21 14       	cp	r2, r1
    279a:	31 04       	cpc	r3, r1
    279c:	09 f0       	breq	.+2      	; 0x27a0 <_ZN4Tone7melody5Ev+0x78>
    279e:	7e c0       	rjmp	.+252    	; 0x289c <_ZN4Tone7melody5Ev+0x174>
    27a0:	e1 2c       	mov	r14, r1
    27a2:	f1 2c       	mov	r15, r1
	{
			for (int currentNote=0; currentNote<length;currentNote++)
    27a4:	9e e1       	ldi	r25, 0x1E	; 30
    27a6:	e9 16       	cp	r14, r25
    27a8:	f1 04       	cpc	r15, r1
    27aa:	b4 f7       	brge	.-20     	; 0x2798 <_ZN4Tone7melody5Ev+0x70>
			{
				state=sc3.pressedButton();
    27ac:	87 e0       	ldi	r24, 0x07	; 7
    27ae:	96 e0       	ldi	r25, 0x06	; 6
    27b0:	0e 94 2e 03 	call	0x65c	; 0x65c <_ZN6Screen13pressedButtonEv>
    27b4:	ea 96       	adiw	r28, 0x3a	; 58
    27b6:	8f af       	std	Y+63, r24	; 0x3f
    27b8:	ea 97       	sbiw	r28, 0x3a	; 58
				if (state !='0'){
    27ba:	80 33       	cpi	r24, 0x30	; 48
    27bc:	51 f7       	brne	.-44     	; 0x2792 <_ZN4Tone7melody5Ev+0x6a>
					changing=1;
					break;
				}
				
				float noteDuration = 375*3 / noteDurations[currentNote];
    27be:	87 01       	movw	r16, r14
    27c0:	00 0f       	add	r16, r16
    27c2:	11 1f       	adc	r17, r17
    27c4:	e1 e0       	ldi	r30, 0x01	; 1
    27c6:	f0 e0       	ldi	r31, 0x00	; 0
    27c8:	ec 0f       	add	r30, r28
    27ca:	fd 1f       	adc	r31, r29
    27cc:	0e 0f       	add	r16, r30
    27ce:	1f 1f       	adc	r17, r31
    27d0:	f8 01       	movw	r30, r16
    27d2:	64 ad       	ldd	r22, Z+60	; 0x3c
    27d4:	75 ad       	ldd	r23, Z+61	; 0x3d
    27d6:	85 e6       	ldi	r24, 0x65	; 101
    27d8:	94 e0       	ldi	r25, 0x04	; 4
    27da:	0e 94 d6 16 	call	0x2dac	; 0x2dac <__divmodhi4>
    27de:	07 2e       	mov	r0, r23
    27e0:	00 0c       	add	r0, r0
    27e2:	88 0b       	sbc	r24, r24
    27e4:	99 0b       	sbc	r25, r25
    27e6:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    27ea:	2b 01       	movw	r4, r22
    27ec:	3c 01       	movw	r6, r24
				playNote(melody[currentNote],noteDuration);
    27ee:	f8 01       	movw	r30, r16
    27f0:	60 81       	ld	r22, Z
    27f2:	71 81       	ldd	r23, Z+1	; 0x01
    27f4:	07 2e       	mov	r0, r23
    27f6:	00 0c       	add	r0, r0
    27f8:	88 0b       	sbc	r24, r24
    27fa:	99 0b       	sbc	r25, r25
    27fc:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__floatsisf>
    2800:	ab 01       	movw	r20, r22
    2802:	bc 01       	movw	r22, r24
    2804:	93 01       	movw	r18, r6
    2806:	82 01       	movw	r16, r4
    2808:	c6 01       	movw	r24, r12
    280a:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN4Tone8playNoteEff>
				float pauseBetweenNotes= noteDuration*1.30;
    280e:	26 e6       	ldi	r18, 0x66	; 102
    2810:	36 e6       	ldi	r19, 0x66	; 102
    2812:	46 ea       	ldi	r20, 0xA6	; 166
    2814:	5f e3       	ldi	r21, 0x3F	; 63
    2816:	c3 01       	movw	r24, r6
    2818:	b2 01       	movw	r22, r4
    281a:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    281e:	4b 01       	movw	r8, r22
    2820:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2822:	20 e0       	ldi	r18, 0x00	; 0
    2824:	30 e0       	ldi	r19, 0x00	; 0
    2826:	4a e7       	ldi	r20, 0x7A	; 122
    2828:	53 e4       	ldi	r21, 0x43	; 67
    282a:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    282e:	2b 01       	movw	r4, r22
    2830:	3c 01       	movw	r6, r24
	if (__tmp < 1.0)
    2832:	20 e0       	ldi	r18, 0x00	; 0
    2834:	30 e0       	ldi	r19, 0x00	; 0
    2836:	40 e8       	ldi	r20, 0x80	; 128
    2838:	5f e3       	ldi	r21, 0x3F	; 63
    283a:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <__cmpsf2>
    283e:	88 23       	and	r24, r24
    2840:	1c f1       	brlt	.+70     	; 0x2888 <_ZN4Tone7melody5Ev+0x160>
		__ticks = 1;
	else if (__tmp > 65535)
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	3f ef       	ldi	r19, 0xFF	; 255
    2846:	4f e7       	ldi	r20, 0x7F	; 127
    2848:	57 e4       	ldi	r21, 0x47	; 71
    284a:	c3 01       	movw	r24, r6
    284c:	b2 01       	movw	r22, r4
    284e:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__gesf2>
    2852:	18 16       	cp	r1, r24
    2854:	a4 f4       	brge	.+40     	; 0x287e <_ZN4Tone7melody5Ev+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2856:	20 e0       	ldi	r18, 0x00	; 0
    2858:	30 e0       	ldi	r19, 0x00	; 0
    285a:	40 e2       	ldi	r20, 0x20	; 32
    285c:	51 e4       	ldi	r21, 0x41	; 65
    285e:	c5 01       	movw	r24, r10
    2860:	b4 01       	movw	r22, r8
    2862:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__mulsf3>
    2866:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
		while(__ticks)
    286a:	61 15       	cp	r22, r1
    286c:	71 05       	cpc	r23, r1
    286e:	89 f0       	breq	.+34     	; 0x2892 <_ZN4Tone7melody5Ev+0x16a>
    2870:	89 e1       	ldi	r24, 0x19	; 25
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	01 97       	sbiw	r24, 0x01	; 1
    2876:	f1 f7       	brne	.-4      	; 0x2874 <_ZN4Tone7melody5Ev+0x14c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2878:	61 50       	subi	r22, 0x01	; 1
    287a:	71 09       	sbc	r23, r1
    287c:	f6 cf       	rjmp	.-20     	; 0x286a <_ZN4Tone7melody5Ev+0x142>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    287e:	c3 01       	movw	r24, r6
    2880:	b2 01       	movw	r22, r4
    2882:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    2886:	02 c0       	rjmp	.+4      	; 0x288c <_ZN4Tone7melody5Ev+0x164>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    2888:	61 e0       	ldi	r22, 0x01	; 1
    288a:	70 e0       	ldi	r23, 0x00	; 0
    288c:	cb 01       	movw	r24, r22
    288e:	01 97       	sbiw	r24, 0x01	; 1
    2890:	f1 f7       	brne	.-4      	; 0x288e <_ZN4Tone7melody5Ev+0x166>
				_delay_ms (pauseBetweenNotes);
				SPEAKER_PORT=0;
    2892:	15 b8       	out	0x05, r1	; 5
	
	int length = sizeof(noteDurations)/sizeof(noteDurations[0]);

	while (changing==0)
	{
			for (int currentNote=0; currentNote<length;currentNote++)
    2894:	ff ef       	ldi	r31, 0xFF	; 255
    2896:	ef 1a       	sub	r14, r31
    2898:	ff 0a       	sbc	r15, r31
    289a:	84 cf       	rjmp	.-248    	; 0x27a4 <_ZN4Tone7melody5Ev+0x7c>
    289c:	80 ea       	ldi	r24, 0xA0	; 160
    289e:	9f e0       	ldi	r25, 0x0F	; 15
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28a0:	00 97       	sbiw	r24, 0x00	; 0
    28a2:	31 f0       	breq	.+12     	; 0x28b0 <_ZN4Tone7melody5Ev+0x188>
    28a4:	e9 e1       	ldi	r30, 0x19	; 25
    28a6:	f0 e0       	ldi	r31, 0x00	; 0
    28a8:	31 97       	sbiw	r30, 0x01	; 1
    28aa:	f1 f7       	brne	.-4      	; 0x28a8 <_ZN4Tone7melody5Ev+0x180>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ac:	01 97       	sbiw	r24, 0x01	; 1
    28ae:	f8 cf       	rjmp	.-16     	; 0x28a0 <_ZN4Tone7melody5Ev+0x178>
			
		
	}
	_delay_ms(400);
	return state;
}
    28b0:	ea 96       	adiw	r28, 0x3a	; 58
    28b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    28b4:	ea 97       	sbiw	r28, 0x3a	; 58
    28b6:	c7 58       	subi	r28, 0x87	; 135
    28b8:	df 4f       	sbci	r29, 0xFF	; 255
    28ba:	0f b6       	in	r0, 0x3f	; 63
    28bc:	f8 94       	cli
    28be:	de bf       	out	0x3e, r29	; 62
    28c0:	0f be       	out	0x3f, r0	; 63
    28c2:	cd bf       	out	0x3d, r28	; 61
    28c4:	df 91       	pop	r29
    28c6:	cf 91       	pop	r28
    28c8:	1f 91       	pop	r17
    28ca:	0f 91       	pop	r16
    28cc:	ff 90       	pop	r15
    28ce:	ef 90       	pop	r14
    28d0:	df 90       	pop	r13
    28d2:	cf 90       	pop	r12
    28d4:	bf 90       	pop	r11
    28d6:	af 90       	pop	r10
    28d8:	9f 90       	pop	r9
    28da:	8f 90       	pop	r8
    28dc:	7f 90       	pop	r7
    28de:	6f 90       	pop	r6
    28e0:	5f 90       	pop	r5
    28e2:	4f 90       	pop	r4
    28e4:	3f 90       	pop	r3
    28e6:	2f 90       	pop	r2
    28e8:	08 95       	ret

000028ea <_ZN4Tone10playMelodyEi>:

char Tone:: playMelody(int number){
char _btn ='0';
	switch (number) {
    28ea:	62 30       	cpi	r22, 0x02	; 2
    28ec:	71 05       	cpc	r23, r1
    28ee:	a9 f0       	breq	.+42     	; 0x291a <_ZN4Tone10playMelodyEi+0x30>
    28f0:	3c f4       	brge	.+14     	; 0x2900 <_ZN4Tone10playMelodyEi+0x16>
    28f2:	61 15       	cp	r22, r1
    28f4:	71 05       	cpc	r23, r1
    28f6:	59 f0       	breq	.+22     	; 0x290e <_ZN4Tone10playMelodyEi+0x24>
    28f8:	61 30       	cpi	r22, 0x01	; 1
    28fa:	71 05       	cpc	r23, r1
    28fc:	59 f0       	breq	.+22     	; 0x2914 <_ZN4Tone10playMelodyEi+0x2a>
    28fe:	16 c0       	rjmp	.+44     	; 0x292c <_ZN4Tone10playMelodyEi+0x42>
    2900:	63 30       	cpi	r22, 0x03	; 3
    2902:	71 05       	cpc	r23, r1
    2904:	69 f0       	breq	.+26     	; 0x2920 <_ZN4Tone10playMelodyEi+0x36>
    2906:	64 30       	cpi	r22, 0x04	; 4
    2908:	71 05       	cpc	r23, r1
    290a:	69 f0       	breq	.+26     	; 0x2926 <_ZN4Tone10playMelodyEi+0x3c>
    290c:	0f c0       	rjmp	.+30     	; 0x292c <_ZN4Tone10playMelodyEi+0x42>
		case 0:
		_btn = melody1();
    290e:	0e 94 0e 10 	call	0x201c	; 0x201c <_ZN4Tone7melody1Ev>
		break;
    2912:	08 95       	ret
		case 1:
		_btn = melody2();
    2914:	0e 94 e5 10 	call	0x21ca	; 0x21ca <_ZN4Tone7melody2Ev>
		break;
    2918:	08 95       	ret
		case 2:
		_btn = melody3();
    291a:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <_ZN4Tone7melody3Ev>
		break;
    291e:	08 95       	ret
		case 3:
		_btn = melody4();
    2920:	0e 94 bd 12 	call	0x257a	; 0x257a <_ZN4Tone7melody4Ev>
		break;
    2924:	08 95       	ret
		case 4:
		_btn = melody5();
    2926:	0e 94 94 13 	call	0x2728	; 0x2728 <_ZN4Tone7melody5Ev>
		break;
    292a:	08 95       	ret
	_delay_ms(400);
	return state;
}

char Tone:: playMelody(int number){
char _btn ='0';
    292c:	80 e3       	ldi	r24, 0x30	; 48
		case 4:
		_btn = melody5();
		break;
	}
	return _btn;
    292e:	08 95       	ret

00002930 <__subsf3>:
    2930:	50 58       	subi	r21, 0x80	; 128

00002932 <__addsf3>:
    2932:	bb 27       	eor	r27, r27
    2934:	aa 27       	eor	r26, r26
    2936:	0e 94 b0 14 	call	0x2960	; 0x2960 <__addsf3x>
    293a:	0c 94 2a 16 	jmp	0x2c54	; 0x2c54 <__fp_round>
    293e:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__fp_pscA>
    2942:	38 f0       	brcs	.+14     	; 0x2952 <__addsf3+0x20>
    2944:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__fp_pscB>
    2948:	20 f0       	brcs	.+8      	; 0x2952 <__addsf3+0x20>
    294a:	39 f4       	brne	.+14     	; 0x295a <__addsf3+0x28>
    294c:	9f 3f       	cpi	r25, 0xFF	; 255
    294e:	19 f4       	brne	.+6      	; 0x2956 <__addsf3+0x24>
    2950:	26 f4       	brtc	.+8      	; 0x295a <__addsf3+0x28>
    2952:	0c 94 19 16 	jmp	0x2c32	; 0x2c32 <__fp_nan>
    2956:	0e f4       	brtc	.+2      	; 0x295a <__addsf3+0x28>
    2958:	e0 95       	com	r30
    295a:	e7 fb       	bst	r30, 7
    295c:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__fp_inf>

00002960 <__addsf3x>:
    2960:	e9 2f       	mov	r30, r25
    2962:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__fp_split3>
    2966:	58 f3       	brcs	.-42     	; 0x293e <__addsf3+0xc>
    2968:	ba 17       	cp	r27, r26
    296a:	62 07       	cpc	r22, r18
    296c:	73 07       	cpc	r23, r19
    296e:	84 07       	cpc	r24, r20
    2970:	95 07       	cpc	r25, r21
    2972:	20 f0       	brcs	.+8      	; 0x297c <__addsf3x+0x1c>
    2974:	79 f4       	brne	.+30     	; 0x2994 <__addsf3x+0x34>
    2976:	a6 f5       	brtc	.+104    	; 0x29e0 <__addsf3x+0x80>
    2978:	0c 94 5d 16 	jmp	0x2cba	; 0x2cba <__fp_zero>
    297c:	0e f4       	brtc	.+2      	; 0x2980 <__addsf3x+0x20>
    297e:	e0 95       	com	r30
    2980:	0b 2e       	mov	r0, r27
    2982:	ba 2f       	mov	r27, r26
    2984:	a0 2d       	mov	r26, r0
    2986:	0b 01       	movw	r0, r22
    2988:	b9 01       	movw	r22, r18
    298a:	90 01       	movw	r18, r0
    298c:	0c 01       	movw	r0, r24
    298e:	ca 01       	movw	r24, r20
    2990:	a0 01       	movw	r20, r0
    2992:	11 24       	eor	r1, r1
    2994:	ff 27       	eor	r31, r31
    2996:	59 1b       	sub	r21, r25
    2998:	99 f0       	breq	.+38     	; 0x29c0 <__addsf3x+0x60>
    299a:	59 3f       	cpi	r21, 0xF9	; 249
    299c:	50 f4       	brcc	.+20     	; 0x29b2 <__addsf3x+0x52>
    299e:	50 3e       	cpi	r21, 0xE0	; 224
    29a0:	68 f1       	brcs	.+90     	; 0x29fc <__addsf3x+0x9c>
    29a2:	1a 16       	cp	r1, r26
    29a4:	f0 40       	sbci	r31, 0x00	; 0
    29a6:	a2 2f       	mov	r26, r18
    29a8:	23 2f       	mov	r18, r19
    29aa:	34 2f       	mov	r19, r20
    29ac:	44 27       	eor	r20, r20
    29ae:	58 5f       	subi	r21, 0xF8	; 248
    29b0:	f3 cf       	rjmp	.-26     	; 0x2998 <__addsf3x+0x38>
    29b2:	46 95       	lsr	r20
    29b4:	37 95       	ror	r19
    29b6:	27 95       	ror	r18
    29b8:	a7 95       	ror	r26
    29ba:	f0 40       	sbci	r31, 0x00	; 0
    29bc:	53 95       	inc	r21
    29be:	c9 f7       	brne	.-14     	; 0x29b2 <__addsf3x+0x52>
    29c0:	7e f4       	brtc	.+30     	; 0x29e0 <__addsf3x+0x80>
    29c2:	1f 16       	cp	r1, r31
    29c4:	ba 0b       	sbc	r27, r26
    29c6:	62 0b       	sbc	r22, r18
    29c8:	73 0b       	sbc	r23, r19
    29ca:	84 0b       	sbc	r24, r20
    29cc:	ba f0       	brmi	.+46     	; 0x29fc <__addsf3x+0x9c>
    29ce:	91 50       	subi	r25, 0x01	; 1
    29d0:	a1 f0       	breq	.+40     	; 0x29fa <__addsf3x+0x9a>
    29d2:	ff 0f       	add	r31, r31
    29d4:	bb 1f       	adc	r27, r27
    29d6:	66 1f       	adc	r22, r22
    29d8:	77 1f       	adc	r23, r23
    29da:	88 1f       	adc	r24, r24
    29dc:	c2 f7       	brpl	.-16     	; 0x29ce <__addsf3x+0x6e>
    29de:	0e c0       	rjmp	.+28     	; 0x29fc <__addsf3x+0x9c>
    29e0:	ba 0f       	add	r27, r26
    29e2:	62 1f       	adc	r22, r18
    29e4:	73 1f       	adc	r23, r19
    29e6:	84 1f       	adc	r24, r20
    29e8:	48 f4       	brcc	.+18     	; 0x29fc <__addsf3x+0x9c>
    29ea:	87 95       	ror	r24
    29ec:	77 95       	ror	r23
    29ee:	67 95       	ror	r22
    29f0:	b7 95       	ror	r27
    29f2:	f7 95       	ror	r31
    29f4:	9e 3f       	cpi	r25, 0xFE	; 254
    29f6:	08 f0       	brcs	.+2      	; 0x29fa <__addsf3x+0x9a>
    29f8:	b0 cf       	rjmp	.-160    	; 0x295a <__addsf3+0x28>
    29fa:	93 95       	inc	r25
    29fc:	88 0f       	add	r24, r24
    29fe:	08 f0       	brcs	.+2      	; 0x2a02 <__addsf3x+0xa2>
    2a00:	99 27       	eor	r25, r25
    2a02:	ee 0f       	add	r30, r30
    2a04:	97 95       	ror	r25
    2a06:	87 95       	ror	r24
    2a08:	08 95       	ret

00002a0a <__cmpsf2>:
    2a0a:	0e 94 ef 15 	call	0x2bde	; 0x2bde <__fp_cmp>
    2a0e:	08 f4       	brcc	.+2      	; 0x2a12 <__cmpsf2+0x8>
    2a10:	81 e0       	ldi	r24, 0x01	; 1
    2a12:	08 95       	ret

00002a14 <__divsf3>:
    2a14:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <__divsf3x>
    2a18:	0c 94 2a 16 	jmp	0x2c54	; 0x2c54 <__fp_round>
    2a1c:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__fp_pscB>
    2a20:	58 f0       	brcs	.+22     	; 0x2a38 <__divsf3+0x24>
    2a22:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__fp_pscA>
    2a26:	40 f0       	brcs	.+16     	; 0x2a38 <__divsf3+0x24>
    2a28:	29 f4       	brne	.+10     	; 0x2a34 <__divsf3+0x20>
    2a2a:	5f 3f       	cpi	r21, 0xFF	; 255
    2a2c:	29 f0       	breq	.+10     	; 0x2a38 <__divsf3+0x24>
    2a2e:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__fp_inf>
    2a32:	51 11       	cpse	r21, r1
    2a34:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <__fp_szero>
    2a38:	0c 94 19 16 	jmp	0x2c32	; 0x2c32 <__fp_nan>

00002a3c <__divsf3x>:
    2a3c:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__fp_split3>
    2a40:	68 f3       	brcs	.-38     	; 0x2a1c <__divsf3+0x8>

00002a42 <__divsf3_pse>:
    2a42:	99 23       	and	r25, r25
    2a44:	b1 f3       	breq	.-20     	; 0x2a32 <__divsf3+0x1e>
    2a46:	55 23       	and	r21, r21
    2a48:	91 f3       	breq	.-28     	; 0x2a2e <__divsf3+0x1a>
    2a4a:	95 1b       	sub	r25, r21
    2a4c:	55 0b       	sbc	r21, r21
    2a4e:	bb 27       	eor	r27, r27
    2a50:	aa 27       	eor	r26, r26
    2a52:	62 17       	cp	r22, r18
    2a54:	73 07       	cpc	r23, r19
    2a56:	84 07       	cpc	r24, r20
    2a58:	38 f0       	brcs	.+14     	; 0x2a68 <__divsf3_pse+0x26>
    2a5a:	9f 5f       	subi	r25, 0xFF	; 255
    2a5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a5e:	22 0f       	add	r18, r18
    2a60:	33 1f       	adc	r19, r19
    2a62:	44 1f       	adc	r20, r20
    2a64:	aa 1f       	adc	r26, r26
    2a66:	a9 f3       	breq	.-22     	; 0x2a52 <__divsf3_pse+0x10>
    2a68:	35 d0       	rcall	.+106    	; 0x2ad4 <__divsf3_pse+0x92>
    2a6a:	0e 2e       	mov	r0, r30
    2a6c:	3a f0       	brmi	.+14     	; 0x2a7c <__divsf3_pse+0x3a>
    2a6e:	e0 e8       	ldi	r30, 0x80	; 128
    2a70:	32 d0       	rcall	.+100    	; 0x2ad6 <__divsf3_pse+0x94>
    2a72:	91 50       	subi	r25, 0x01	; 1
    2a74:	50 40       	sbci	r21, 0x00	; 0
    2a76:	e6 95       	lsr	r30
    2a78:	00 1c       	adc	r0, r0
    2a7a:	ca f7       	brpl	.-14     	; 0x2a6e <__divsf3_pse+0x2c>
    2a7c:	2b d0       	rcall	.+86     	; 0x2ad4 <__divsf3_pse+0x92>
    2a7e:	fe 2f       	mov	r31, r30
    2a80:	29 d0       	rcall	.+82     	; 0x2ad4 <__divsf3_pse+0x92>
    2a82:	66 0f       	add	r22, r22
    2a84:	77 1f       	adc	r23, r23
    2a86:	88 1f       	adc	r24, r24
    2a88:	bb 1f       	adc	r27, r27
    2a8a:	26 17       	cp	r18, r22
    2a8c:	37 07       	cpc	r19, r23
    2a8e:	48 07       	cpc	r20, r24
    2a90:	ab 07       	cpc	r26, r27
    2a92:	b0 e8       	ldi	r27, 0x80	; 128
    2a94:	09 f0       	breq	.+2      	; 0x2a98 <__divsf3_pse+0x56>
    2a96:	bb 0b       	sbc	r27, r27
    2a98:	80 2d       	mov	r24, r0
    2a9a:	bf 01       	movw	r22, r30
    2a9c:	ff 27       	eor	r31, r31
    2a9e:	93 58       	subi	r25, 0x83	; 131
    2aa0:	5f 4f       	sbci	r21, 0xFF	; 255
    2aa2:	3a f0       	brmi	.+14     	; 0x2ab2 <__divsf3_pse+0x70>
    2aa4:	9e 3f       	cpi	r25, 0xFE	; 254
    2aa6:	51 05       	cpc	r21, r1
    2aa8:	78 f0       	brcs	.+30     	; 0x2ac8 <__divsf3_pse+0x86>
    2aaa:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__fp_inf>
    2aae:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <__fp_szero>
    2ab2:	5f 3f       	cpi	r21, 0xFF	; 255
    2ab4:	e4 f3       	brlt	.-8      	; 0x2aae <__divsf3_pse+0x6c>
    2ab6:	98 3e       	cpi	r25, 0xE8	; 232
    2ab8:	d4 f3       	brlt	.-12     	; 0x2aae <__divsf3_pse+0x6c>
    2aba:	86 95       	lsr	r24
    2abc:	77 95       	ror	r23
    2abe:	67 95       	ror	r22
    2ac0:	b7 95       	ror	r27
    2ac2:	f7 95       	ror	r31
    2ac4:	9f 5f       	subi	r25, 0xFF	; 255
    2ac6:	c9 f7       	brne	.-14     	; 0x2aba <__divsf3_pse+0x78>
    2ac8:	88 0f       	add	r24, r24
    2aca:	91 1d       	adc	r25, r1
    2acc:	96 95       	lsr	r25
    2ace:	87 95       	ror	r24
    2ad0:	97 f9       	bld	r25, 7
    2ad2:	08 95       	ret
    2ad4:	e1 e0       	ldi	r30, 0x01	; 1
    2ad6:	66 0f       	add	r22, r22
    2ad8:	77 1f       	adc	r23, r23
    2ada:	88 1f       	adc	r24, r24
    2adc:	bb 1f       	adc	r27, r27
    2ade:	62 17       	cp	r22, r18
    2ae0:	73 07       	cpc	r23, r19
    2ae2:	84 07       	cpc	r24, r20
    2ae4:	ba 07       	cpc	r27, r26
    2ae6:	20 f0       	brcs	.+8      	; 0x2af0 <__divsf3_pse+0xae>
    2ae8:	62 1b       	sub	r22, r18
    2aea:	73 0b       	sbc	r23, r19
    2aec:	84 0b       	sbc	r24, r20
    2aee:	ba 0b       	sbc	r27, r26
    2af0:	ee 1f       	adc	r30, r30
    2af2:	88 f7       	brcc	.-30     	; 0x2ad6 <__divsf3_pse+0x94>
    2af4:	e0 95       	com	r30
    2af6:	08 95       	ret

00002af8 <__fixsfsi>:
    2af8:	0e 94 83 15 	call	0x2b06	; 0x2b06 <__fixunssfsi>
    2afc:	68 94       	set
    2afe:	b1 11       	cpse	r27, r1
    2b00:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <__fp_szero>
    2b04:	08 95       	ret

00002b06 <__fixunssfsi>:
    2b06:	0e 94 43 16 	call	0x2c86	; 0x2c86 <__fp_splitA>
    2b0a:	88 f0       	brcs	.+34     	; 0x2b2e <__fixunssfsi+0x28>
    2b0c:	9f 57       	subi	r25, 0x7F	; 127
    2b0e:	98 f0       	brcs	.+38     	; 0x2b36 <__fixunssfsi+0x30>
    2b10:	b9 2f       	mov	r27, r25
    2b12:	99 27       	eor	r25, r25
    2b14:	b7 51       	subi	r27, 0x17	; 23
    2b16:	b0 f0       	brcs	.+44     	; 0x2b44 <__fixunssfsi+0x3e>
    2b18:	e1 f0       	breq	.+56     	; 0x2b52 <__fixunssfsi+0x4c>
    2b1a:	66 0f       	add	r22, r22
    2b1c:	77 1f       	adc	r23, r23
    2b1e:	88 1f       	adc	r24, r24
    2b20:	99 1f       	adc	r25, r25
    2b22:	1a f0       	brmi	.+6      	; 0x2b2a <__fixunssfsi+0x24>
    2b24:	ba 95       	dec	r27
    2b26:	c9 f7       	brne	.-14     	; 0x2b1a <__fixunssfsi+0x14>
    2b28:	14 c0       	rjmp	.+40     	; 0x2b52 <__fixunssfsi+0x4c>
    2b2a:	b1 30       	cpi	r27, 0x01	; 1
    2b2c:	91 f0       	breq	.+36     	; 0x2b52 <__fixunssfsi+0x4c>
    2b2e:	0e 94 5d 16 	call	0x2cba	; 0x2cba <__fp_zero>
    2b32:	b1 e0       	ldi	r27, 0x01	; 1
    2b34:	08 95       	ret
    2b36:	0c 94 5d 16 	jmp	0x2cba	; 0x2cba <__fp_zero>
    2b3a:	67 2f       	mov	r22, r23
    2b3c:	78 2f       	mov	r23, r24
    2b3e:	88 27       	eor	r24, r24
    2b40:	b8 5f       	subi	r27, 0xF8	; 248
    2b42:	39 f0       	breq	.+14     	; 0x2b52 <__fixunssfsi+0x4c>
    2b44:	b9 3f       	cpi	r27, 0xF9	; 249
    2b46:	cc f3       	brlt	.-14     	; 0x2b3a <__fixunssfsi+0x34>
    2b48:	86 95       	lsr	r24
    2b4a:	77 95       	ror	r23
    2b4c:	67 95       	ror	r22
    2b4e:	b3 95       	inc	r27
    2b50:	d9 f7       	brne	.-10     	; 0x2b48 <__fixunssfsi+0x42>
    2b52:	3e f4       	brtc	.+14     	; 0x2b62 <__fixunssfsi+0x5c>
    2b54:	90 95       	com	r25
    2b56:	80 95       	com	r24
    2b58:	70 95       	com	r23
    2b5a:	61 95       	neg	r22
    2b5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b5e:	8f 4f       	sbci	r24, 0xFF	; 255
    2b60:	9f 4f       	sbci	r25, 0xFF	; 255
    2b62:	08 95       	ret

00002b64 <__floatunsisf>:
    2b64:	e8 94       	clt
    2b66:	09 c0       	rjmp	.+18     	; 0x2b7a <__floatsisf+0x12>

00002b68 <__floatsisf>:
    2b68:	97 fb       	bst	r25, 7
    2b6a:	3e f4       	brtc	.+14     	; 0x2b7a <__floatsisf+0x12>
    2b6c:	90 95       	com	r25
    2b6e:	80 95       	com	r24
    2b70:	70 95       	com	r23
    2b72:	61 95       	neg	r22
    2b74:	7f 4f       	sbci	r23, 0xFF	; 255
    2b76:	8f 4f       	sbci	r24, 0xFF	; 255
    2b78:	9f 4f       	sbci	r25, 0xFF	; 255
    2b7a:	99 23       	and	r25, r25
    2b7c:	a9 f0       	breq	.+42     	; 0x2ba8 <__floatsisf+0x40>
    2b7e:	f9 2f       	mov	r31, r25
    2b80:	96 e9       	ldi	r25, 0x96	; 150
    2b82:	bb 27       	eor	r27, r27
    2b84:	93 95       	inc	r25
    2b86:	f6 95       	lsr	r31
    2b88:	87 95       	ror	r24
    2b8a:	77 95       	ror	r23
    2b8c:	67 95       	ror	r22
    2b8e:	b7 95       	ror	r27
    2b90:	f1 11       	cpse	r31, r1
    2b92:	f8 cf       	rjmp	.-16     	; 0x2b84 <__floatsisf+0x1c>
    2b94:	fa f4       	brpl	.+62     	; 0x2bd4 <__floatsisf+0x6c>
    2b96:	bb 0f       	add	r27, r27
    2b98:	11 f4       	brne	.+4      	; 0x2b9e <__floatsisf+0x36>
    2b9a:	60 ff       	sbrs	r22, 0
    2b9c:	1b c0       	rjmp	.+54     	; 0x2bd4 <__floatsisf+0x6c>
    2b9e:	6f 5f       	subi	r22, 0xFF	; 255
    2ba0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba2:	8f 4f       	sbci	r24, 0xFF	; 255
    2ba4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ba6:	16 c0       	rjmp	.+44     	; 0x2bd4 <__floatsisf+0x6c>
    2ba8:	88 23       	and	r24, r24
    2baa:	11 f0       	breq	.+4      	; 0x2bb0 <__floatsisf+0x48>
    2bac:	96 e9       	ldi	r25, 0x96	; 150
    2bae:	11 c0       	rjmp	.+34     	; 0x2bd2 <__floatsisf+0x6a>
    2bb0:	77 23       	and	r23, r23
    2bb2:	21 f0       	breq	.+8      	; 0x2bbc <__floatsisf+0x54>
    2bb4:	9e e8       	ldi	r25, 0x8E	; 142
    2bb6:	87 2f       	mov	r24, r23
    2bb8:	76 2f       	mov	r23, r22
    2bba:	05 c0       	rjmp	.+10     	; 0x2bc6 <__floatsisf+0x5e>
    2bbc:	66 23       	and	r22, r22
    2bbe:	71 f0       	breq	.+28     	; 0x2bdc <__floatsisf+0x74>
    2bc0:	96 e8       	ldi	r25, 0x86	; 134
    2bc2:	86 2f       	mov	r24, r22
    2bc4:	70 e0       	ldi	r23, 0x00	; 0
    2bc6:	60 e0       	ldi	r22, 0x00	; 0
    2bc8:	2a f0       	brmi	.+10     	; 0x2bd4 <__floatsisf+0x6c>
    2bca:	9a 95       	dec	r25
    2bcc:	66 0f       	add	r22, r22
    2bce:	77 1f       	adc	r23, r23
    2bd0:	88 1f       	adc	r24, r24
    2bd2:	da f7       	brpl	.-10     	; 0x2bca <__floatsisf+0x62>
    2bd4:	88 0f       	add	r24, r24
    2bd6:	96 95       	lsr	r25
    2bd8:	87 95       	ror	r24
    2bda:	97 f9       	bld	r25, 7
    2bdc:	08 95       	ret

00002bde <__fp_cmp>:
    2bde:	99 0f       	add	r25, r25
    2be0:	00 08       	sbc	r0, r0
    2be2:	55 0f       	add	r21, r21
    2be4:	aa 0b       	sbc	r26, r26
    2be6:	e0 e8       	ldi	r30, 0x80	; 128
    2be8:	fe ef       	ldi	r31, 0xFE	; 254
    2bea:	16 16       	cp	r1, r22
    2bec:	17 06       	cpc	r1, r23
    2bee:	e8 07       	cpc	r30, r24
    2bf0:	f9 07       	cpc	r31, r25
    2bf2:	c0 f0       	brcs	.+48     	; 0x2c24 <__fp_cmp+0x46>
    2bf4:	12 16       	cp	r1, r18
    2bf6:	13 06       	cpc	r1, r19
    2bf8:	e4 07       	cpc	r30, r20
    2bfa:	f5 07       	cpc	r31, r21
    2bfc:	98 f0       	brcs	.+38     	; 0x2c24 <__fp_cmp+0x46>
    2bfe:	62 1b       	sub	r22, r18
    2c00:	73 0b       	sbc	r23, r19
    2c02:	84 0b       	sbc	r24, r20
    2c04:	95 0b       	sbc	r25, r21
    2c06:	39 f4       	brne	.+14     	; 0x2c16 <__fp_cmp+0x38>
    2c08:	0a 26       	eor	r0, r26
    2c0a:	61 f0       	breq	.+24     	; 0x2c24 <__fp_cmp+0x46>
    2c0c:	23 2b       	or	r18, r19
    2c0e:	24 2b       	or	r18, r20
    2c10:	25 2b       	or	r18, r21
    2c12:	21 f4       	brne	.+8      	; 0x2c1c <__fp_cmp+0x3e>
    2c14:	08 95       	ret
    2c16:	0a 26       	eor	r0, r26
    2c18:	09 f4       	brne	.+2      	; 0x2c1c <__fp_cmp+0x3e>
    2c1a:	a1 40       	sbci	r26, 0x01	; 1
    2c1c:	a6 95       	lsr	r26
    2c1e:	8f ef       	ldi	r24, 0xFF	; 255
    2c20:	81 1d       	adc	r24, r1
    2c22:	81 1d       	adc	r24, r1
    2c24:	08 95       	ret

00002c26 <__fp_inf>:
    2c26:	97 f9       	bld	r25, 7
    2c28:	9f 67       	ori	r25, 0x7F	; 127
    2c2a:	80 e8       	ldi	r24, 0x80	; 128
    2c2c:	70 e0       	ldi	r23, 0x00	; 0
    2c2e:	60 e0       	ldi	r22, 0x00	; 0
    2c30:	08 95       	ret

00002c32 <__fp_nan>:
    2c32:	9f ef       	ldi	r25, 0xFF	; 255
    2c34:	80 ec       	ldi	r24, 0xC0	; 192
    2c36:	08 95       	ret

00002c38 <__fp_pscA>:
    2c38:	00 24       	eor	r0, r0
    2c3a:	0a 94       	dec	r0
    2c3c:	16 16       	cp	r1, r22
    2c3e:	17 06       	cpc	r1, r23
    2c40:	18 06       	cpc	r1, r24
    2c42:	09 06       	cpc	r0, r25
    2c44:	08 95       	ret

00002c46 <__fp_pscB>:
    2c46:	00 24       	eor	r0, r0
    2c48:	0a 94       	dec	r0
    2c4a:	12 16       	cp	r1, r18
    2c4c:	13 06       	cpc	r1, r19
    2c4e:	14 06       	cpc	r1, r20
    2c50:	05 06       	cpc	r0, r21
    2c52:	08 95       	ret

00002c54 <__fp_round>:
    2c54:	09 2e       	mov	r0, r25
    2c56:	03 94       	inc	r0
    2c58:	00 0c       	add	r0, r0
    2c5a:	11 f4       	brne	.+4      	; 0x2c60 <__fp_round+0xc>
    2c5c:	88 23       	and	r24, r24
    2c5e:	52 f0       	brmi	.+20     	; 0x2c74 <__fp_round+0x20>
    2c60:	bb 0f       	add	r27, r27
    2c62:	40 f4       	brcc	.+16     	; 0x2c74 <__fp_round+0x20>
    2c64:	bf 2b       	or	r27, r31
    2c66:	11 f4       	brne	.+4      	; 0x2c6c <__fp_round+0x18>
    2c68:	60 ff       	sbrs	r22, 0
    2c6a:	04 c0       	rjmp	.+8      	; 0x2c74 <__fp_round+0x20>
    2c6c:	6f 5f       	subi	r22, 0xFF	; 255
    2c6e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c70:	8f 4f       	sbci	r24, 0xFF	; 255
    2c72:	9f 4f       	sbci	r25, 0xFF	; 255
    2c74:	08 95       	ret

00002c76 <__fp_split3>:
    2c76:	57 fd       	sbrc	r21, 7
    2c78:	90 58       	subi	r25, 0x80	; 128
    2c7a:	44 0f       	add	r20, r20
    2c7c:	55 1f       	adc	r21, r21
    2c7e:	59 f0       	breq	.+22     	; 0x2c96 <__fp_splitA+0x10>
    2c80:	5f 3f       	cpi	r21, 0xFF	; 255
    2c82:	71 f0       	breq	.+28     	; 0x2ca0 <__fp_splitA+0x1a>
    2c84:	47 95       	ror	r20

00002c86 <__fp_splitA>:
    2c86:	88 0f       	add	r24, r24
    2c88:	97 fb       	bst	r25, 7
    2c8a:	99 1f       	adc	r25, r25
    2c8c:	61 f0       	breq	.+24     	; 0x2ca6 <__fp_splitA+0x20>
    2c8e:	9f 3f       	cpi	r25, 0xFF	; 255
    2c90:	79 f0       	breq	.+30     	; 0x2cb0 <__fp_splitA+0x2a>
    2c92:	87 95       	ror	r24
    2c94:	08 95       	ret
    2c96:	12 16       	cp	r1, r18
    2c98:	13 06       	cpc	r1, r19
    2c9a:	14 06       	cpc	r1, r20
    2c9c:	55 1f       	adc	r21, r21
    2c9e:	f2 cf       	rjmp	.-28     	; 0x2c84 <__fp_split3+0xe>
    2ca0:	46 95       	lsr	r20
    2ca2:	f1 df       	rcall	.-30     	; 0x2c86 <__fp_splitA>
    2ca4:	08 c0       	rjmp	.+16     	; 0x2cb6 <__fp_splitA+0x30>
    2ca6:	16 16       	cp	r1, r22
    2ca8:	17 06       	cpc	r1, r23
    2caa:	18 06       	cpc	r1, r24
    2cac:	99 1f       	adc	r25, r25
    2cae:	f1 cf       	rjmp	.-30     	; 0x2c92 <__fp_splitA+0xc>
    2cb0:	86 95       	lsr	r24
    2cb2:	71 05       	cpc	r23, r1
    2cb4:	61 05       	cpc	r22, r1
    2cb6:	08 94       	sec
    2cb8:	08 95       	ret

00002cba <__fp_zero>:
    2cba:	e8 94       	clt

00002cbc <__fp_szero>:
    2cbc:	bb 27       	eor	r27, r27
    2cbe:	66 27       	eor	r22, r22
    2cc0:	77 27       	eor	r23, r23
    2cc2:	cb 01       	movw	r24, r22
    2cc4:	97 f9       	bld	r25, 7
    2cc6:	08 95       	ret

00002cc8 <__gesf2>:
    2cc8:	0e 94 ef 15 	call	0x2bde	; 0x2bde <__fp_cmp>
    2ccc:	08 f4       	brcc	.+2      	; 0x2cd0 <__gesf2+0x8>
    2cce:	8f ef       	ldi	r24, 0xFF	; 255
    2cd0:	08 95       	ret

00002cd2 <__mulsf3>:
    2cd2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <__mulsf3x>
    2cd6:	0c 94 2a 16 	jmp	0x2c54	; 0x2c54 <__fp_round>
    2cda:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__fp_pscA>
    2cde:	38 f0       	brcs	.+14     	; 0x2cee <__mulsf3+0x1c>
    2ce0:	0e 94 23 16 	call	0x2c46	; 0x2c46 <__fp_pscB>
    2ce4:	20 f0       	brcs	.+8      	; 0x2cee <__mulsf3+0x1c>
    2ce6:	95 23       	and	r25, r21
    2ce8:	11 f0       	breq	.+4      	; 0x2cee <__mulsf3+0x1c>
    2cea:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__fp_inf>
    2cee:	0c 94 19 16 	jmp	0x2c32	; 0x2c32 <__fp_nan>
    2cf2:	11 24       	eor	r1, r1
    2cf4:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <__fp_szero>

00002cf8 <__mulsf3x>:
    2cf8:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__fp_split3>
    2cfc:	70 f3       	brcs	.-36     	; 0x2cda <__mulsf3+0x8>

00002cfe <__mulsf3_pse>:
    2cfe:	95 9f       	mul	r25, r21
    2d00:	c1 f3       	breq	.-16     	; 0x2cf2 <__mulsf3+0x20>
    2d02:	95 0f       	add	r25, r21
    2d04:	50 e0       	ldi	r21, 0x00	; 0
    2d06:	55 1f       	adc	r21, r21
    2d08:	62 9f       	mul	r22, r18
    2d0a:	f0 01       	movw	r30, r0
    2d0c:	72 9f       	mul	r23, r18
    2d0e:	bb 27       	eor	r27, r27
    2d10:	f0 0d       	add	r31, r0
    2d12:	b1 1d       	adc	r27, r1
    2d14:	63 9f       	mul	r22, r19
    2d16:	aa 27       	eor	r26, r26
    2d18:	f0 0d       	add	r31, r0
    2d1a:	b1 1d       	adc	r27, r1
    2d1c:	aa 1f       	adc	r26, r26
    2d1e:	64 9f       	mul	r22, r20
    2d20:	66 27       	eor	r22, r22
    2d22:	b0 0d       	add	r27, r0
    2d24:	a1 1d       	adc	r26, r1
    2d26:	66 1f       	adc	r22, r22
    2d28:	82 9f       	mul	r24, r18
    2d2a:	22 27       	eor	r18, r18
    2d2c:	b0 0d       	add	r27, r0
    2d2e:	a1 1d       	adc	r26, r1
    2d30:	62 1f       	adc	r22, r18
    2d32:	73 9f       	mul	r23, r19
    2d34:	b0 0d       	add	r27, r0
    2d36:	a1 1d       	adc	r26, r1
    2d38:	62 1f       	adc	r22, r18
    2d3a:	83 9f       	mul	r24, r19
    2d3c:	a0 0d       	add	r26, r0
    2d3e:	61 1d       	adc	r22, r1
    2d40:	22 1f       	adc	r18, r18
    2d42:	74 9f       	mul	r23, r20
    2d44:	33 27       	eor	r19, r19
    2d46:	a0 0d       	add	r26, r0
    2d48:	61 1d       	adc	r22, r1
    2d4a:	23 1f       	adc	r18, r19
    2d4c:	84 9f       	mul	r24, r20
    2d4e:	60 0d       	add	r22, r0
    2d50:	21 1d       	adc	r18, r1
    2d52:	82 2f       	mov	r24, r18
    2d54:	76 2f       	mov	r23, r22
    2d56:	6a 2f       	mov	r22, r26
    2d58:	11 24       	eor	r1, r1
    2d5a:	9f 57       	subi	r25, 0x7F	; 127
    2d5c:	50 40       	sbci	r21, 0x00	; 0
    2d5e:	9a f0       	brmi	.+38     	; 0x2d86 <__mulsf3_pse+0x88>
    2d60:	f1 f0       	breq	.+60     	; 0x2d9e <__mulsf3_pse+0xa0>
    2d62:	88 23       	and	r24, r24
    2d64:	4a f0       	brmi	.+18     	; 0x2d78 <__mulsf3_pse+0x7a>
    2d66:	ee 0f       	add	r30, r30
    2d68:	ff 1f       	adc	r31, r31
    2d6a:	bb 1f       	adc	r27, r27
    2d6c:	66 1f       	adc	r22, r22
    2d6e:	77 1f       	adc	r23, r23
    2d70:	88 1f       	adc	r24, r24
    2d72:	91 50       	subi	r25, 0x01	; 1
    2d74:	50 40       	sbci	r21, 0x00	; 0
    2d76:	a9 f7       	brne	.-22     	; 0x2d62 <__mulsf3_pse+0x64>
    2d78:	9e 3f       	cpi	r25, 0xFE	; 254
    2d7a:	51 05       	cpc	r21, r1
    2d7c:	80 f0       	brcs	.+32     	; 0x2d9e <__mulsf3_pse+0xa0>
    2d7e:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__fp_inf>
    2d82:	0c 94 5e 16 	jmp	0x2cbc	; 0x2cbc <__fp_szero>
    2d86:	5f 3f       	cpi	r21, 0xFF	; 255
    2d88:	e4 f3       	brlt	.-8      	; 0x2d82 <__mulsf3_pse+0x84>
    2d8a:	98 3e       	cpi	r25, 0xE8	; 232
    2d8c:	d4 f3       	brlt	.-12     	; 0x2d82 <__mulsf3_pse+0x84>
    2d8e:	86 95       	lsr	r24
    2d90:	77 95       	ror	r23
    2d92:	67 95       	ror	r22
    2d94:	b7 95       	ror	r27
    2d96:	f7 95       	ror	r31
    2d98:	e7 95       	ror	r30
    2d9a:	9f 5f       	subi	r25, 0xFF	; 255
    2d9c:	c1 f7       	brne	.-16     	; 0x2d8e <__mulsf3_pse+0x90>
    2d9e:	fe 2b       	or	r31, r30
    2da0:	88 0f       	add	r24, r24
    2da2:	91 1d       	adc	r25, r1
    2da4:	96 95       	lsr	r25
    2da6:	87 95       	ror	r24
    2da8:	97 f9       	bld	r25, 7
    2daa:	08 95       	ret

00002dac <__divmodhi4>:
    2dac:	97 fb       	bst	r25, 7
    2dae:	07 2e       	mov	r0, r23
    2db0:	16 f4       	brtc	.+4      	; 0x2db6 <__divmodhi4+0xa>
    2db2:	00 94       	com	r0
    2db4:	07 d0       	rcall	.+14     	; 0x2dc4 <__divmodhi4_neg1>
    2db6:	77 fd       	sbrc	r23, 7
    2db8:	09 d0       	rcall	.+18     	; 0x2dcc <__divmodhi4_neg2>
    2dba:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <__udivmodhi4>
    2dbe:	07 fc       	sbrc	r0, 7
    2dc0:	05 d0       	rcall	.+10     	; 0x2dcc <__divmodhi4_neg2>
    2dc2:	3e f4       	brtc	.+14     	; 0x2dd2 <__divmodhi4_exit>

00002dc4 <__divmodhi4_neg1>:
    2dc4:	90 95       	com	r25
    2dc6:	81 95       	neg	r24
    2dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dca:	08 95       	ret

00002dcc <__divmodhi4_neg2>:
    2dcc:	70 95       	com	r23
    2dce:	61 95       	neg	r22
    2dd0:	7f 4f       	sbci	r23, 0xFF	; 255

00002dd2 <__divmodhi4_exit>:
    2dd2:	08 95       	ret

00002dd4 <__udivmodhi4>:
    2dd4:	aa 1b       	sub	r26, r26
    2dd6:	bb 1b       	sub	r27, r27
    2dd8:	51 e1       	ldi	r21, 0x11	; 17
    2dda:	07 c0       	rjmp	.+14     	; 0x2dea <__udivmodhi4_ep>

00002ddc <__udivmodhi4_loop>:
    2ddc:	aa 1f       	adc	r26, r26
    2dde:	bb 1f       	adc	r27, r27
    2de0:	a6 17       	cp	r26, r22
    2de2:	b7 07       	cpc	r27, r23
    2de4:	10 f0       	brcs	.+4      	; 0x2dea <__udivmodhi4_ep>
    2de6:	a6 1b       	sub	r26, r22
    2de8:	b7 0b       	sbc	r27, r23

00002dea <__udivmodhi4_ep>:
    2dea:	88 1f       	adc	r24, r24
    2dec:	99 1f       	adc	r25, r25
    2dee:	5a 95       	dec	r21
    2df0:	a9 f7       	brne	.-22     	; 0x2ddc <__udivmodhi4_loop>
    2df2:	80 95       	com	r24
    2df4:	90 95       	com	r25
    2df6:	bc 01       	movw	r22, r24
    2df8:	cd 01       	movw	r24, r26
    2dfa:	08 95       	ret

00002dfc <__tablejump2__>:
    2dfc:	ee 0f       	add	r30, r30
    2dfe:	ff 1f       	adc	r31, r31
    2e00:	05 90       	lpm	r0, Z+
    2e02:	f4 91       	lpm	r31, Z
    2e04:	e0 2d       	mov	r30, r0
    2e06:	09 94       	ijmp

00002e08 <_exit>:
    2e08:	f8 94       	cli

00002e0a <__stop_program>:
    2e0a:	ff cf       	rjmp	.-2      	; 0x2e0a <__stop_program>
