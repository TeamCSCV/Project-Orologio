
Screen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  00000b50  00000be4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080017c  0080017c  00000c60  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c60  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026f1  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000090f  00000000  00000000  000034a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b48  00000000  00000000  00003db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  000048f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ab  00000000  00000000  00004b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012f0  00000000  00000000  00005207  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000064f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e5       	ldi	r30, 0x50	; 80
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 37       	cpi	r26, 0x7C	; 124
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e7       	ldi	r26, 0x7C	; 124
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 38       	cpi	r26, 0x8C	; 140
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#define ButtonDir DDRB
Screen scrn;                 

int main(void)
{
	ButtonDir = 0;
  a6:	14 b8       	out	0x04, r1	; 4
    scrn.LCD_Init();         //initialize the LCD Display
  a8:	8c e7       	ldi	r24, 0x7C	; 124
  aa:	91 e0       	ldi	r25, 0x01	; 1
  ac:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_ZN6Screen8LCD_InitEv>
	scrn.Time();            //at the beginning the time will be shown
  b0:	8c e7       	ldi	r24, 0x7C	; 124
  b2:	91 e0       	ldi	r25, 0x01	; 1
  b4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZN6Screen4TimeEv>
	
	//in the following loop the program will always be looking for an input from buttons
	while (1)      
    {
		if (PINB == 1<<0){
  b8:	83 b1       	in	r24, 0x03	; 3
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	29 f4       	brne	.+10     	; 0xc8 <main+0x22>
			scrn.Select();      //call Select function when user press the select button
  be:	8c e7       	ldi	r24, 0x7C	; 124
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN6Screen6SelectEv>
  c6:	f8 cf       	rjmp	.-16     	; 0xb8 <main+0x12>
		}
		else if (PINB == 1<<1){
  c8:	83 b1       	in	r24, 0x03	; 3
  ca:	82 30       	cpi	r24, 0x02	; 2
  cc:	29 f4       	brne	.+10     	; 0xd8 <main+0x32>
			scrn.Left();       //call Left function when user press the Left button
  ce:	8c e7       	ldi	r24, 0x7C	; 124
  d0:	91 e0       	ldi	r25, 0x01	; 1
  d2:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_ZN6Screen4LeftEv>
  d6:	f0 cf       	rjmp	.-32     	; 0xb8 <main+0x12>
		}
		else if (PINB == 1<<2){
  d8:	83 b1       	in	r24, 0x03	; 3
  da:	84 30       	cpi	r24, 0x04	; 4
  dc:	29 f4       	brne	.+10     	; 0xe8 <main+0x42>
			scrn.Down();       //call Down function when user press the Down button
  de:	8c e7       	ldi	r24, 0x7C	; 124
  e0:	91 e0       	ldi	r25, 0x01	; 1
  e2:	0e 94 2c 04 	call	0x858	; 0x858 <_ZN6Screen4DownEv>
  e6:	e8 cf       	rjmp	.-48     	; 0xb8 <main+0x12>
		}
		else if (PINB == 1<<3){
  e8:	83 b1       	in	r24, 0x03	; 3
  ea:	88 30       	cpi	r24, 0x08	; 8
  ec:	29 f4       	brne	.+10     	; 0xf8 <main+0x52>
			scrn.Up();         //call Up function when user press the Up button
  ee:	8c e7       	ldi	r24, 0x7C	; 124
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	0e 94 18 03 	call	0x630	; 0x630 <_ZN6Screen2UpEv>
  f6:	e0 cf       	rjmp	.-64     	; 0xb8 <main+0x12>
		}
		else if (PINB == 1<<4){
  f8:	83 b1       	in	r24, 0x03	; 3
  fa:	80 31       	cpi	r24, 0x10	; 16
  fc:	29 f4       	brne	.+10     	; 0x108 <main+0x62>
			scrn.Right();     //call Right function when user press the Right button
  fe:	8c e7       	ldi	r24, 0x7C	; 124
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	0e 94 95 01 	call	0x32a	; 0x32a <_ZN6Screen5RightEv>
 106:	d8 cf       	rjmp	.-80     	; 0xb8 <main+0x12>
		}
		else if (PINB == 1<<5){
 108:	83 b1       	in	r24, 0x03	; 3
 10a:	80 32       	cpi	r24, 0x20	; 32
 10c:	a9 f6       	brne	.-86     	; 0xb8 <main+0x12>
			scrn.Back();     //call Back function when user press the Back button
 10e:	8c e7       	ldi	r24, 0x7C	; 124
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN6Screen4BackEv>
 116:	d0 cf       	rjmp	.-96     	; 0xb8 <main+0x12>

00000118 <_ZN6Screen11LCD_CommandEh>:
int _a=0 , _b=0 , _c=0 , _d=0;   //assume that the Time is in ab:cd format

//this command is use to send a command to the LCD as an unsigned char
void Screen::LCD_Command(unsigned char cmnd)      
{
	LCD_Port = (LCD_Port & 0x0F) | (cmnd & 0xF0);
 118:	8b b1       	in	r24, 0x0b	; 11
 11a:	8f 70       	andi	r24, 0x0F	; 15
 11c:	96 2f       	mov	r25, r22
 11e:	90 7f       	andi	r25, 0xF0	; 240
 120:	89 2b       	or	r24, r25
 122:	8b b9       	out	0x0b, r24	; 11
	LCD_Port &= ~ (1<<RS);
 124:	8b b1       	in	r24, 0x0b	; 11
 126:	8e 7f       	andi	r24, 0xFE	; 254
 128:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<EN);
 12a:	8b b1       	in	r24, 0x0b	; 11
 12c:	82 60       	ori	r24, 0x02	; 2
 12e:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 130:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 132:	8b b1       	in	r24, 0x0b	; 11
 134:	8d 7f       	andi	r24, 0xFD	; 253
 136:	8b b9       	out	0x0b, r24	; 11
 138:	82 e4       	ldi	r24, 0x42	; 66
 13a:	8a 95       	dec	r24
 13c:	f1 f7       	brne	.-4      	; 0x13a <_ZN6Screen11LCD_CommandEh+0x22>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_ZN6Screen11LCD_CommandEh+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);
 140:	8b b1       	in	r24, 0x0b	; 11
 142:	90 e1       	ldi	r25, 0x10	; 16
 144:	69 9f       	mul	r22, r25
 146:	b0 01       	movw	r22, r0
 148:	11 24       	eor	r1, r1
 14a:	8f 70       	andi	r24, 0x0F	; 15
 14c:	68 2b       	or	r22, r24
 14e:	6b b9       	out	0x0b, r22	; 11
	LCD_Port |= (1<<EN);
 150:	8b b1       	in	r24, 0x0b	; 11
 152:	82 60       	ori	r24, 0x02	; 2
 154:	8b b9       	out	0x0b, r24	; 11
 156:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 158:	8b b1       	in	r24, 0x0b	; 11
 15a:	8d 7f       	andi	r24, 0xFD	; 253
 15c:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	83 ef       	ldi	r24, 0xF3	; 243
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <_ZN6Screen11LCD_CommandEh+0x4a>
 166:	00 c0       	rjmp	.+0      	; 0x168 <_ZN6Screen11LCD_CommandEh+0x50>
 168:	00 00       	nop
 16a:	08 95       	ret

0000016c <_ZN6Screen8LCD_CharEh>:
	_delay_ms(2);
}

void Screen::LCD_Char(unsigned char data)
{
	LCD_Port = (LCD_Port & 0x0F) | (data & 0xF0);
 16c:	8b b1       	in	r24, 0x0b	; 11
 16e:	8f 70       	andi	r24, 0x0F	; 15
 170:	96 2f       	mov	r25, r22
 172:	90 7f       	andi	r25, 0xF0	; 240
 174:	89 2b       	or	r24, r25
 176:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<RS);		//RS = 1
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	81 60       	ori	r24, 0x01	; 1
 17c:	8b b9       	out	0x0b, r24	; 11
	LCD_Port|= (1<<EN);
 17e:	8b b1       	in	r24, 0x0b	; 11
 180:	82 60       	ori	r24, 0x02	; 2
 182:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 184:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 186:	8b b1       	in	r24, 0x0b	; 11
 188:	8d 7f       	andi	r24, 0xFD	; 253
 18a:	8b b9       	out	0x0b, r24	; 11
 18c:	82 e4       	ldi	r24, 0x42	; 66
 18e:	8a 95       	dec	r24
 190:	f1 f7       	brne	.-4      	; 0x18e <_ZN6Screen8LCD_CharEh+0x22>
 192:	00 c0       	rjmp	.+0      	; 0x194 <_ZN6Screen8LCD_CharEh+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (data << 4);
 194:	8b b1       	in	r24, 0x0b	; 11
 196:	90 e1       	ldi	r25, 0x10	; 16
 198:	69 9f       	mul	r22, r25
 19a:	b0 01       	movw	r22, r0
 19c:	11 24       	eor	r1, r1
 19e:	8f 70       	andi	r24, 0x0F	; 15
 1a0:	68 2b       	or	r22, r24
 1a2:	6b b9       	out	0x0b, r22	; 11
	LCD_Port |= (1<<EN);
 1a4:	8b b1       	in	r24, 0x0b	; 11
 1a6:	82 60       	ori	r24, 0x02	; 2
 1a8:	8b b9       	out	0x0b, r24	; 11
 1aa:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 1ac:	8b b1       	in	r24, 0x0b	; 11
 1ae:	8d 7f       	andi	r24, 0xFD	; 253
 1b0:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b2:	83 ef       	ldi	r24, 0xF3	; 243
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <_ZN6Screen8LCD_CharEh+0x4a>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <_ZN6Screen8LCD_CharEh+0x50>
 1bc:	00 00       	nop
 1be:	08 95       	ret

000001c0 <_ZN6Screen10LCD_StringEPc>:
}


//this is the function use to write a string on the LCD screen
void Screen::LCD_String(char *str)
{
 1c0:	ef 92       	push	r14
 1c2:	ff 92       	push	r15
 1c4:	0f 93       	push	r16
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	7c 01       	movw	r14, r24
 1ce:	8b 01       	movw	r16, r22
	int i;
	for(i=0;str[i]!=0;i++)
 1d0:	c0 e0       	ldi	r28, 0x00	; 0
 1d2:	d0 e0       	ldi	r29, 0x00	; 0
 1d4:	f8 01       	movw	r30, r16
 1d6:	ec 0f       	add	r30, r28
 1d8:	fd 1f       	adc	r31, r29
 1da:	60 81       	ld	r22, Z
 1dc:	66 23       	and	r22, r22
 1de:	29 f0       	breq	.+10     	; 0x1ea <_ZN6Screen10LCD_StringEPc+0x2a>
	{
		LCD_Char (str[i]);
 1e0:	c7 01       	movw	r24, r14
 1e2:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>

//this is the function use to write a string on the LCD screen
void Screen::LCD_String(char *str)
{
	int i;
	for(i=0;str[i]!=0;i++)
 1e6:	21 96       	adiw	r28, 0x01	; 1
 1e8:	f5 cf       	rjmp	.-22     	; 0x1d4 <_ZN6Screen10LCD_StringEPc+0x14>
	{
		LCD_Char (str[i]);
	}
}
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	1f 91       	pop	r17
 1f0:	0f 91       	pop	r16
 1f2:	ff 90       	pop	r15
 1f4:	ef 90       	pop	r14
 1f6:	08 95       	ret

000001f8 <_ZN6Screen8LCD_InitEv>:
}


//function to initialize the LCD dispay
void Screen::LCD_Init(void)
{
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	ec 01       	movw	r28, r24
	LCD_Dir = 0xFF;			//LCD data direction is output
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	8a b9       	out	0x0a, r24	; 10
 202:	87 e8       	ldi	r24, 0x87	; 135
 204:	93 e1       	ldi	r25, 0x13	; 19
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <_ZN6Screen8LCD_InitEv+0xe>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <_ZN6Screen8LCD_InitEv+0x14>
 20c:	00 00       	nop
	_delay_ms(20);
	
	LCD_Command(0x02);
 20e:	62 e0       	ldi	r22, 0x02	; 2
 210:	ce 01       	movw	r24, r28
 212:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x28);
 216:	68 e2       	ldi	r22, 0x28	; 40
 218:	ce 01       	movw	r24, r28
 21a:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x0c);              //Command - Display on Cursor off
 21e:	6c e0       	ldi	r22, 0x0C	; 12
 220:	ce 01       	movw	r24, r28
 222:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x06);              //Command - shift cursor to right
 226:	66 e0       	ldi	r22, 0x06	; 6
 228:	ce 01       	movw	r24, r28
 22a:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
	LCD_Command(0x01);              //Command - Clear display
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	ce 01       	movw	r24, r28
 232:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
	
	LCD_String("Welcome");
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	71 e0       	ldi	r23, 0x01	; 1
 23a:	ce 01       	movw	r24, r28
 23c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 240:	9f e3       	ldi	r25, 0x3F	; 63
 242:	2d e0       	ldi	r18, 0x0D	; 13
 244:	83 e0       	ldi	r24, 0x03	; 3
 246:	91 50       	subi	r25, 0x01	; 1
 248:	20 40       	sbci	r18, 0x00	; 0
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <_ZN6Screen8LCD_InitEv+0x4e>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <_ZN6Screen8LCD_InitEv+0x58>
 250:	00 00       	nop
	_delay_ms(1000);
	LCD_String(".");
 252:	68 e0       	ldi	r22, 0x08	; 8
 254:	71 e0       	ldi	r23, 0x01	; 1
 256:	ce 01       	movw	r24, r28
 258:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 25c:	9f e3       	ldi	r25, 0x3F	; 63
 25e:	2d e0       	ldi	r18, 0x0D	; 13
 260:	83 e0       	ldi	r24, 0x03	; 3
 262:	91 50       	subi	r25, 0x01	; 1
 264:	20 40       	sbci	r18, 0x00	; 0
 266:	80 40       	sbci	r24, 0x00	; 0
 268:	e1 f7       	brne	.-8      	; 0x262 <_ZN6Screen8LCD_InitEv+0x6a>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <_ZN6Screen8LCD_InitEv+0x74>
 26c:	00 00       	nop
	_delay_ms(1000);
	LCD_String(".");
 26e:	68 e0       	ldi	r22, 0x08	; 8
 270:	71 e0       	ldi	r23, 0x01	; 1
 272:	ce 01       	movw	r24, r28
 274:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 278:	9f e3       	ldi	r25, 0x3F	; 63
 27a:	2d e0       	ldi	r18, 0x0D	; 13
 27c:	83 e0       	ldi	r24, 0x03	; 3
 27e:	91 50       	subi	r25, 0x01	; 1
 280:	20 40       	sbci	r18, 0x00	; 0
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <_ZN6Screen8LCD_InitEv+0x86>
 286:	00 c0       	rjmp	.+0      	; 0x288 <_ZN6Screen8LCD_InitEv+0x90>
 288:	00 00       	nop
	_delay_ms(1000);
	LCD_String(".");
 28a:	68 e0       	ldi	r22, 0x08	; 8
 28c:	71 e0       	ldi	r23, 0x01	; 1
 28e:	ce 01       	movw	r24, r28
 290:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 294:	9f e3       	ldi	r25, 0x3F	; 63
 296:	2d e0       	ldi	r18, 0x0D	; 13
 298:	83 e0       	ldi	r24, 0x03	; 3
 29a:	91 50       	subi	r25, 0x01	; 1
 29c:	20 40       	sbci	r18, 0x00	; 0
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <_ZN6Screen8LCD_InitEv+0xa2>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <_ZN6Screen8LCD_InitEv+0xac>
 2a4:	00 00       	nop
	_delay_ms(1000);
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <_ZN6Screen9LCD_clearEv>:
}


//function to clear the display
void Screen::LCD_clear()
{
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
	LCD_Command (0x01);
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 2b8:	83 ef       	ldi	r24, 0xF3	; 243
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <_ZN6Screen9LCD_clearEv+0x10>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <_ZN6Screen9LCD_clearEv+0x16>
 2c2:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);
 2c4:	60 e8       	ldi	r22, 0x80	; 128
 2c6:	ce 01       	movw	r24, r28
 2c8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
}
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <_ZN6Screen4TimeEv>:


/*demo function to display the Time. Here I used only the string "Time"
But in the alarm clock we can use the Time output comes from the RTC sub system. */
void Screen::Time()
{
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	ec 01       	movw	r28, r24
	LCD_clear();
 2d8:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
	LCD_String("~~~~ TIME ~~~~");
 2dc:	6a e0       	ldi	r22, 0x0A	; 10
 2de:	71 e0       	ldi	r23, 0x01	; 1
 2e0:	ce 01       	movw	r24, r28
 2e2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 2e6:	2f e9       	ldi	r18, 0x9F	; 159
 2e8:	86 e8       	ldi	r24, 0x86	; 134
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	21 50       	subi	r18, 0x01	; 1
 2ee:	80 40       	sbci	r24, 0x00	; 0
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <_ZN6Screen4TimeEv+0x1a>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <_ZN6Screen4TimeEv+0x24>
 2f6:	00 00       	nop
	_delay_ms(500);
}
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	08 95       	ret

000002fe <_ZN6Screen4BackEv>:
  }

}

void Screen::Back(){            //what to do when user press the back button
  if (_state == 1 or _state ==2 or _state == 3 or _state == 4 or _state == 5) {           
 2fe:	fc 01       	movw	r30, r24
 300:	20 81       	ld	r18, Z
 302:	31 81       	ldd	r19, Z+1	; 0x01
 304:	21 50       	subi	r18, 0x01	; 1
 306:	31 09       	sbc	r19, r1
 308:	25 30       	cpi	r18, 0x05	; 5
 30a:	31 05       	cpc	r19, r1
 30c:	68 f4       	brcc	.+26     	; 0x328 <_ZN6Screen4BackEv+0x2a>
    _state = 0;
 30e:	11 82       	std	Z+1, r1	; 0x01
 310:	10 82       	st	Z, r1
    Time();
 312:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZN6Screen4TimeEv>
 316:	ff e9       	ldi	r31, 0x9F	; 159
 318:	26 e8       	ldi	r18, 0x86	; 134
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	f1 50       	subi	r31, 0x01	; 1
 31e:	20 40       	sbci	r18, 0x00	; 0
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	e1 f7       	brne	.-8      	; 0x31c <_ZN6Screen4BackEv+0x1e>
 324:	00 c0       	rjmp	.+0      	; 0x326 <_ZN6Screen4BackEv+0x28>
 326:	00 00       	nop
 328:	08 95       	ret

0000032a <_ZN6Screen5RightEv>:
    }
}


void Screen::Right(){              //right button can be used to move through a,b,c,d where Time = ab:cd
  if (_co == 0){
 32a:	fc 01       	movw	r30, r24
 32c:	22 81       	ldd	r18, Z+2	; 0x02
 32e:	33 81       	ldd	r19, Z+3	; 0x03
 330:	21 15       	cp	r18, r1
 332:	31 05       	cpc	r19, r1
 334:	89 f4       	brne	.+34     	; 0x358 <_ZN6Screen5RightEv+0x2e>
  _co = 1;
 336:	21 e0       	ldi	r18, 0x01	; 1
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	33 83       	std	Z+3, r19	; 0x03
 33c:	22 83       	std	Z+2, r18	; 0x02
  LCD_Command(0x14);
 33e:	64 e1       	ldi	r22, 0x14	; 20
 340:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 344:	ff e9       	ldi	r31, 0x9F	; 159
 346:	26 e8       	ldi	r18, 0x86	; 134
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	f1 50       	subi	r31, 0x01	; 1
 34c:	20 40       	sbci	r18, 0x00	; 0
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <_ZN6Screen5RightEv+0x20>
 352:	00 c0       	rjmp	.+0      	; 0x354 <_ZN6Screen5RightEv+0x2a>
 354:	00 00       	nop
 356:	08 95       	ret
  _delay_ms(500);
  }

  else if (_co == 1){
 358:	21 30       	cpi	r18, 0x01	; 1
 35a:	31 05       	cpc	r19, r1
 35c:	91 f4       	brne	.+36     	; 0x382 <_ZN6Screen5RightEv+0x58>
  _co = 3;
 35e:	23 e0       	ldi	r18, 0x03	; 3
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	fc 01       	movw	r30, r24
 364:	33 83       	std	Z+3, r19	; 0x03
 366:	22 83       	std	Z+2, r18	; 0x02
  LCD_Command(0x14);
 368:	64 e1       	ldi	r22, 0x14	; 20
 36a:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 36e:	ff e9       	ldi	r31, 0x9F	; 159
 370:	26 e8       	ldi	r18, 0x86	; 134
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	f1 50       	subi	r31, 0x01	; 1
 376:	20 40       	sbci	r18, 0x00	; 0
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <_ZN6Screen5RightEv+0x4a>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <_ZN6Screen5RightEv+0x54>
 37e:	00 00       	nop
 380:	08 95       	ret
  _delay_ms(500);
  }

  else if (_co == 3){
 382:	23 30       	cpi	r18, 0x03	; 3
 384:	31 05       	cpc	r19, r1
 386:	89 f4       	brne	.+34     	; 0x3aa <_ZN6Screen5RightEv+0x80>
  _co = 4;
 388:	24 e0       	ldi	r18, 0x04	; 4
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	fc 01       	movw	r30, r24
 38e:	33 83       	std	Z+3, r19	; 0x03
 390:	22 83       	std	Z+2, r18	; 0x02
  LCD_Command(0x14);
 392:	64 e1       	ldi	r22, 0x14	; 20
 394:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 398:	ff e9       	ldi	r31, 0x9F	; 159
 39a:	26 e8       	ldi	r18, 0x86	; 134
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	f1 50       	subi	r31, 0x01	; 1
 3a0:	20 40       	sbci	r18, 0x00	; 0
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	e1 f7       	brne	.-8      	; 0x39e <_ZN6Screen5RightEv+0x74>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <_ZN6Screen5RightEv+0x7e>
 3a8:	00 00       	nop
 3aa:	08 95       	ret

000003ac <_ZN6Screen4LeftEv>:
  }
}

//What to do when Left button is pressed
void Screen::Left(){             
  if (_co == 1){
 3ac:	fc 01       	movw	r30, r24
 3ae:	22 81       	ldd	r18, Z+2	; 0x02
 3b0:	33 81       	ldd	r19, Z+3	; 0x03
 3b2:	21 30       	cpi	r18, 0x01	; 1
 3b4:	31 05       	cpc	r19, r1
 3b6:	79 f4       	brne	.+30     	; 0x3d6 <_ZN6Screen4LeftEv+0x2a>
  _co = 0;
 3b8:	13 82       	std	Z+3, r1	; 0x03
 3ba:	12 82       	std	Z+2, r1	; 0x02
  LCD_Command(0x10);
 3bc:	60 e1       	ldi	r22, 0x10	; 16
 3be:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 3c2:	ff e9       	ldi	r31, 0x9F	; 159
 3c4:	26 e8       	ldi	r18, 0x86	; 134
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	f1 50       	subi	r31, 0x01	; 1
 3ca:	20 40       	sbci	r18, 0x00	; 0
 3cc:	80 40       	sbci	r24, 0x00	; 0
 3ce:	e1 f7       	brne	.-8      	; 0x3c8 <_ZN6Screen4LeftEv+0x1c>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <_ZN6Screen4LeftEv+0x26>
 3d2:	00 00       	nop
 3d4:	08 95       	ret
  _delay_ms(500);
  }

  else if (_co == 3){
 3d6:	23 30       	cpi	r18, 0x03	; 3
 3d8:	31 05       	cpc	r19, r1
 3da:	91 f4       	brne	.+36     	; 0x400 <__EEPROM_REGION_LENGTH__>
  _co = 1;
 3dc:	21 e0       	ldi	r18, 0x01	; 1
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	fc 01       	movw	r30, r24
 3e2:	33 83       	std	Z+3, r19	; 0x03
 3e4:	22 83       	std	Z+2, r18	; 0x02
  LCD_Command(0x10);
 3e6:	60 e1       	ldi	r22, 0x10	; 16
 3e8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 3ec:	ff e9       	ldi	r31, 0x9F	; 159
 3ee:	26 e8       	ldi	r18, 0x86	; 134
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	f1 50       	subi	r31, 0x01	; 1
 3f4:	20 40       	sbci	r18, 0x00	; 0
 3f6:	80 40       	sbci	r24, 0x00	; 0
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <_ZN6Screen4LeftEv+0x46>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <_ZN6Screen4LeftEv+0x50>
 3fc:	00 00       	nop
 3fe:	08 95       	ret
  _delay_ms(500);
  }

  else if (_co == 4){
 400:	24 30       	cpi	r18, 0x04	; 4
 402:	31 05       	cpc	r19, r1
 404:	89 f4       	brne	.+34     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
  _co = 3;
 406:	23 e0       	ldi	r18, 0x03	; 3
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	fc 01       	movw	r30, r24
 40c:	33 83       	std	Z+3, r19	; 0x03
 40e:	22 83       	std	Z+2, r18	; 0x02
  LCD_Command(0x10);
 410:	60 e1       	ldi	r22, 0x10	; 16
 412:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 416:	ff e9       	ldi	r31, 0x9F	; 159
 418:	26 e8       	ldi	r18, 0x86	; 134
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	f1 50       	subi	r31, 0x01	; 1
 41e:	20 40       	sbci	r18, 0x00	; 0
 420:	80 40       	sbci	r24, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 426:	00 00       	nop
 428:	08 95       	ret

0000042a <_ZN6Screen7state_1Ev>:
} 




void Screen::state_1(){
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	ec 01       	movw	r28, r24
  _state = 1;
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	99 83       	std	Y+1, r25	; 0x01
 436:	88 83       	st	Y, r24
  LCD_clear();
 438:	ce 01       	movw	r24, r28
 43a:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_String("Set Alarm");
 43e:	69 e1       	ldi	r22, 0x19	; 25
 440:	71 e0       	ldi	r23, 0x01	; 1
 442:	ce 01       	movw	r24, r28
 444:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 448:	2f e9       	ldi	r18, 0x9F	; 159
 44a:	86 e8       	ldi	r24, 0x86	; 134
 44c:	91 e0       	ldi	r25, 0x01	; 1
 44e:	21 50       	subi	r18, 0x01	; 1
 450:	80 40       	sbci	r24, 0x00	; 0
 452:	90 40       	sbci	r25, 0x00	; 0
 454:	e1 f7       	brne	.-8      	; 0x44e <_ZN6Screen7state_1Ev+0x24>
 456:	00 c0       	rjmp	.+0      	; 0x458 <_ZN6Screen7state_1Ev+0x2e>
 458:	00 00       	nop
  _delay_ms(500);
}
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	08 95       	ret

00000460 <_ZN6Screen7state_2Ev>:

void Screen::state_2(){
 460:	cf 93       	push	r28
 462:	df 93       	push	r29
 464:	ec 01       	movw	r28, r24
  _state = 2;
 466:	82 e0       	ldi	r24, 0x02	; 2
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	99 83       	std	Y+1, r25	; 0x01
 46c:	88 83       	st	Y, r24
  LCD_clear();
 46e:	ce 01       	movw	r24, r28
 470:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_String("Set Time");
 474:	63 e2       	ldi	r22, 0x23	; 35
 476:	71 e0       	ldi	r23, 0x01	; 1
 478:	ce 01       	movw	r24, r28
 47a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 47e:	2f e9       	ldi	r18, 0x9F	; 159
 480:	86 e8       	ldi	r24, 0x86	; 134
 482:	91 e0       	ldi	r25, 0x01	; 1
 484:	21 50       	subi	r18, 0x01	; 1
 486:	80 40       	sbci	r24, 0x00	; 0
 488:	90 40       	sbci	r25, 0x00	; 0
 48a:	e1 f7       	brne	.-8      	; 0x484 <_ZN6Screen7state_2Ev+0x24>
 48c:	00 c0       	rjmp	.+0      	; 0x48e <_ZN6Screen7state_2Ev+0x2e>
 48e:	00 00       	nop
  _delay_ms(500);
}
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	08 95       	ret

00000496 <_ZN6Screen7state_3Ev>:

void Screen::state_3(){
 496:	cf 93       	push	r28
 498:	df 93       	push	r29
 49a:	ec 01       	movw	r28, r24
  _state = 3;
 49c:	83 e0       	ldi	r24, 0x03	; 3
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	99 83       	std	Y+1, r25	; 0x01
 4a2:	88 83       	st	Y, r24
  LCD_clear();
 4a4:	ce 01       	movw	r24, r28
 4a6:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_String("Existing Alarms");
 4aa:	6c e2       	ldi	r22, 0x2C	; 44
 4ac:	71 e0       	ldi	r23, 0x01	; 1
 4ae:	ce 01       	movw	r24, r28
 4b0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 4b4:	2f e9       	ldi	r18, 0x9F	; 159
 4b6:	86 e8       	ldi	r24, 0x86	; 134
 4b8:	91 e0       	ldi	r25, 0x01	; 1
 4ba:	21 50       	subi	r18, 0x01	; 1
 4bc:	80 40       	sbci	r24, 0x00	; 0
 4be:	90 40       	sbci	r25, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <_ZN6Screen7state_3Ev+0x24>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <_ZN6Screen7state_3Ev+0x2e>
 4c4:	00 00       	nop
  _delay_ms(500);
}
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <_ZN6Screen7state_4Ev>:

void Screen::state_4(){
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	ec 01       	movw	r28, r24
  _state = 4;
 4d2:	84 e0       	ldi	r24, 0x04	; 4
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	99 83       	std	Y+1, r25	; 0x01
 4d8:	88 83       	st	Y, r24
  LCD_clear();
 4da:	ce 01       	movw	r24, r28
 4dc:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_String("Change Alarms");
 4e0:	6c e3       	ldi	r22, 0x3C	; 60
 4e2:	71 e0       	ldi	r23, 0x01	; 1
 4e4:	ce 01       	movw	r24, r28
 4e6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 4ea:	2f e9       	ldi	r18, 0x9F	; 159
 4ec:	86 e8       	ldi	r24, 0x86	; 134
 4ee:	91 e0       	ldi	r25, 0x01	; 1
 4f0:	21 50       	subi	r18, 0x01	; 1
 4f2:	80 40       	sbci	r24, 0x00	; 0
 4f4:	90 40       	sbci	r25, 0x00	; 0
 4f6:	e1 f7       	brne	.-8      	; 0x4f0 <_ZN6Screen7state_4Ev+0x24>
 4f8:	00 c0       	rjmp	.+0      	; 0x4fa <_ZN6Screen7state_4Ev+0x2e>
 4fa:	00 00       	nop
  _delay_ms(500);
}
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	08 95       	ret

00000502 <_ZN6Screen7state_5Ev>:

void Screen::state_5(){
 502:	cf 93       	push	r28
 504:	df 93       	push	r29
 506:	ec 01       	movw	r28, r24
  _state = 5;
 508:	85 e0       	ldi	r24, 0x05	; 5
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	99 83       	std	Y+1, r25	; 0x01
 50e:	88 83       	st	Y, r24
  LCD_clear();
 510:	ce 01       	movw	r24, r28
 512:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_String("Factory Reset");
 516:	6a e4       	ldi	r22, 0x4A	; 74
 518:	71 e0       	ldi	r23, 0x01	; 1
 51a:	ce 01       	movw	r24, r28
 51c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 520:	2f e9       	ldi	r18, 0x9F	; 159
 522:	86 e8       	ldi	r24, 0x86	; 134
 524:	91 e0       	ldi	r25, 0x01	; 1
 526:	21 50       	subi	r18, 0x01	; 1
 528:	80 40       	sbci	r24, 0x00	; 0
 52a:	90 40       	sbci	r25, 0x00	; 0
 52c:	e1 f7       	brne	.-8      	; 0x526 <_ZN6Screen7state_5Ev+0x24>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <_ZN6Screen7state_5Ev+0x2e>
 530:	00 00       	nop
  _delay_ms(500);
}
 532:	df 91       	pop	r29
 534:	cf 91       	pop	r28
 536:	08 95       	ret

00000538 <_ZN6Screen7state_7Ev>:
  LCD_Command(0x02);
  LCD_Command(0x0E);
  _delay_ms(500);
}

void Screen::state_7(){
 538:	ff 92       	push	r15
 53a:	0f 93       	push	r16
 53c:	1f 93       	push	r17
 53e:	cf 93       	push	r28
 540:	df 93       	push	r29
 542:	ec 01       	movw	r28, r24
  LCD_clear();
 544:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  LCD_Command(0x02);
 548:	62 e0       	ldi	r22, 0x02	; 2
 54a:	ce 01       	movw	r24, r28
 54c:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
  _co = 0;
 550:	1b 82       	std	Y+3, r1	; 0x03
 552:	1a 82       	std	Y+2, r1	; 0x02
  char c_a = _a + 48;
 554:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <_a>
 558:	60 5d       	subi	r22, 0xD0	; 208
  char c_b = _b + 48;
 55a:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 55e:	0f 2e       	mov	r0, r31
 560:	f0 e3       	ldi	r31, 0x30	; 48
 562:	ff 2e       	mov	r15, r31
 564:	f0 2d       	mov	r31, r0
 566:	f8 0e       	add	r15, r24
  char c_c = _c + 48;
 568:	00 91 86 01 	lds	r16, 0x0186	; 0x800186 <_c>
 56c:	00 5d       	subi	r16, 0xD0	; 208
  char c_d = _d + 48;
 56e:	10 91 84 01 	lds	r17, 0x0184	; 0x800184 <_d>
 572:	10 5d       	subi	r17, 0xD0	; 208
  LCD_Char(c_a); LCD_Char(c_b); LCD_String(":"); LCD_Char(c_c); LCD_Char(c_d);
 574:	ce 01       	movw	r24, r28
 576:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 57a:	6f 2d       	mov	r22, r15
 57c:	ce 01       	movw	r24, r28
 57e:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 582:	68 e5       	ldi	r22, 0x58	; 88
 584:	71 e0       	ldi	r23, 0x01	; 1
 586:	ce 01       	movw	r24, r28
 588:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 58c:	60 2f       	mov	r22, r16
 58e:	ce 01       	movw	r24, r28
 590:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 594:	61 2f       	mov	r22, r17
 596:	ce 01       	movw	r24, r28
 598:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
  LCD_Command(0XC0);
 59c:	60 ec       	ldi	r22, 0xC0	; 192
 59e:	ce 01       	movw	r24, r28
 5a0:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
  LCD_String("Yes           No");
 5a4:	6a e5       	ldi	r22, 0x5A	; 90
 5a6:	71 e0       	ldi	r23, 0x01	; 1
 5a8:	ce 01       	movw	r24, r28
 5aa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 5ae:	2f e9       	ldi	r18, 0x9F	; 159
 5b0:	86 e8       	ldi	r24, 0x86	; 134
 5b2:	91 e0       	ldi	r25, 0x01	; 1
 5b4:	21 50       	subi	r18, 0x01	; 1
 5b6:	80 40       	sbci	r24, 0x00	; 0
 5b8:	90 40       	sbci	r25, 0x00	; 0
 5ba:	e1 f7       	brne	.-8      	; 0x5b4 <_ZN6Screen7state_7Ev+0x7c>
 5bc:	00 c0       	rjmp	.+0      	; 0x5be <_ZN6Screen7state_7Ev+0x86>
 5be:	00 00       	nop
  _delay_ms(500);
}
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	1f 91       	pop	r17
 5c6:	0f 91       	pop	r16
 5c8:	ff 90       	pop	r15
 5ca:	08 95       	ret

000005cc <_ZN6Screen4showEv>:
void Screen::state_8(){
  _a , _b , _c , _d = 0,0,0,0;
  state_6();
}

void Screen::show(){
 5cc:	ff 92       	push	r15
 5ce:	0f 93       	push	r16
 5d0:	1f 93       	push	r17
 5d2:	cf 93       	push	r28
 5d4:	df 93       	push	r29
 5d6:	ec 01       	movw	r28, r24
  LCD_clear();
 5d8:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  char c_a = _a + 48;
 5dc:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <_a>
 5e0:	60 5d       	subi	r22, 0xD0	; 208
  char c_b = _b + 48;
 5e2:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 5e6:	0f 2e       	mov	r0, r31
 5e8:	f0 e3       	ldi	r31, 0x30	; 48
 5ea:	ff 2e       	mov	r15, r31
 5ec:	f0 2d       	mov	r31, r0
 5ee:	f8 0e       	add	r15, r24
  char c_c = _c + 48;
 5f0:	00 91 86 01 	lds	r16, 0x0186	; 0x800186 <_c>
 5f4:	00 5d       	subi	r16, 0xD0	; 208
  char c_d = _d + 48;
 5f6:	10 91 84 01 	lds	r17, 0x0184	; 0x800184 <_d>
 5fa:	10 5d       	subi	r17, 0xD0	; 208
  LCD_Char(c_a); LCD_Char(c_b); LCD_String(":"); LCD_Char(c_c); LCD_Char(c_d);
 5fc:	ce 01       	movw	r24, r28
 5fe:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 602:	6f 2d       	mov	r22, r15
 604:	ce 01       	movw	r24, r28
 606:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 60a:	68 e5       	ldi	r22, 0x58	; 88
 60c:	71 e0       	ldi	r23, 0x01	; 1
 60e:	ce 01       	movw	r24, r28
 610:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 614:	60 2f       	mov	r22, r16
 616:	ce 01       	movw	r24, r28
 618:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
 61c:	61 2f       	mov	r22, r17
 61e:	ce 01       	movw	r24, r28
 620:	0e 94 b6 00 	call	0x16c	; 0x16c <_ZN6Screen8LCD_CharEh>
}
 624:	df 91       	pop	r29
 626:	cf 91       	pop	r28
 628:	1f 91       	pop	r17
 62a:	0f 91       	pop	r16
 62c:	ff 90       	pop	r15
 62e:	08 95       	ret

00000630 <_ZN6Screen2UpEv>:
    _delay_ms(500);
  }
}


void Screen::Up(){              //what to do when the user press the up button
 630:	cf 93       	push	r28
 632:	df 93       	push	r29
 634:	ec 01       	movw	r28, r24
    if (_state == 1) {
 636:	88 81       	ld	r24, Y
 638:	99 81       	ldd	r25, Y+1	; 0x01
 63a:	81 30       	cpi	r24, 0x01	; 1
 63c:	91 05       	cpc	r25, r1
 63e:	21 f4       	brne	.+8      	; 0x648 <_ZN6Screen2UpEv+0x18>
      state_5();    
 640:	ce 01       	movw	r24, r28
 642:	0e 94 81 02 	call	0x502	; 0x502 <_ZN6Screen7state_5Ev>
 646:	05 c1       	rjmp	.+522    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
  }
  else if (_state == 2) {
 648:	82 30       	cpi	r24, 0x02	; 2
 64a:	91 05       	cpc	r25, r1
 64c:	21 f4       	brne	.+8      	; 0x656 <_ZN6Screen2UpEv+0x26>
      state_1();
 64e:	ce 01       	movw	r24, r28
 650:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN6Screen7state_1Ev>
 654:	fe c0       	rjmp	.+508    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
  }
  else if (_state == 3) {
 656:	83 30       	cpi	r24, 0x03	; 3
 658:	91 05       	cpc	r25, r1
 65a:	21 f4       	brne	.+8      	; 0x664 <_ZN6Screen2UpEv+0x34>
      state_2();
 65c:	ce 01       	movw	r24, r28
 65e:	0e 94 30 02 	call	0x460	; 0x460 <_ZN6Screen7state_2Ev>
 662:	f7 c0       	rjmp	.+494    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
  }
  else if (_state == 4) {
 664:	84 30       	cpi	r24, 0x04	; 4
 666:	91 05       	cpc	r25, r1
 668:	21 f4       	brne	.+8      	; 0x672 <_ZN6Screen2UpEv+0x42>
      state_3();
 66a:	ce 01       	movw	r24, r28
 66c:	0e 94 4b 02 	call	0x496	; 0x496 <_ZN6Screen7state_3Ev>
 670:	f0 c0       	rjmp	.+480    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
  }
  else if (_state == 5) {
 672:	85 30       	cpi	r24, 0x05	; 5
 674:	91 05       	cpc	r25, r1
 676:	21 f4       	brne	.+8      	; 0x680 <_ZN6Screen2UpEv+0x50>
      state_4();
 678:	ce 01       	movw	r24, r28
 67a:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN6Screen7state_4Ev>
 67e:	e9 c0       	rjmp	.+466    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
  }
  else if (_state == 6 or _state == 8) {
 680:	86 30       	cpi	r24, 0x06	; 6
 682:	91 05       	cpc	r25, r1
 684:	19 f0       	breq	.+6      	; 0x68c <_ZN6Screen2UpEv+0x5c>
 686:	08 97       	sbiw	r24, 0x08	; 8
 688:	09 f0       	breq	.+2      	; 0x68c <_ZN6Screen2UpEv+0x5c>
 68a:	e3 c0       	rjmp	.+454    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
    if (_co == 0){                   //change a (Time is in this form - ab:cd)
 68c:	8a 81       	ldd	r24, Y+2	; 0x02
 68e:	9b 81       	ldd	r25, Y+3	; 0x03
 690:	89 2b       	or	r24, r25
 692:	79 f5       	brne	.+94     	; 0x6f2 <_ZN6Screen2UpEv+0xc2>
      if (_a != 2)  {_a = _a +1; }
 694:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_a>
 698:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_a+0x1>
 69c:	82 30       	cpi	r24, 0x02	; 2
 69e:	91 05       	cpc	r25, r1
 6a0:	31 f0       	breq	.+12     	; 0x6ae <_ZN6Screen2UpEv+0x7e>
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <_a+0x1>
 6a8:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <_a>
 6ac:	04 c0       	rjmp	.+8      	; 0x6b6 <_ZN6Screen2UpEv+0x86>
      else { _a = 0; }
 6ae:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <_a+0x1>
 6b2:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <_a>
      LCD_clear();
 6b6:	ce 01       	movw	r24, r28
 6b8:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 6bc:	ce 01       	movw	r24, r28
 6be:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 6c2:	60 ec       	ldi	r22, 0xC0	; 192
 6c4:	ce 01       	movw	r24, r28
 6c6:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 6ca:	6b e6       	ldi	r22, 0x6B	; 107
 6cc:	71 e0       	ldi	r23, 0x01	; 1
 6ce:	ce 01       	movw	r24, r28
 6d0:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
      LCD_Command(0x02);
 6d4:	62 e0       	ldi	r22, 0x02	; 2
 6d6:	ce 01       	movw	r24, r28
 6d8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 6dc:	2f e9       	ldi	r18, 0x9F	; 159
 6de:	86 e8       	ldi	r24, 0x86	; 134
 6e0:	91 e0       	ldi	r25, 0x01	; 1
 6e2:	21 50       	subi	r18, 0x01	; 1
 6e4:	80 40       	sbci	r24, 0x00	; 0
 6e6:	90 40       	sbci	r25, 0x00	; 0
 6e8:	e1 f7       	brne	.-8      	; 0x6e2 <_ZN6Screen2UpEv+0xb2>
 6ea:	00 c0       	rjmp	.+0      	; 0x6ec <_ZN6Screen2UpEv+0xbc>
 6ec:	00 00       	nop
      _delay_ms(500);
      _co = 0;
 6ee:	1b 82       	std	Y+3, r1	; 0x03
 6f0:	1a 82       	std	Y+2, r1	; 0x02
    }

    if (_co == 1){                  //change b (Time is in this form - ab:cd)
 6f2:	8a 81       	ldd	r24, Y+2	; 0x02
 6f4:	9b 81       	ldd	r25, Y+3	; 0x03
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	09 f0       	breq	.+2      	; 0x6fc <_ZN6Screen2UpEv+0xcc>
 6fa:	49 c0       	rjmp	.+146    	; 0x78e <_ZN6Screen2UpEv+0x15e>
      if (_a != 2){
 6fc:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_a>
 700:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_a+0x1>
 704:	02 97       	sbiw	r24, 0x02	; 2
 706:	91 f0       	breq	.+36     	; 0x72c <_ZN6Screen2UpEv+0xfc>
        if (_b != 9) {_b = _b + 1; }
 708:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 70c:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_b+0x1>
 710:	89 30       	cpi	r24, 0x09	; 9
 712:	91 05       	cpc	r25, r1
 714:	31 f0       	breq	.+12     	; 0x722 <_ZN6Screen2UpEv+0xf2>
 716:	01 96       	adiw	r24, 0x01	; 1
 718:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 71c:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
 720:	16 c0       	rjmp	.+44     	; 0x74e <_ZN6Screen2UpEv+0x11e>
        else {_b = 0;}
 722:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <_b+0x1>
 726:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <_b>
 72a:	11 c0       	rjmp	.+34     	; 0x74e <_ZN6Screen2UpEv+0x11e>
        }
      else{
        if (_b != 4) {_b = _b + 1; }
 72c:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 730:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_b+0x1>
 734:	84 30       	cpi	r24, 0x04	; 4
 736:	91 05       	cpc	r25, r1
 738:	31 f0       	breq	.+12     	; 0x746 <_ZN6Screen2UpEv+0x116>
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 740:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
 744:	04 c0       	rjmp	.+8      	; 0x74e <_ZN6Screen2UpEv+0x11e>
        else {_b = 0;}
 746:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <_b+0x1>
 74a:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <_b>
        }
      LCD_clear();
 74e:	ce 01       	movw	r24, r28
 750:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 754:	ce 01       	movw	r24, r28
 756:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 75a:	60 ec       	ldi	r22, 0xC0	; 192
 75c:	ce 01       	movw	r24, r28
 75e:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 762:	6b e6       	ldi	r22, 0x6B	; 107
 764:	71 e0       	ldi	r23, 0x01	; 1
 766:	ce 01       	movw	r24, r28
 768:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
      LCD_Command(0x80);
 76c:	60 e8       	ldi	r22, 0x80	; 128
 76e:	ce 01       	movw	r24, r28
 770:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 774:	2f e9       	ldi	r18, 0x9F	; 159
 776:	86 e8       	ldi	r24, 0x86	; 134
 778:	91 e0       	ldi	r25, 0x01	; 1
 77a:	21 50       	subi	r18, 0x01	; 1
 77c:	80 40       	sbci	r24, 0x00	; 0
 77e:	90 40       	sbci	r25, 0x00	; 0
 780:	e1 f7       	brne	.-8      	; 0x77a <_ZN6Screen2UpEv+0x14a>
 782:	00 c0       	rjmp	.+0      	; 0x784 <_ZN6Screen2UpEv+0x154>
 784:	00 00       	nop
      _delay_ms(500);
      _co = 1;
 786:	81 e0       	ldi	r24, 0x01	; 1
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	9b 83       	std	Y+3, r25	; 0x03
 78c:	8a 83       	std	Y+2, r24	; 0x02
      }


    if (_co == 3){                   //change c (Time is in this form - ab:cd)
 78e:	8a 81       	ldd	r24, Y+2	; 0x02
 790:	9b 81       	ldd	r25, Y+3	; 0x03
 792:	03 97       	sbiw	r24, 0x03	; 3
 794:	69 f5       	brne	.+90     	; 0x7f0 <_ZN6Screen2UpEv+0x1c0>
      if (_c != 5)  {_c = _c +1; }
 796:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_c>
 79a:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_c+0x1>
 79e:	85 30       	cpi	r24, 0x05	; 5
 7a0:	91 05       	cpc	r25, r1
 7a2:	31 f0       	breq	.+12     	; 0x7b0 <_ZN6Screen2UpEv+0x180>
 7a4:	01 96       	adiw	r24, 0x01	; 1
 7a6:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_c+0x1>
 7aa:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_c>
 7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <_ZN6Screen2UpEv+0x188>
      else { _c = 0; }
 7b0:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <_c+0x1>
 7b4:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <_c>
      LCD_clear();
 7b8:	ce 01       	movw	r24, r28
 7ba:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 7be:	ce 01       	movw	r24, r28
 7c0:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 7c4:	60 ec       	ldi	r22, 0xC0	; 192
 7c6:	ce 01       	movw	r24, r28
 7c8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 7cc:	6b e6       	ldi	r22, 0x6B	; 107
 7ce:	71 e0       	ldi	r23, 0x01	; 1
 7d0:	ce 01       	movw	r24, r28
 7d2:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 7d6:	2f e9       	ldi	r18, 0x9F	; 159
 7d8:	86 e8       	ldi	r24, 0x86	; 134
 7da:	91 e0       	ldi	r25, 0x01	; 1
 7dc:	21 50       	subi	r18, 0x01	; 1
 7de:	80 40       	sbci	r24, 0x00	; 0
 7e0:	90 40       	sbci	r25, 0x00	; 0
 7e2:	e1 f7       	brne	.-8      	; 0x7dc <_ZN6Screen2UpEv+0x1ac>
 7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <_ZN6Screen2UpEv+0x1b6>
 7e6:	00 00       	nop
      //lcd.setCursor(3,0);
      _delay_ms(500);
      _co = 3;
 7e8:	83 e0       	ldi	r24, 0x03	; 3
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	9b 83       	std	Y+3, r25	; 0x03
 7ee:	8a 83       	std	Y+2, r24	; 0x02
      }

    if (_co == 4){                   //change d (Time is in this form - ab:cd)
 7f0:	8a 81       	ldd	r24, Y+2	; 0x02
 7f2:	9b 81       	ldd	r25, Y+3	; 0x03
 7f4:	04 97       	sbiw	r24, 0x04	; 4
 7f6:	69 f5       	brne	.+90     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
      if (_d != 9)  {_d = _d +1; }
 7f8:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_d>
 7fc:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <_d+0x1>
 800:	89 30       	cpi	r24, 0x09	; 9
 802:	91 05       	cpc	r25, r1
 804:	31 f0       	breq	.+12     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 806:	01 96       	adiw	r24, 0x01	; 1
 808:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <_d+0x1>
 80c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <_d>
 810:	04 c0       	rjmp	.+8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
      else { _d = 0; }
 812:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <_d+0x1>
 816:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <_d>
      LCD_clear();
 81a:	ce 01       	movw	r24, r28
 81c:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 820:	ce 01       	movw	r24, r28
 822:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 826:	60 ec       	ldi	r22, 0xC0	; 192
 828:	ce 01       	movw	r24, r28
 82a:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 82e:	6b e6       	ldi	r22, 0x6B	; 107
 830:	71 e0       	ldi	r23, 0x01	; 1
 832:	ce 01       	movw	r24, r28
 834:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 838:	2f e9       	ldi	r18, 0x9F	; 159
 83a:	86 e8       	ldi	r24, 0x86	; 134
 83c:	91 e0       	ldi	r25, 0x01	; 1
 83e:	21 50       	subi	r18, 0x01	; 1
 840:	80 40       	sbci	r24, 0x00	; 0
 842:	90 40       	sbci	r25, 0x00	; 0
 844:	e1 f7       	brne	.-8      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 846:	00 c0       	rjmp	.+0      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 848:	00 00       	nop
      //lcd.setCursor(4,0);
      _delay_ms(500);
      _co = 4;
 84a:	84 e0       	ldi	r24, 0x04	; 4
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	9b 83       	std	Y+3, r25	; 0x03
 850:	8a 83       	std	Y+2, r24	; 0x02
      }
    }
}
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	08 95       	ret

00000858 <_ZN6Screen4DownEv>:



//What to do when Down button is pressed

void Screen::Down(){         
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29
 85c:	ec 01       	movw	r28, r24
    if (_state == 1) {
 85e:	88 81       	ld	r24, Y
 860:	99 81       	ldd	r25, Y+1	; 0x01
 862:	81 30       	cpi	r24, 0x01	; 1
 864:	91 05       	cpc	r25, r1
 866:	21 f4       	brne	.+8      	; 0x870 <_ZN6Screen4DownEv+0x18>
    state_2();
 868:	ce 01       	movw	r24, r28
 86a:	0e 94 30 02 	call	0x460	; 0x460 <_ZN6Screen7state_2Ev>
 86e:	0a c1       	rjmp	.+532    	; 0xa84 <__stack+0x185>
  }
  else if (_state == 2) {
 870:	82 30       	cpi	r24, 0x02	; 2
 872:	91 05       	cpc	r25, r1
 874:	21 f4       	brne	.+8      	; 0x87e <_ZN6Screen4DownEv+0x26>
    state_3();
 876:	ce 01       	movw	r24, r28
 878:	0e 94 4b 02 	call	0x496	; 0x496 <_ZN6Screen7state_3Ev>
 87c:	03 c1       	rjmp	.+518    	; 0xa84 <__stack+0x185>
  }
  else if (_state == 3) {
 87e:	83 30       	cpi	r24, 0x03	; 3
 880:	91 05       	cpc	r25, r1
 882:	21 f4       	brne	.+8      	; 0x88c <_ZN6Screen4DownEv+0x34>
    state_4();
 884:	ce 01       	movw	r24, r28
 886:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN6Screen7state_4Ev>
 88a:	fc c0       	rjmp	.+504    	; 0xa84 <__stack+0x185>
  }
  else if (_state == 4) {
 88c:	84 30       	cpi	r24, 0x04	; 4
 88e:	91 05       	cpc	r25, r1
 890:	21 f4       	brne	.+8      	; 0x89a <_ZN6Screen4DownEv+0x42>
    state_5();
 892:	ce 01       	movw	r24, r28
 894:	0e 94 81 02 	call	0x502	; 0x502 <_ZN6Screen7state_5Ev>
 898:	f5 c0       	rjmp	.+490    	; 0xa84 <__stack+0x185>
  }
  else if (_state == 5) {
 89a:	85 30       	cpi	r24, 0x05	; 5
 89c:	91 05       	cpc	r25, r1
 89e:	21 f4       	brne	.+8      	; 0x8a8 <_ZN6Screen4DownEv+0x50>
    state_1();
 8a0:	ce 01       	movw	r24, r28
 8a2:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN6Screen7state_1Ev>
 8a6:	ee c0       	rjmp	.+476    	; 0xa84 <__stack+0x185>
  }
  else if (_state == 6 or _state == 8) {
 8a8:	86 30       	cpi	r24, 0x06	; 6
 8aa:	91 05       	cpc	r25, r1
 8ac:	19 f0       	breq	.+6      	; 0x8b4 <_ZN6Screen4DownEv+0x5c>
 8ae:	08 97       	sbiw	r24, 0x08	; 8
 8b0:	09 f0       	breq	.+2      	; 0x8b4 <_ZN6Screen4DownEv+0x5c>
 8b2:	e8 c0       	rjmp	.+464    	; 0xa84 <__stack+0x185>
    if (_co == 0){                   //change a (Time is in this form - ab:cd)
 8b4:	8a 81       	ldd	r24, Y+2	; 0x02
 8b6:	9b 81       	ldd	r25, Y+3	; 0x03
 8b8:	89 2b       	or	r24, r25
 8ba:	81 f5       	brne	.+96     	; 0x91c <__stack+0x1d>
      if (_a != 0)  {_a = _a -1; }
 8bc:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_a>
 8c0:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_a+0x1>
 8c4:	00 97       	sbiw	r24, 0x00	; 0
 8c6:	31 f0       	breq	.+12     	; 0x8d4 <_ZN6Screen4DownEv+0x7c>
 8c8:	01 97       	sbiw	r24, 0x01	; 1
 8ca:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <_a+0x1>
 8ce:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <_a>
 8d2:	06 c0       	rjmp	.+12     	; 0x8e0 <_ZN6Screen4DownEv+0x88>
      else { _a = 2; }
 8d4:	82 e0       	ldi	r24, 0x02	; 2
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <_a+0x1>
 8dc:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <_a>
      LCD_clear();
 8e0:	ce 01       	movw	r24, r28
 8e2:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 8e6:	ce 01       	movw	r24, r28
 8e8:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 8ec:	60 ec       	ldi	r22, 0xC0	; 192
 8ee:	ce 01       	movw	r24, r28
 8f0:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 8f4:	6b e6       	ldi	r22, 0x6B	; 107
 8f6:	71 e0       	ldi	r23, 0x01	; 1
 8f8:	ce 01       	movw	r24, r28
 8fa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
      LCD_Command(0x02);
 8fe:	62 e0       	ldi	r22, 0x02	; 2
 900:	ce 01       	movw	r24, r28
 902:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 906:	2f e9       	ldi	r18, 0x9F	; 159
 908:	86 e8       	ldi	r24, 0x86	; 134
 90a:	91 e0       	ldi	r25, 0x01	; 1
 90c:	21 50       	subi	r18, 0x01	; 1
 90e:	80 40       	sbci	r24, 0x00	; 0
 910:	90 40       	sbci	r25, 0x00	; 0
 912:	e1 f7       	brne	.-8      	; 0x90c <__stack+0xd>
 914:	00 c0       	rjmp	.+0      	; 0x916 <__stack+0x17>
 916:	00 00       	nop
      _delay_ms(500);
      _co = 0;
 918:	1b 82       	std	Y+3, r1	; 0x03
 91a:	1a 82       	std	Y+2, r1	; 0x02
    }

    if (_co == 1){                  //change b (Time is in this form - ab:cd)
 91c:	8a 81       	ldd	r24, Y+2	; 0x02
 91e:	9b 81       	ldd	r25, Y+3	; 0x03
 920:	01 97       	sbiw	r24, 0x01	; 1
 922:	09 f0       	breq	.+2      	; 0x926 <__stack+0x27>
 924:	4b c0       	rjmp	.+150    	; 0x9bc <__stack+0xbd>
      if (_a != 2){
 926:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_a>
 92a:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_a+0x1>
 92e:	02 97       	sbiw	r24, 0x02	; 2
 930:	99 f0       	breq	.+38     	; 0x958 <__stack+0x59>
        if (_b != 0) {_b = _b - 1; }
 932:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 936:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_b+0x1>
 93a:	00 97       	sbiw	r24, 0x00	; 0
 93c:	31 f0       	breq	.+12     	; 0x94a <__stack+0x4b>
 93e:	01 97       	sbiw	r24, 0x01	; 1
 940:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 944:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
 948:	19 c0       	rjmp	.+50     	; 0x97c <__stack+0x7d>
        else {_b = 9;}
 94a:	89 e0       	ldi	r24, 0x09	; 9
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 952:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
 956:	12 c0       	rjmp	.+36     	; 0x97c <__stack+0x7d>
        }
      else{
        if (_b != 0) {_b = _b - 1; }
 958:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_b>
 95c:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_b+0x1>
 960:	00 97       	sbiw	r24, 0x00	; 0
 962:	31 f0       	breq	.+12     	; 0x970 <__stack+0x71>
 964:	01 97       	sbiw	r24, 0x01	; 1
 966:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 96a:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
 96e:	06 c0       	rjmp	.+12     	; 0x97c <__stack+0x7d>
        else {_b = 4;}
 970:	84 e0       	ldi	r24, 0x04	; 4
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <_b+0x1>
 978:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <_b>
        }
      LCD_clear();
 97c:	ce 01       	movw	r24, r28
 97e:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 982:	ce 01       	movw	r24, r28
 984:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 988:	60 ec       	ldi	r22, 0xC0	; 192
 98a:	ce 01       	movw	r24, r28
 98c:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 990:	6b e6       	ldi	r22, 0x6B	; 107
 992:	71 e0       	ldi	r23, 0x01	; 1
 994:	ce 01       	movw	r24, r28
 996:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
      LCD_Command(0x80);
 99a:	60 e8       	ldi	r22, 0x80	; 128
 99c:	ce 01       	movw	r24, r28
 99e:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 9a2:	2f e9       	ldi	r18, 0x9F	; 159
 9a4:	86 e8       	ldi	r24, 0x86	; 134
 9a6:	91 e0       	ldi	r25, 0x01	; 1
 9a8:	21 50       	subi	r18, 0x01	; 1
 9aa:	80 40       	sbci	r24, 0x00	; 0
 9ac:	90 40       	sbci	r25, 0x00	; 0
 9ae:	e1 f7       	brne	.-8      	; 0x9a8 <__stack+0xa9>
 9b0:	00 c0       	rjmp	.+0      	; 0x9b2 <__stack+0xb3>
 9b2:	00 00       	nop
      _delay_ms(500);
      _co = 1;
 9b4:	81 e0       	ldi	r24, 0x01	; 1
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	9b 83       	std	Y+3, r25	; 0x03
 9ba:	8a 83       	std	Y+2, r24	; 0x02
      }


    if (_co == 3){                   //change c (Time is in this form - ab:cd)
 9bc:	8a 81       	ldd	r24, Y+2	; 0x02
 9be:	9b 81       	ldd	r25, Y+3	; 0x03
 9c0:	03 97       	sbiw	r24, 0x03	; 3
 9c2:	71 f5       	brne	.+92     	; 0xa20 <__stack+0x121>
      if (_c != 0)  {_c = _c -1; }
 9c4:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_c>
 9c8:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_c+0x1>
 9cc:	00 97       	sbiw	r24, 0x00	; 0
 9ce:	31 f0       	breq	.+12     	; 0x9dc <__stack+0xdd>
 9d0:	01 97       	sbiw	r24, 0x01	; 1
 9d2:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_c+0x1>
 9d6:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_c>
 9da:	06 c0       	rjmp	.+12     	; 0x9e8 <__stack+0xe9>
      else { _c = 5; }
 9dc:	85 e0       	ldi	r24, 0x05	; 5
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_c+0x1>
 9e4:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_c>
      LCD_clear();
 9e8:	ce 01       	movw	r24, r28
 9ea:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 9ee:	ce 01       	movw	r24, r28
 9f0:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 9f4:	60 ec       	ldi	r22, 0xC0	; 192
 9f6:	ce 01       	movw	r24, r28
 9f8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 9fc:	6b e6       	ldi	r22, 0x6B	; 107
 9fe:	71 e0       	ldi	r23, 0x01	; 1
 a00:	ce 01       	movw	r24, r28
 a02:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 a06:	2f e9       	ldi	r18, 0x9F	; 159
 a08:	86 e8       	ldi	r24, 0x86	; 134
 a0a:	91 e0       	ldi	r25, 0x01	; 1
 a0c:	21 50       	subi	r18, 0x01	; 1
 a0e:	80 40       	sbci	r24, 0x00	; 0
 a10:	90 40       	sbci	r25, 0x00	; 0
 a12:	e1 f7       	brne	.-8      	; 0xa0c <__stack+0x10d>
 a14:	00 c0       	rjmp	.+0      	; 0xa16 <__stack+0x117>
 a16:	00 00       	nop
      //lcd.setCursor(3,0);
      _delay_ms(500);
      _co = 3;
 a18:	83 e0       	ldi	r24, 0x03	; 3
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	9b 83       	std	Y+3, r25	; 0x03
 a1e:	8a 83       	std	Y+2, r24	; 0x02
      }

    if (_co == 4){                   //change d (Time is in this form - ab:cd)
 a20:	8a 81       	ldd	r24, Y+2	; 0x02
 a22:	9b 81       	ldd	r25, Y+3	; 0x03
 a24:	04 97       	sbiw	r24, 0x04	; 4
 a26:	71 f5       	brne	.+92     	; 0xa84 <__stack+0x185>
      if (_d != 0)  {_d = _d -1; }
 a28:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_d>
 a2c:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <_d+0x1>
 a30:	00 97       	sbiw	r24, 0x00	; 0
 a32:	31 f0       	breq	.+12     	; 0xa40 <__stack+0x141>
 a34:	01 97       	sbiw	r24, 0x01	; 1
 a36:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <_d+0x1>
 a3a:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <_d>
 a3e:	06 c0       	rjmp	.+12     	; 0xa4c <__stack+0x14d>
      else { _d = 9; }
 a40:	89 e0       	ldi	r24, 0x09	; 9
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <_d+0x1>
 a48:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <_d>
      LCD_clear();
 a4c:	ce 01       	movw	r24, r28
 a4e:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
      show();
 a52:	ce 01       	movw	r24, r28
 a54:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
      LCD_Command(0XC0);
 a58:	60 ec       	ldi	r22, 0xC0	; 192
 a5a:	ce 01       	movw	r24, r28
 a5c:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
      LCD_String("Ok          Back");
 a60:	6b e6       	ldi	r22, 0x6B	; 107
 a62:	71 e0       	ldi	r23, 0x01	; 1
 a64:	ce 01       	movw	r24, r28
 a66:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
 a6a:	2f e9       	ldi	r18, 0x9F	; 159
 a6c:	86 e8       	ldi	r24, 0x86	; 134
 a6e:	91 e0       	ldi	r25, 0x01	; 1
 a70:	21 50       	subi	r18, 0x01	; 1
 a72:	80 40       	sbci	r24, 0x00	; 0
 a74:	90 40       	sbci	r25, 0x00	; 0
 a76:	e1 f7       	brne	.-8      	; 0xa70 <__stack+0x171>
 a78:	00 c0       	rjmp	.+0      	; 0xa7a <__stack+0x17b>
 a7a:	00 00       	nop
      //lcd.setCursor(4,0);
      _delay_ms(500);
      _co = 4;
 a7c:	84 e0       	ldi	r24, 0x04	; 4
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	9b 83       	std	Y+3, r25	; 0x03
 a82:	8a 83       	std	Y+2, r24	; 0x02
      }
    }
}
 a84:	df 91       	pop	r29
 a86:	cf 91       	pop	r28
 a88:	08 95       	ret

00000a8a <_ZN6Screen7state_6Ev>:
  LCD_clear();
  LCD_String("Factory Reset");
  _delay_ms(500);
}

void Screen::state_6(){
 a8a:	cf 93       	push	r28
 a8c:	df 93       	push	r29
 a8e:	ec 01       	movw	r28, r24
  LCD_clear();
 a90:	0e 94 56 01 	call	0x2ac	; 0x2ac <_ZN6Screen9LCD_clearEv>
  show();
 a94:	ce 01       	movw	r24, r28
 a96:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6Screen4showEv>
  LCD_Command(0XC0);
 a9a:	60 ec       	ldi	r22, 0xC0	; 192
 a9c:	ce 01       	movw	r24, r28
 a9e:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
  LCD_String("Ok          Back");
 aa2:	6b e6       	ldi	r22, 0x6B	; 107
 aa4:	71 e0       	ldi	r23, 0x01	; 1
 aa6:	ce 01       	movw	r24, r28
 aa8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN6Screen10LCD_StringEPc>
  LCD_Command(0x02);
 aac:	62 e0       	ldi	r22, 0x02	; 2
 aae:	ce 01       	movw	r24, r28
 ab0:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
  LCD_Command(0x0E);
 ab4:	6e e0       	ldi	r22, 0x0E	; 14
 ab6:	ce 01       	movw	r24, r28
 ab8:	0e 94 8c 00 	call	0x118	; 0x118 <_ZN6Screen11LCD_CommandEh>
 abc:	2f e9       	ldi	r18, 0x9F	; 159
 abe:	86 e8       	ldi	r24, 0x86	; 134
 ac0:	91 e0       	ldi	r25, 0x01	; 1
 ac2:	21 50       	subi	r18, 0x01	; 1
 ac4:	80 40       	sbci	r24, 0x00	; 0
 ac6:	90 40       	sbci	r25, 0x00	; 0
 ac8:	e1 f7       	brne	.-8      	; 0xac2 <_ZN6Screen7state_6Ev+0x38>
 aca:	00 c0       	rjmp	.+0      	; 0xacc <_ZN6Screen7state_6Ev+0x42>
 acc:	00 00       	nop
  _delay_ms(500);
}
 ace:	df 91       	pop	r29
 ad0:	cf 91       	pop	r28
 ad2:	08 95       	ret

00000ad4 <_ZN6Screen7state_8Ev>:
  LCD_String("Yes           No");
  _delay_ms(500);
}

void Screen::state_8(){
  _a , _b , _c , _d = 0,0,0,0;
 ad4:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <_d+0x1>
 ad8:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <_d>
  state_6();
 adc:	0e 94 45 05 	call	0xa8a	; 0xa8a <_ZN6Screen7state_6Ev>
 ae0:	08 95       	ret

00000ae2 <_ZN6Screen6SelectEv>:
But the code below contains only demo functions which can be modified to build the alarm menu
Will update them in my up coming commits.*/

//What to do when select button is pressed
void Screen::Select(){          
  if (_state == 0) {
 ae2:	fc 01       	movw	r30, r24
 ae4:	20 81       	ld	r18, Z
 ae6:	31 81       	ldd	r19, Z+1	; 0x01
 ae8:	21 15       	cp	r18, r1
 aea:	31 05       	cpc	r19, r1
 aec:	19 f4       	brne	.+6      	; 0xaf4 <_ZN6Screen6SelectEv+0x12>
    state_1();
 aee:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN6Screen7state_1Ev>
 af2:	08 95       	ret
  }
  else if (_state == 1){
 af4:	21 30       	cpi	r18, 0x01	; 1
 af6:	31 05       	cpc	r19, r1
 af8:	41 f4       	brne	.+16     	; 0xb0a <_ZN6Screen6SelectEv+0x28>
    _state = 6;
 afa:	26 e0       	ldi	r18, 0x06	; 6
 afc:	30 e0       	ldi	r19, 0x00	; 0
 afe:	fc 01       	movw	r30, r24
 b00:	31 83       	std	Z+1, r19	; 0x01
 b02:	20 83       	st	Z, r18
    state_6();
 b04:	0e 94 45 05 	call	0xa8a	; 0xa8a <_ZN6Screen7state_6Ev>
 b08:	08 95       	ret
  }
  else if (_state == 6){
 b0a:	26 30       	cpi	r18, 0x06	; 6
 b0c:	31 05       	cpc	r19, r1
 b0e:	41 f4       	brne	.+16     	; 0xb20 <_ZN6Screen6SelectEv+0x3e>
    _state = 7;
 b10:	27 e0       	ldi	r18, 0x07	; 7
 b12:	30 e0       	ldi	r19, 0x00	; 0
 b14:	fc 01       	movw	r30, r24
 b16:	31 83       	std	Z+1, r19	; 0x01
 b18:	20 83       	st	Z, r18
    state_7();
 b1a:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN6Screen7state_7Ev>
 b1e:	08 95       	ret
  }
  else if (_state == 2){
 b20:	22 30       	cpi	r18, 0x02	; 2
 b22:	31 05       	cpc	r19, r1
 b24:	41 f4       	brne	.+16     	; 0xb36 <_ZN6Screen6SelectEv+0x54>
    _state = 8;
 b26:	28 e0       	ldi	r18, 0x08	; 8
 b28:	30 e0       	ldi	r19, 0x00	; 0
 b2a:	fc 01       	movw	r30, r24
 b2c:	31 83       	std	Z+1, r19	; 0x01
 b2e:	20 83       	st	Z, r18
    state_8();
 b30:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN6Screen7state_8Ev>
 b34:	08 95       	ret
  }
  else if (_state == 8){
 b36:	28 30       	cpi	r18, 0x08	; 8
 b38:	31 05       	cpc	r19, r1
 b3a:	39 f4       	brne	.+14     	; 0xb4a <_ZN6Screen6SelectEv+0x68>
    _state = 7;
 b3c:	27 e0       	ldi	r18, 0x07	; 7
 b3e:	30 e0       	ldi	r19, 0x00	; 0
 b40:	fc 01       	movw	r30, r24
 b42:	31 83       	std	Z+1, r19	; 0x01
 b44:	20 83       	st	Z, r18
    state_7();
 b46:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN6Screen7state_7Ev>
 b4a:	08 95       	ret

00000b4c <_exit>:
 b4c:	f8 94       	cli

00000b4e <__stop_program>:
 b4e:	ff cf       	rjmp	.-2      	; 0xb4e <__stop_program>
